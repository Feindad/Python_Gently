/*! permutive-javascript-sdk v19.55.0 (web) (built 2023-01-25T13:06:47.830Z) */(()=>{"use strict";var __webpack_modules__={2688:(e,t,r)=>{function i(e){return e instanceof Error?e:new Error("string"==typeof e?e:JSON.stringify(e))}r.d(t,{w:()=>i})},787:(e,t,r)=>{r.d(t,{A:()=>s});var i=r(3735),n=r(6567);function s(e){return(0,i.zG)((0,n.Y3)((()=>JSON.parse(e))),(0,n.fS)(i.gn))}},7183:(e,t,r)=>{r.d(t,{h:()=>i});const i=e=>new n(e);class n{constructor(e){const t=this;this._worker=e,this._callbacks={},this._id=0,e.addEventListener("message",(function(e){n.onMessage(t,e)}))}set id(e){this._id=e}get id(){return this._id}newId(){const e=this.id;return this.id=this.id+1,e}static onMessage(e,t){if(r=t.data,!(Array.isArray(r)&&r.length>=2))return;var r;const[i,n,s]=t.data,a=e._callbacks[i];a&&(delete e._callbacks[i],a(n,s))}static isServiceWorker(e){return void 0!==e.controller}postMessage(e){const t=this,r=this.newId(),i=[r,e];return new Promise((function(e,s){var a;if(t._callbacks[r]=function(t,r){if(t)return s(new Error(t.message));e(r)},n.isServiceWorker(t._worker)){const e=new MessageChannel;e.port1.onmessage=function(e){n.onMessage(t,e)},null===(a=t._worker.controller)||void 0===a||a.postMessage(i,[e.port2])}else t._worker.postMessage(i)}))}}},4684:(e,t,r)=>{r.d(t,{M:()=>a});var i=r(655);function n(e,t){var r;if(0===t.length)return[e];const n=t.map((e=>e.properties)).map((e=>{var{client:t}=e;return(0,i._T)(e,["client"])}));return[Object.assign(Object.assign({},e),{properties:Object.assign(Object.assign({},e.properties),{aggregations:Object.assign(Object.assign({},null===(r=e.properties)||void 0===r?void 0:r.aggregations),{SlotViewable:n})})})]}const s=e=>t=>Object.entries(function(e){const t=JSON.stringify(e);return{utf8:(new TextEncoder).encode(t).length,utf16:2*t.length}}(t)).map((r=>{let[i,n]=r;return{name:"sdk_cost_analysis_event_size",value:n,labels:Object.assign(Object.assign({},e),{character_encoding:i,event_name:t.name})}}));function a(e){var t;e.permutiveData.getData("metricsEnabled")&&function(e){const{messages:t,reportEventCosts:r}=e,i=r("slotviewable_aggregation");let s=[];t.on("permutive:event:requestData",(e=>{switch(e.name){case"Pageview":s=[],i({no_aggregation:[e],scenario1:[e]});break;case"SlotViewable":{const t=JSON.parse(JSON.stringify(e));s.push(t);break}case"PageviewComplete":i({no_aggregation:[...s,e],scenario1:n(e,s)}),s=[]}}))}({messages:e.messages,reportEventCosts:(t={metrics:e.metrics},e=>r=>{Object.entries(r).flatMap((t=>{let[r,i]=t;return i.flatMap(s({cost_analysis:e,scenario:r}))})).forEach((e=>t.metrics.track(e)))})})}},1157:(e,t,r)=>{r.r(t),r.d(t,{CTVAddon:()=>l,load:()=>u});var i=r(3735),n=r(6567),s=r(2122),a=r(9853);const o=(0,a.hG)("ctv_engagement_enabled",!0),c=(0,a.hG)("ctv_engagement_event_seconds",5),u=(e,t,r)=>{0};class l{constructor(e){this.shouldTrackCTVEngagement=o&&c>0,this.DEFAULT_DURATION=0,this.options=this.validateOptions(e),this.options.videoProperties&&this.updateCustomProperties(this.options.videoProperties),this.options.viewId.generateAndSet(),this.setInitialTrackerState(this.options.duration),this.trackVideoView()}play(e){const t=()=>{this.shouldTrackCTVEngagement&&!this.timerHandle&&(this.timerHandle=this.registerEngagementInterval(c))},r=e=>(0,i.zG)(this.sanitisePosition(null!=e?e:this.pausedState.pausedPosition,(()=>0)),(e=>(this.updateResumedState({resumedPosition:e,resumedTimestamp:Date.now()}),e)),(e=>this.calculateMaximumViewedPosition(e)),(e=>this.updateCommonPlayBackState({maximumViewedPosition:e,percentageViewed:this.calculatePercentageViewed(e)})));switch(this.trackerState){case"Paused":t(),this.updateTrackerState("Resumed"),r(e);break;case"Resumed":r(e)}}pause(e){const t=e=>(0,i.zG)(this.sanitisePosition(e,(()=>this.calculateCurrentPosition())),(e=>(this.updatePausedState({pausedPosition:e,pausedTimestamp:Date.now()}),e)),(e=>this.calculateMaximumViewedPosition(e)),(e=>this.updateCommonPlayBackState({maximumViewedPosition:e,percentageViewed:this.calculatePercentageViewed(e),accumulatedEngagementTime:this.calculateAccumulatedEngagementTime()})));"Resumed"===this.trackerState&&(this.clearInterval(),this.updateTrackerState("Paused"),t(e))}stop(e){let t;const r=e=>(0,i.zG)(this.sanitisePosition(e,(()=>this.calculateCurrentPosition())),(e=>this.calculateMaximumViewedPosition(e)),(e=>this.updateCommonPlayBackState({maximumViewedPosition:e,percentageViewed:this.calculatePercentageViewed(e)})));this.clearInterval(),"Resumed"===this.trackerState?(r(e),t=this.calculateTotalEngagedTime()):"Paused"===this.trackerState&&(t=this.commonPlaybackState.accumulatedEngagementTime),this.updateTrackerState("Stopped"),this.trackVideoCompletion({completion:this.commonPlaybackState.percentageViewed,engaged_time:t})}setDuration(e){this.commonPlaybackState.totalVideoDuration=e}track(){this.options.permutive.track(...arguments)}trackVideoView(){this.track("Videoview",{isp_info:"$ip_isp_info",geo_info:"$ip_geo_info"})}trackVideoEngagement(e){this.track("VideoEngagement",{isp_info:"$ip_isp_info",geo_info:"$ip_geo_info",engaged_time:e})}trackVideoCompletion(e){this.track("VideoCompletion",{isp_info:"$ip_isp_info",geo_info:"$ip_geo_info",aggregations:{VideoEngagement:e}})}updateTrackerState(e){this.trackerState=e}registerEngagementInterval(e){return setInterval((()=>{this.trackVideoEngagement(e)}),1e3*e)}sanitisePosition(e,t){const r=(0,i.zG)((0,n.ij)(e),(0,n.UI)((e=>"number"==typeof e?Math.max(e,0):null)));return(0,n.fS)(t)(r)}calculateCurrentPosition(){return Date.now()-this.resumedState.resumedTimestamp+this.resumedState.resumedPosition}updateResumedState(e){this.resumedState=Object.assign(Object.assign({},this.resumedState),e)}updatePausedState(e){this.pausedState=Object.assign(Object.assign({},this.pausedState),e)}updateCommonPlayBackState(e){var t,r;const i=e.accumulatedEngagementTime?null!==(t=e.accumulatedEngagementTime+this.commonPlaybackState.accumulatedEngagementTime)&&void 0!==t?t:0:null!==(r=this.commonPlaybackState.accumulatedEngagementTime)&&void 0!==r?r:0;this.commonPlaybackState=Object.assign(Object.assign(Object.assign({},this.commonPlaybackState),e),{accumulatedEngagementTime:i})}setInitialTrackerState(e){this.trackerState="Paused",this.commonPlaybackState={},this.resumedState={},this.pausedState={},this.setDuration(null!=e?e:this.DEFAULT_DURATION)}calculateAccumulatedEngagementTime(){return this.pausedState.pausedTimestamp-this.resumedState.resumedTimestamp}calculateMaximumViewedPosition(e){var t;return Math.max(e,null!==(t=this.commonPlaybackState.maximumViewedPosition)&&void 0!==t?t:0)}calculateTotalEngagedTime(){return Date.now()-this.resumedState.resumedTimestamp+this.commonPlaybackState.accumulatedEngagementTime}calculatePercentageViewed(e){if(0===this.commonPlaybackState.totalVideoDuration)return 0;const t=e/this.commonPlaybackState.totalVideoDuration;return t>1||t<0?0:t}clearInterval(){clearInterval(this.timerHandle),this.timerHandle=null}updateCustomProperties(e){const t=(0,s.qh)(e);this.options.clientContext.updateContext(...t)}validateOptions(e){return Object.assign(Object.assign({},e),{duration:(e=>"number"==typeof e?e:this.DEFAULT_DURATION)(e.duration),videoProperties:(t=e.videoProperties,(0,s.Kn)(t)?t:{})});var t}}},1450:(e,t,r)=>{function i(e,t){return Object.assign(Object.assign({},e),t)}function n(e){let t=e,r=[],i=!1;return{addListener(e){if(i)return()=>{};let n=t;const s=()=>{Object.is(t,n)||(n=t,e(t))};r=[...r,s];return()=>{r=r.filter((e=>e!==s))}},notify(e){if(i)throw new Error("Ref bug: Attempted to notify a terminated notifier");Object.is(e,t)||(t=e,r.forEach((e=>e())))},terminate(){i=!0,r=[]}}}function s(e,t){let r=0;return function(){try{if(r++>0)throw new Error(e);return t(...arguments)}finally{r--}}}r.d(t,{Gc:()=>s,TS:()=>i,e2:()=>n})},3540:(e,t,r)=>{r.d(t,{a9:()=>l,Ue:()=>u,D8:()=>g,BT:()=>h,UI:()=>p,vP:()=>m,YP:()=>d});var i=r(3735),n=r(6567),s=r(2122),a=r(1450);function o(e,t){let r=[...new Set(e)].filter((e=>"final"!==e.state));if(0===r.length)return{state:"final",onStateChange:()=>()=>{}};const i=()=>0===r.length?"final":r.some((e=>"might_change"===e.state))?"might_change":"nominal",[n,s]=c(i(),(e=>"might_change"!==e&&t())),a=()=>s(i());return r.forEach((t=>{t.onStateChange((t=>{switch(t){case"final":r=e.filter((e=>"final"!==e.state)),a();break;case"might_change":s("might_change");break;case"nominal":a();break;default:throw new Error(`Ref bug: Invalid state ${t}`)}}))})),n}function c(e,t){if("final"===e)return[{state:"final",onStateChange:()=>()=>{}},()=>{}];const{terminate:r,notify:i,addListener:n}=(0,a.e2)(e),s={state:e,onStateChange:n},o=(0,a.Gc)("Disallowed recursion in Branch.",(e=>{if("final"===s.state){if("final"===e)return;throw new Error(`Attempted to change state of final branch to ${e}.`)}try{null==t||t(e),s.state=e,i(e)}finally{"final"===e&&r()}}));return[s,o]}function u(e){const[t,r,i]=function(){const[e,t]=c("nominal"),r=(0,a.Gc)("Disallowed recursion in Branch.",(r=>{if("final"===e.state)throw new Error("Attempted to mutate a finalized Ref.");const i=e.state;try{t("might_change"),r()}finally{t(i)}}));return[e,r,()=>t("final")]}(),[n,s]=f(t,e);return[n,e=>r((()=>s(e))),i]}function l(e){return{get current(){return e},onChange:()=>()=>{},branch:{state:"final",onStateChange:()=>()=>{}}}}function d(e){return t=>{const r=t.onChange(e);return e(t.current),r}}function p(e,t){if(t){const[r,i]=f(t.branch,e(t.current));return t.onChange((t=>i(e(t)))),r}return t=>p(e,t)}function m(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(0===t.length)return l([]);if(1===t.length)return p((e=>[e]))(t[0]);let i=!1;t.forEach((e=>e.onChange((()=>{if("might_change"!==e.branch.state)throw new Error("Ref bug: Received a change notification without a `might_change` state.");i=!0}))));const n=t.map((0,s.vg)("branch")),a=()=>{i&&(i=!1,d(t.map((e=>e.current))))},c=o(n,a),[u,d]=f(c,t.map((e=>e.current)));return u}function g(e){return function(e){return t=>{if("final"===t.branch.state)return t;let r=n.YP;return p((t=>{if(n.Wi(r))return r=n.G(t),t;const i=e(r.value,t);return r=n.G(i),i}),t)}}(((t,r)=>e(t,r)?t:r))}function h(e){const[t,r]=function(e){const[t,r]=c(e.state),i=e.onStateChange(r);return[t,()=>{i(),r("final")}]}(e.branch),[s,a]=f(t,e.current);let o=n.G(e.onChange(a));return[s,()=>{(0,i.zG)(o,n.UI((e=>e()))),o=n.YP,r()}]}function f(e,t){if("final"===e.state)return[l(t),()=>{}];const r=(0,a.e2)(t);e.onStateChange((e=>{"final"===e&&r.terminate()}));let i=t;return[{get current(){return i},onChange:r.addListener,branch:e},(0,a.Gc)("Disallowed recursion in Ref.",(e=>{i=e,r.notify(i)}))]}},6967:(e,t,r)=>{r(2497),r(5165)},458:(e,t,r)=>{r.d(t,{lg:()=>g,Bt:()=>h});var i=r(5846),n=r(3735),s=r(6567),a=r(6017),o=r(356),c=r(2751),u=r(2122);class l{constructor(e,t,r,i){this.userId=e,this.network=t,this.api=r,this.logger=i,this.tag="appnexus",this.ttlInSeconds=86400,this.usedForThirdPartyData=!0,this.url="https://ib.adnxs.com/getuidj",this.invalidAliases=["","0","-1"]}getId(){return this.logger.debug("identities[appnexus]: start HTTP request"),(0,u.G6)(navigator.userAgent)?Promise.resolve({type:"skipped"}):this.api.appnexus(this.url).then((e=>(this.logger.debug("identities[appnexus]: end HTTP request"),{type:"attempted",result:(0,n.zG)((0,s.DT)((e=>this.isValidAlias(e.uid)))(e),(0,s.UI)((e=>e.uid)))})),(e=>({type:"attempted",result:s.YP})))}reset(){return Promise.resolve()}isValidAlias(e){return!!e&&-1===this.invalidAliases.indexOf(e)}}class d{constructor(e,t,r,i,n){this.config=e,this.network=t,this.api=r,this.userId=i,this.logger=n,this.tag="pxid",this.ttlInSeconds=86400,this.usedForThirdPartyData=!1,this.url=`https://3a6b0682-f3e1-4576-a706-5eb4101b9cc3.${this.config.pxidHost}/${this.config.apiVersion}/pxid`,this.resetUrl=this.url+"/reset"}getId(){return this.logger.debug("identities[pxid]: start HTTP request"),(0,u.G6)(navigator.userAgent)?Promise.resolve({type:"skipped"}):this.api.pxid(this.url).then((e=>(this.logger.debug("identities[pxid]: end HTTP request"),{type:"attempted",result:(0,s.ij)(e.uid)})),(e=>({type:"attempted",result:s.YP})))}reset(){return(0,u.G6)(navigator.userAgent)?Promise.resolve():this.api.pxidReset(this.resetUrl)}}const p=new Set(["public","email","email_md5","email_sha256"]),m=(e,t)=>!!e.id&&!(0,i.t9)(c.Eq)(e.tag,t);class g{constructor(e,t,r,i,n){this.metrics=e,this.trace=t,this.permutiveData=r,this.identityProviderEnv=i,this.logger=n,this.identities={},this.providers={},this.identitiesLastModified=new Date,this.identities=this.getCachedIdentitiesAndMigrateIfRequired()}get getIdentitiesLastModified(){return this.identitiesLastModified}prepareThirdPartyIdentities(){this.logger.debug("Identities: starting to load identities");const e=this.metrics.startTimer("sdk_get_third_party_identities_task_duration_seconds",{}),t=this.trace.startSpan("load_tpd_ids"),r=[{load:e=>{return t=e.config,r=e.network,i=e.api,n=e.userId,a=e.logger,(0,s.G)(new d(t,r,i,n,a));var t,r,i,n,a}},{load:e=>{return t=e.userId,r=e.network,i=e.api,n=e.logger,(0,s.G)(new l(t,r,i,n));var t,r,i,n}},{load:e=>(e.cookies,s.YP)},{load:e=>(e.cookies,s.YP)},{load:e=>(e.metrics,e.permutiveData,e.permutive,e.messages,s.YP)}],a=(0,i.oA)(r.map((e=>e.load(this.identityProviderEnv)))).map((e=>this.shouldAskForNewIdentity(e)?this.retrieveIdentity(e):Promise.resolve((0,n.bc)(e,this.getCachedTPDIdentity(e.tag)))));return Promise.all(a).then((e=>e.map((e=>{let[t,r]=e;return this.providers[t.tag]=t,this.setTPDIdentityIfPresent(t.tag,r,t.ttlInSeconds)})))).then((()=>{this.metrics.stopTimer("sdk_get_third_party_identities_task_duration_seconds",e),t.finish()}))}getPrioritizedIdentities(e){const t={default:0,appnexus:1,pxid:1},r=Object.entries(e).map((e=>{let[t,{id:r,expiry:i,priority:n}]=e;return Object.assign(Object.assign(Object.assign({tag:t},r?{id:r}:{}),i?{expiry:i}:{}),void 0!==n?{priority:n}:{})})),n=r.filter((e=>m(e,Object.values(this.providers).map((e=>e.tag))))),a=r.filter((e=>((e,t)=>!!e.id&&!!(0,i.t9)(c.Eq)(e.tag,t))(e,Object.values(this.providers).map((e=>e.tag))))),o=(0,i.DZ)((e=>(0,s.ij)(e.priority)))(n),u=o.length>0?Math.max(...o):0,l=n.map((e=>void 0!==e.priority?Object.assign(Object.assign({},e),{priority:e.priority}):Object.assign(Object.assign({},e),{priority:u+1}))),d=a.map((e=>void 0===t[e.tag]?{tag:e.tag,id:e.id,priority:u+f}:{tag:e.tag,id:e.id,priority:u+_}));return l.concat(d)}getIdentitiesMap(){return this.getFilteredIdentities(((e,t)=>!!t.value))}getCustomerDefinedIdentitiesMap(){return this.getFilteredIdentities(((e,t)=>m({tag:e,id:t.value,expiry:t.expiry,priority:t.priority},Object.values(this.providers).map((e=>e.tag)))))}getTPDIdentitiesMap(){return this.getFilteredIdentities(((e,t)=>{var r,i;return!!t.value&&!!(null===(i=null===(r=this.providers)||void 0===r?void 0:r[e])||void 0===i?void 0:i.usedForThirdPartyData)}))}parseCustomerDefinedIdentities(e){const t=`Identify must be passed a non-empty string or list of { tag, id, priority? } tuples, value passed was '${JSON.stringify(e)}'`,r=e=>{throw new Error(e)},i=e=>(e.forEach((e=>{(e=>"string"==typeof e.id&&"string"==typeof e.tag)(e)||r(t),(e=>"email_sha256"!==e.tag||g.emailSHA256Regex.test(e.id))(e)||r("Identify called with unsupported format of email_sha256 ID. The support format is hex-encoded 64 character long lowercase string.")})),e);return"string"==typeof e?(n=e).length>0?[{id:n,tag:"default"}]:r(t):Array.isArray(e)?i(e):r(t);var n}extractIdentifyFromQueue(e){let{global:t}=e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];const i=()=>t.q.findIndex((e=>"identify"===e.functionName)),n=(e,r)=>{if(e<0)return r;const s=t.q.splice(e,1)[0],a=this.parseCustomerDefinedIdentities(s.arguments[0]);return n(i(),r.concat(a))};return n(i(),r)}checkIdentitiesHaveBeenModified(e){const t={concat:(e,t)=>c.Eq.equals(e.value,t.value)?{}:(0,n.bc)(e,t)};return(0,n.zG)((0,o.jV)(t)(this.identities)(e),u.hk,(e=>{const t=(0,a.ff)(o.xb)(e);return this.logger.debug("[identities] is modified",t,e),t}))}setIdentities(e){let t=!1;const r=e.filter((e=>!p.has(e.tag))).reduce(((e,r)=>{let{tag:i,id:n,expiry:s,priority:a}=r;return void 0===this.identities[i]&&(t=!0,this.logger.debug(`identities[${i}]: added`)),e[i]=Object.assign(Object.assign(Object.assign({},n?{value:n}:{}),s?{expiry:s}:{}),void 0!==a?{priority:a}:{}),e}),{});(t||this.checkIdentitiesHaveBeenModified(r))&&(this.identitiesLastModified=new Date),this.identities=Object.assign(Object.assign({},this.identities),r),this.logger.debug("[identities] Updating to",this.identities),this.permutiveData.setData("identities",this.identities)}reset(){return(0,n.zG)(this.identities={},(e=>Promise.all(Object.values(this.providers).map((e=>e.reset()))).then(n.Q1)))}getFilteredIdentities(e){return(0,u.m8)(...Object.entries(this.identities).filter((t=>{let[r,i]=t;return e(r,i)})).map((e=>{let[t,{value:r,expiry:i,priority:s}]=e;return(0,n.bc)(t,Object.assign(Object.assign({id:r},i?{expiry:i}:{}),void 0!==s?{priority:s}:{}))})))}shouldAskForNewIdentity(e){var t;const r=(0,s.ij)(null===(t=this.identities)||void 0===t?void 0:t[e.tag]);return(0,s.g_)((()=>!0),this.isIdentityExpired)(r)}getCachedTPDIdentity(e){return this.identities[e]?(0,s.ij)(this.identities[e].value):s.YP}setTPDIdentityIfPresent(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:86400;const i=()=>Date.now()+Math.floor(1e3*r);return(0,s.g_)((()=>this.setIdentities([{tag:e,expiry:i()}])),(t=>this.setIdentities([{tag:e,id:t,expiry:i()}])))(t)}retrieveIdentity(e){return e.getId().then((t=>"skipped"===t.type?(0,n.bc)(e,s.YP):(0,n.zG)(t.result,(t=>this.metrics.track({name:(0,s.pC)(t)?"sdk_third_party_identity_present_count":"sdk_third_party_identity_missing_count",value:1,labels:{identity_tag:e.tag}})),(r=>(0,n.bc)(e,t.result)))))}isIdentityExpired(e){return e.expiry&&Date.now()>=e.expiry}getCachedIdentitiesAndMigrateIfRequired(){return(e=>(0,u.m8)(...Object.entries(e).filter((e=>{let[t,r]=e;return!this.isIdentityExpired(r)&&!p.has(t)}))))(this.permutiveData.getData("identities")||{})}}g.emailSHA256Regex=/^[a-f0-9]{64}$/;const h=(e,t,r,n,s)=>{const a=(e,t)=>{const r=["(null)"];return r.indexOf(e)>-1||!!b[e]||(0,i.jV)(c.Eq)(t,r).length>0},o=e=>"721d6d85-35f0-4e35-bb38-13eb0d465158"===e,u={"be668577-07f5-444d-98e0-222b990951b1":a,"e43c8a90-d17b-4790-bfda-81b069b3b8c2":(e,t,r)=>["thestudentroom.co.uk"].some((e=>r.indexOf(e)>-1))&&(0,i.jV)(c.Eq)(t,["tsr-"]).length>0,"5d79bce7-5d2b-427e-a6c4-b89b6c7bf048":a,"366ab8da-5efa-4355-ab00-84db3b68ded2":e=>"96539955-4d7e-40df-882b-7e2fbacedb1c"===e||"345600e7-fb5f-48b1-9aa6-cde5396419b0"===e,"f3a06674-ebb9-4b9d-ba8f-0052018c0687":o,"38dadd0d-257a-4641-b332-b8b0fd20a6cb":o,"10453011-272d-49cd-9043-1964fdb36fd8":e=>"936ba6ac-9a8b-454d-ba98-facebd7553fe"===e},l={"fe68d1f7-c9f4-45b3-8905-7cda73d3fd74":e=>!!v[e]},d=u[e]||l[t];return!!d&&d(s,r,n)},f=2,_=3,v={},b={}},7658:(e,t,r)=>{r.d(t,{z:()=>i});class i{ingestIfEligible(e){return Promise.resolve()}}},922:(e,t,r)=>{r.d(t,{CL:()=>d,D0:()=>n,ED:()=>s,EW:()=>p,MU:()=>f,PH:()=>l,UW:()=>h,Uy:()=>c,eV:()=>a,jH:()=>m,mL:()=>g,qr:()=>o,t2:()=>u});var i=r(9853);const n=(0,i.MU)("engagement_edge_only",!0),s=(0,i.MU)("segment_transition_edge_only",!0),a=(0,i.MU)("track_form_submission",!0),o=(0,i.MU)("track_link_click",!0),c=(0,i.MU)("track_pageview_complete",!0),u=(0,i.MU)("track_pageview_engagement",!0),l=((0,i.$S)("sync_segments_cookie",!1),(0,i.$S)("track_slot_clicked",!0)),d=(0,i.$S)("track_slot_rendered",!0),p=(0,i.$S)("track_slot_viewable",!1),m=(0,i.$S)("track_targeting_keys",!1),g=((0,i.p1)("revenue_insights_enabled",!1),(0,i.p1)("data_provider_config",{ac_bidders:[]}),"_psegs"),h=!0,f=6e5},4673:(e,t,r)=>{r.d(t,{U:()=>i});const i={$ip_address:"$ip_address",$ip_address_hash:"$ip_address_hash",$ip_geo_info_city:"$ip_geo_info_city",$ip_geo_info_continent:"$ip_geo_info_continent",$ip_geo_info_country:"$ip_geo_info_country",$ip_geo_info_postal_code:"$ip_geo_info_postal_code",$ip_geo_info_province:"$ip_geo_info_province",$ip_isp_info_autonomous_system_organization:"$ip_isp_info_autonomous_system_organization",$ip_isp_info_isp:"$ip_isp_info_isp",$ip_isp_info_organization:"$ip_isp_info_organization"}},4118:(e,t,r)=>{r.d(t,{v:()=>s});class i{constructor(e,t,r,i,n,s,a){this.logger=e,this.permutive=t,this.id=r,this.segmentCode=i,this.triggerType=n,this.config=s,this.workspaceLevelConfig=a}getSegmentCode(){return this.segmentCode}getTriggerType(){return this.triggerType}getConfig(){return this.config}getWorkspaceLevelConfig(){return this.workspaceLevelConfig}trackImpression(e){return this.trackActivation("impression",e)}trackConversion(e){return this.trackActivation("conversion",e)}trackActivation(e,t){const r={reaction_id:this.id,type:e};this.permutive.track("Reaction",r,t),this.logger.log(r.type,r)}}var n=r(9853);class s{constructor(e,t,r){this.logger=e,this.permutive=t,this.clientContext=r,this.optimisedActivationsConfig={dfp:{dfp:[97805,90815,90814,90811,90810,88167,88168,88164,88165,85200,88822,88823,89055,89056,88162,88161,88163,94344,88161,88163,88162,88164,88823,88165,88168,88167,88822,89055,89056,93873,93874,97805,94257,94259,94260,94373,100884,94346,94346,100884,99839,98737,99839,98732,98732,98729,98729,99840,99841,99841,99842,99843,99844,99844,98737,99846,99848,99840,99842,99843,99845,99845,99846,99847,99848,99169,98820,99847,99849,99849,99169,98820,99850,99850,99851,99853,99853,99851,99852,94345,99852,94434,95194,98813,98813,100526,99932,99936,99934,99934,99931,99930,99932,99943,99935,99935,99943,99942,99944,99944,99941,99933,99942,99937,99941,99940,99940,99931,99930,99929,99929,99937,99936,99933,99946,99946,99968,99968,94494,94612,94500,94501,94614,100154,100154,94615,94619,94616,94620,94621,94670,94627,94636,94611,94722,90805,90806,90810,90807,90808,89080,90811,90814,90815,94507,94812,94721,94509,94742,94744,94725,94729,94728,94743,94726,94727,94724,94802,94803,94735,94736,94740,99048,94804,94732,94638,94734,94961,99048,94668,94730,94733,101259,99452,99450,99452,99450,89073,89080,89076,89078,89084,89089,101074,101075,95194,101074,90808,106574,109405,106883,106971,106426,109759,100526,94347,106839,99066,113828,90806,90807,97804,115147,114811,115146,117370,117370,99055,117703,117703,117712,117859,120544,120542,120525,114881,120545,120543,120541,120540,114093,105096,113825,113815,118625,99029,122378,123778,123778,123780,123780,127375,127377,127377,127375,127652,127652,114693,136580],dfp_legacy:{}},eyeota_pixel:[],dbm:{omitted:0},appnexus:{},appnexus_adserver:[],nativo:[],rubicon_ssp:[],smart:[],freewheel:[]}}getSpecializedActivations(e){return this.optimisedActivationsConfig[e]}getActivations(e){return(0,n.Hn)(e)("activationConfigs",[]).filter((e=>this.areContextCriteriaSatisfied(e))).map((e=>new i(this.logger,this.permutive,e.id,e.sc,e.tt,e.c,e.wc)))}areContextCriteriaSatisfied(e){const t=e.cc,r=e=>{const t=this.clientContext.getContext()[e.key];switch(e.comparison){case"EQUALS":return t===e.value;case"NOT_EQUALS":return t!==e.value;case"CONTAINS":return"string"==typeof t&&t.indexOf(e.value)>=0;case"NOT_CONTAINS":return"string"==typeof t&&t.indexOf(e.value)<0}};return!t||("AND"===(i=t).operator?i.criteria.every(r):i.criteria.some(r));var i}}},9853:(e,t,r)=>{r.d(t,{$S:()=>a,Hn:()=>n,MU:()=>s,hG:()=>c,p1:()=>o});const i={web:{auto_init:!1,track_pageview_engagement:!0,track_form_submission:!0,track_link_click:!0,track_pageview_complete:!0,add_alchemy_taxonomy:!1,add_alchemy_entities:!1,engagement_edge_only:!0,segment_transition_edge_only:!0,activationConfigs:[]},rubicon_ssp:{auto_init:!0,publisher_id:"10043",activationConfigs:[]},brightcove:{auto_init:!1,activationConfigs:[]},ctv:{auto_init:!1,ctv_engagement_enabled:!0,ctv_engagement_event_seconds:0,activationConfigs:[]},dfp:{auto_init:!0,networks:[{network_code:"1107919",name:"The Hill"},{network_code:"5678",name:"Nexstar O&O"}],track_slot_rendered:!1,track_slot_viewable:!0,track_slot_clicked:!0,activationConfigs:[]}},n=e=>{const t=i[e];return(e,r)=>{var i;return null!==(i=null==t?void 0:t[e])&&void 0!==i?i:r}},s=n("web"),a=n("dfp"),o=n("prebid"),c=(n("facebook_pixel_v2"),n("socio_demo_cohorts"),n("ctv"));n("ssp")},8671:(e,t,r)=>{r.d(t,{z:()=>s});var i=r(3030);class n{constructor(e){this.context=e}getContext(){return this.context}updateContext(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];t.forEach((e=>{let[t,r]=e;this.context[t]=r}))}}class s extends n{constructor(e){super(e)}getClient(){var e;const t=null!==(e=document.title)&&void 0!==e?e:"";return Promise.resolve({type:"web",user_agent:navigator.userAgent||"",url:(0,i.bk)(window.location.href),domain:window.location.hostname||"",title:t,referrer:(0,i.bk)(document.referrer)})}}},6634:(e,t,r)=>{r(2122)},9437:(e,t,r)=>{r.d(t,{M:()=>_,m:()=>f});var i=r(655),n=r(2688),s=r(5846),a=r(70),o=r(3735),c=r(6567),u=r(5151),l=r(9705),d=r(7548),p=r(2122),m=r(9455);const g="permutive-events-cache",h="permutive-events-for-page",f="historical";class _{constructor(e,t,r,i,n,s,a,u){this.config=e,this.namespace=t,this.logger=r,this.api=i,this.trace=n,this.metrics=s,this.userId=a,this.makeEventsStore=u,this.eventPutQueue=Promise.resolve(),this.eventsCache=this.makeEventsRepository(g),this.eventsForPage=this.makeEventsRepository(h),this.eventStore=u(),this.eventsTTLInMilliseconds=(0,o.zG)((0,c.ij)(this.config.eventsTTLInDays),(0,c.tS)((e=>"number"==typeof e&&e>0?(0,c.G)(24*e*3600):c.YP))),this.eventsCache.events=(0,p.PQ)((()=>{const e=this.trace.startSpan("load_event_cache");return this.loadFromDisk().then((t=>(e.finish(),this.logger.debug("Event cache loaded, #e",t.length),t)))})),this.readiness=this.eventsCache.events.then((()=>this.migratePreviousPagesEvents()))}migratePreviousPagesEvents(){return(0,i.mG)(this,void 0,void 0,(function*(){const e=this.trace.startSpan("migrate_previous_for_page_events"),t=(0,u.pE)((e=>(0,l.Y3)((()=>e.flush()),n.w)));return(0,o.zG)([this.eventsForPage,this.eventsCache],t,(0,u.UI)((t=>{const r=t.reduce(((e,t)=>(0,a.g_)((t=>[...e,t]),(()=>e))(t)),[]);return r.length>0&&this.api.reportError(`Migrate previous events failed. Got:\n${r.join("\n ")}`,this.userId.get()),e.finish()})),(e=>e()))}))}get eventsForCurrentPage(){return this.eventsForPage.events}all(){return Promise.all([this.eventsCache.events,this.eventsForPage.events]).then(s.xH)}resetIfNeeded(){return Promise.resolve(!1)}add(e,t){let{persistOnDisk:r}=t;return(0,i.mG)(this,void 0,void 0,(function*(){this.logger.debug("Adding to cache",e);return(yield this.eventsForPage.events).push(e),r&&this.readiness.then((()=>this.eventsForPage.flush())),e}))}filterEventsByWorkspace(e){return e}pruneEventsToSizeLimit(e){const t=this.config.eventsCacheLimitBytes;let r=2*JSON.stringify(e).length,i=1;for(;r>t;)e.splice(0,i),i*=2,r=2*JSON.stringify(e).length;return{events:e,sizeInBytes:r}}loadFromDisk(){this.logger.log("Loading event cache...");const e=this.metrics.startTimer("sdk_load_events_cache_task_duration_seconds",{}),t=e=>{this.metrics.track({name:"sdk_events_cache_byte_total",value:e.sizeInBytes,labels:{}}),this.metrics.track({name:"sdk_events_cache_size_total",value:e.events.length,labels:{}})},r=(0,o.zG)(this.eventsTTLInMilliseconds,(0,c.g_)((0,o.a9)(o.yR),(e=>(0,s.hX)((t=>e>Date.now()-t.time.getTime()))))),n=(0,o.ls)((0,c.fS)((()=>[])),u.of),a=(0,l.g_)((e=>{const t=(0,u.of)([]);return e instanceof m.m?t:(this.api.reportError(`Error fetching data from store. Got ${e}`,this.userId.get()),()=>(0,i.mG)(this,void 0,void 0,(function*(){return yield this.reset("historical"),t()})))}),n);return(0,o.zG)([this.eventStore.get(g),this.eventStore.get(h)],(0,s.UI)(a),(0,s.vP)(u.oE),(0,u.UI)((t=>(this.logger.debug("Read events from store",t),this.metrics.stopTimer("sdk_load_events_cache_task_duration_seconds",e),t))),(0,u.UI)((0,o.ls)(s.xH,this.filterEventsByWorkspace,this.pruneEventsToSizeLimit.bind(this),(e=>(this.eventsCache.sizeInBytes=e.sizeInBytes,e.events.length>0&&t(e),e.events)),(0,s.UI)(d.kJ),r)),(e=>e()))}reset(e){return(0,i.mG)(this,void 0,void 0,(function*(){return this.logger.debug("Resetting Events Cache"),(0,o.zG)(this.eventStore.deleteStore(),(0,l.UI)((()=>(this.eventStore=this.makeEventsStore(),e===f?Promise.all([this.eventsCache.reset(),this.eventsForPage.flush()]):Promise.all([this.eventsCache.reset(),this.eventsForPage.reset()])))),(0,l.UI)((()=>this.all())),(0,l.g_)((()=>(0,u.of)([])),(e=>(0,o.a9)(e))),(e=>e()))}))}getStateSizeInBytes(){return this.eventsForPage.sizeInBytes+this.eventsCache.sizeInBytes}makeEventsRepository(e){const t={key:e,events:Promise.resolve([]),sizeInBytes:0,flush:()=>(0,i.mG)(this,void 0,void 0,(function*(){const e=yield t.events;this.logger.debug("Writing",e.length,"events to",t.key);const r=this.trace.startSpan(`write_${t.key}`),i=JSON.stringify(e);return t.sizeInBytes=2*i.length,this.eventPutQueue=this.eventPutQueue.then((i=>this.eventStore.put(e.map(d.XO),t.key)().then((e=>{if((0,a.nM)(e)){(e=>{const r=`Events cache failed to put ${t.key}. Got ${e}`;return e instanceof m.m?this.logger.error(r):this.api.reportError(r,this.userId.get())})(e.left)}r.finish()}))))})),reset:()=>(t.events=Promise.resolve([]),t.sizeInBytes=0,t.flush())};return t}}},525:(e,t,r)=>{r.d(t,{K:()=>U});class i{constructor(){this.crypto=window.crypto||window.msCrypto,this.ALG_NAME="AES-GCM"}isAvailable(){var e;return!!(null===(e=this.crypto)||void 0===e?void 0:e.subtle)}generateKey(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this.crypto.subtle.generateKey({name:this.ALG_NAME,length:256},e,["encrypt","decrypt"])}encrypt(e,t){const[r,i]=this._encrypt(e,this.str2bytes(t));return r.then((e=>{const t=new Uint8Array(16+e.byteLength);return t.set(i,0),t.set(new Uint8Array(Uint32Array.of(e.byteLength).buffer),12),t.set(new Uint8Array(e),16),t.buffer}))}decrypt(e,t){const r=new Uint8Array(t,0,12),i=new Uint32Array(t,12,1)[0],n=t.slice(16,16+i);return this._decrypt(e,r,n).then(this.bytes2str)}_encrypt(e,t){const r=this.crypto.getRandomValues(new Uint8Array(12));return[this.crypto.subtle.encrypt({name:this.ALG_NAME,iv:r},e,t),r]}_decrypt(e,t,r){return this.crypto.subtle.decrypt({name:this.ALG_NAME,iv:t},e,r)}str2bytes(e){return(new TextEncoder).encode(e).buffer}bytes2str(e){return(new TextDecoder).decode(e)}}var n=r(2688),s=r(70),a=r(6567),o=r(9705);var c=r(3735),u=r(5203),l=r(655);let d,p;const m=new WeakMap,g=new WeakMap,h=new WeakMap,f=new WeakMap,_=new WeakMap;let v={get(e,t,r){if(e instanceof IDBTransaction){if("done"===t)return g.get(e);if("objectStoreNames"===t)return e.objectStoreNames||h.get(e);if("store"===t)return r.objectStoreNames[1]?void 0:r.objectStore(r.objectStoreNames[0])}return w(e[t])},set:(e,t,r)=>(e[t]=r,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function b(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(p||(p=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(E(this),t),w(m.get(this))}:function(...t){return w(e.apply(E(this),t))}:function(t,...r){const i=e.call(E(this),t,...r);return h.set(i,t.sort?t.sort():[t]),w(i)}}function y(e){return"function"==typeof e?b(e):(e instanceof IDBTransaction&&function(e){if(g.has(e))return;const t=new Promise(((t,r)=>{const i=()=>{e.removeEventListener("complete",n),e.removeEventListener("error",s),e.removeEventListener("abort",s)},n=()=>{t(),i()},s=()=>{r(e.error||new DOMException("AbortError","AbortError")),i()};e.addEventListener("complete",n),e.addEventListener("error",s),e.addEventListener("abort",s)}));g.set(e,t)}(e),t=e,(d||(d=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((e=>t instanceof e))?new Proxy(e,v):e);var t}function w(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,r)=>{const i=()=>{e.removeEventListener("success",n),e.removeEventListener("error",s)},n=()=>{t(w(e.result)),i()},s=()=>{r(e.error),i()};e.addEventListener("success",n),e.addEventListener("error",s)}));return t.then((t=>{t instanceof IDBCursor&&m.set(t,e)})).catch((()=>{})),_.set(t,e),t}(e);if(f.has(e))return f.get(e);const t=y(e);return t!==e&&(f.set(e,t),_.set(t,e)),t}const E=e=>_.get(e);function k(e,t,{blocked:r,upgrade:i,blocking:n,terminated:s}={}){const a=indexedDB.open(e,t),o=w(a);return i&&a.addEventListener("upgradeneeded",(e=>{i(w(a.result),e.oldVersion,e.newVersion,w(a.transaction))})),r&&a.addEventListener("blocked",(()=>r())),o.then((e=>{s&&e.addEventListener("close",(()=>s())),n&&e.addEventListener("versionchange",(()=>n()))})).catch((()=>{})),o}function S(e,{blocked:t}={}){const r=indexedDB.deleteDatabase(e);return t&&r.addEventListener("blocked",(()=>t())),w(r).then((()=>{}))}const D=["get","getKey","getAll","getAllKeys","count"],P=["put","add","delete","clear"],M=new Map;function q(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(M.get(t))return M.get(t);const r=t.replace(/FromIndex$/,""),i=t!==r,n=P.includes(r);if(!(r in(i?IDBIndex:IDBObjectStore).prototype)||!n&&!D.includes(r))return;const s=async function(e,...t){const s=this.transaction(e,n?"readwrite":"readonly");let a=s.store;return i&&(a=a.index(t.shift())),(await Promise.all([a[r](...t),n&&s.done]))[0]};return M.set(t,s),s}v=(e=>({...e,get:(t,r,i)=>q(t,r)||e.get(t,r,i),has:(t,r)=>!!q(t,r)||e.has(t,r)}))(v);var O=r(5151),I=r(2122);function x(e){return"development"===e.environment?window.isSecureContext:"https:"===window.location.protocol}class T{constructor(e,t,r,i,n,s,a){this.namespace=e,this.logger=t,this.cryptoAlg=r,this.idb=i,this.mainObjectStore=n,this.keyObjectStore=s,this.keyObjectKey=a,this.MAX_CONSECUTIVE_PUTS=30,this.puts=1,this.hasForcedCompaction=!1,this.logger.debug("IDB: Created",this.idb),this.cryptoKey=this.getOrGenerateKey()}static initialise(e,t,r,i,n,a,u,l,d,p){const m=(0,I.G6)(navigator.userAgent)&&!1,g=[x(e),n.isAvailable(),!m].every((e=>!0===e)),h=(e,t,r)=>t.includes(r)?(0,c.Q1)():e.createObjectStore(r),f=g?(0,s.Y3)((()=>function(e){if(!(0,I.G6)(navigator.userAgent)||!indexedDB.databases)return Promise.resolve();let t,r=0;return new Promise((e=>{const i=()=>(r++,indexedDB.databases().finally(e));t=window.setInterval(i,100),i()})).finally((()=>{clearInterval(t),e.track({name:"sdk_idb_conn_attempt_safari_count",value:r,labels:{}})}))}(r).then((()=>k(a,p,{upgrade:e=>{const t=[...e.objectStoreNames];h(e,t,u),h(e,t,l)}})))),(e=>String(e))):(0,s.t$)("Connection not attempted. Default to localStorage");return(0,s.g_)((e=>(0,o.t$)(e)),(e=>(0,o.Y3)((()=>e.then((e=>new T(t,i,n,e,u,l,d)))),(e=>String(e)))))(f)}put(e,t){return(0,l.mG)(this,void 0,void 0,(function*(){return(0,c.zG)((()=>(0,l.mG)(this,void 0,void 0,(function*(){return(0,c.bc)(JSON.stringify(e),yield this.cryptoKey)}))),(0,O.tS)((e=>{let[t,r]=e;return(0,O.of)(this.cryptoAlg.encrypt(r,t))})),(0,O.tS)((e=>()=>(0,l.mG)(this,void 0,void 0,(function*(){return yield this.resetIfRequired(this.puts++),e})))),(0,O.tS)((e=>(0,o.Y3)((()=>this.idb.put(this.mainObjectStore,e,this.namespace.getNamespacedStorageKey(String(t)))),n.w))),(0,O.UI)((0,s.g_)((r=>{throw this.logger.error(`IDB: Failed to put "${t.toString()}" value`,e,". Got \n",r),"QuotaExceededError"===r.name&&this.forceCompaction(),r}),(()=>t))),(e=>e()))}))}get(e){return this.cryptoKey.then((t=>(0,c.zG)(this.namespace.getNamespacedStorageKey(String(e)),(r=>this.idb.get(this.mainObjectStore,r).then((e=>e?this.cryptoAlg.decrypt(t,e):null)).then(JSON.parse).catch((t=>{const r=(0,n.w)(t);throw this.logger.error(`IDB: Get ${e.toString()} failed. Got`,r),r}))))))}delete(e){return(0,c.zG)(this.namespace.getNamespacedStorageKey(String(e)),(e=>this.idb.delete(this.mainObjectStore,e)))}deleteStore(){return this.logger.debug("IDB: Deleting",this.idb),this.idb.close(),S(this.idb.name)}getOrGenerateKey(){return(0,c.zG)(this.namespace.getNamespacedStorageKey(this.keyObjectKey),(e=>this.idb.get(this.keyObjectStore,e).then((e=>e||this.storeGivenOrGeneratedKey())).catch((e=>{const t=(0,n.w)(e);return this.logger.error("IDB: Get or generate key failed. Got\n",t),this.cryptoAlg.generateKey(!1)}))))}storeGivenOrGeneratedKey(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.cryptoAlg.generateKey(!1);return(0,c.zG)((0,O.of)(this.namespace.getNamespacedStorageKey(this.keyObjectKey)),(0,O.tS)((t=>(0,o.Y3)((()=>(0,l.mG)(this,void 0,void 0,(function*(){return this.idb.put(this.keyObjectStore,yield e,t)}))),n.w))),(0,O.UI)((0,s.g_)((e=>{throw this.logger.error(`IDB: Failed to store crypto key to ${this.keyObjectStore} due to unexpected error,\n`,e),e}),(()=>e))),(e=>e()))}forceCompaction(){if(this.hasForcedCompaction)return null;this.hasForcedCompaction=!0,this.logger.debug("Attempting to force compaction");const e=`__${this.mainObjectStore}`;return k(e).then((t=>(t.close(),S(e))))}resetIfRequired(e){return(0,I.G6)(navigator.userAgent)&&e%this.MAX_CONSECUTIVE_PUTS==0?this.reset():Promise.resolve()}reset(){return(0,l.mG)(this,void 0,void 0,(function*(){const e=this.idb.name,t=this.idb.version;yield this.deleteStore(),this.idb=yield k(e,t),this.idb.createObjectStore(this.mainObjectStore),this.idb.createObjectStore(this.keyObjectStore),yield this.storeGivenOrGeneratedKey(this.cryptoKey),this.logger.debug("IDB: Reset to",this.idb)}))}}var A=r(824),C=r(9455);class R{constructor(e,t,r,i,n,a,o,l,d,p){this.version=3,this.db=((e,t,r,i,n,s,a,o,l,d,p)=>(0,c.zG)(T,(0,u._)({logger:d,consentTracking:p})).initialise(e,t,r,d,i,n,s,a,o,l))(e,t,r,i,n,a,o,l,this.version,d,p)().then((0,s.fS)((e=>(0,A.S)(t,d,p))))}shouldThrowStoreClosingError(e){return"NotFoundError"===e.name||"InvalidStateError"===e.name}makeStoreClosingDuringOpertationError(e){return new C.m(`Attempted ${e} when the current store is closing.`)}put(e,t){return(0,o.Y3)((()=>this.db.then((r=>r.put(e,t)))),(e=>{const t=(0,n.w)(e);return this.shouldThrowStoreClosingError(t)?this.makeStoreClosingDuringOpertationError("put"):t}))}get(e){return(0,o.Y3)((()=>this.db.then((t=>t.get(e))).then(a.ij)),(e=>{const t=(0,n.w)(e);return this.shouldThrowStoreClosingError(t)?this.makeStoreClosingDuringOpertationError("get"):t}))}delete(e){return(0,o.Y3)((()=>this.db.then((t=>t.delete(e)))),(e=>String(e)))}deleteStore(){return(0,o.Y3)((()=>this.db.then((e=>e.deleteStore()))),(e=>String(e)))}}var L=r(9437);class U extends L.M{constructor(e,t,r,n,s,a,o,c){super(e,t,r,n,s,a,o,(()=>new R(e,t,a,new i,"3a6b0682-f3e1-4576-a706-5eb4101b9cc3",`events_${o.get()}`,`keys_${o.get()}`,"events",r,c)))}}},6052:(e,t,r)=>{r.d(t,{X:()=>i});class i{constructor(){this.properties={}}overrideCustomProps(e){this.properties=e}getCustomProps(){return this.properties}}},9114:(e,t,r)=>{r.d(t,{c:()=>o});var i=r(2688),n=r(3735),s=r(7548),a=r(4730);class o{constructor(e,t,r,i,n,s){this.eventHandler=e,this.api=t,this.metrics=r,this.userId=i,this.network=n,this.eventsCache=s,this.DEBOUNCE_TIME=500,this.MAX_DEBOUNCE_TIME=5e3,this.batch={requestData:[],requestOptions:[],processingStrategies:[]},this.scheduler=new a.b(this.DEBOUNCE_TIME,this.MAX_DEBOUNCE_TIME),this.debouncedFlushIfNotEmpty=this.scheduler.schedule(this.flush.bind(this)),this.scheduler.scheduleForPageUnload((()=>this.flushWithBeacon.bind(this)(this.batch)))}add(e,t,r){return this.batch.requestData.push(e),this.batch.requestOptions.push(t),this.batch.processingStrategies.push(r),this.debouncedFlushIfNotEmpty(this.batch),Promise.resolve()}flush(e){return this.flushIfNotEmpty(e,!1)}flushWithBeacon(e){return this.flushIfNotEmpty(e,!0)}flushIfNotEmpty(e,t){const{requestData:r,requestOptions:s,processingStrategies:a}=e,o=e=>this.api.reportError(`Error sending events batch. Got ${(0,i.w)(e)}`,this.userId.get()),c=t?(0,n.ls)((e=>this.api.trackBatchBeacon(e)),(e=>Promise.resolve())):e=>this.api.trackBatch(this.metrics,e);return r.length>0?(0,n.zG)(this.resetBatch(),(e=>this.trackMetrics(r)),(e=>c(r).then((e=>this.isBatchResponse(e)?this.onBatchResponseSuccess(e,r,s,a):(0,n.Q1)())).catch(o))):Promise.resolve()}onBatchResponseSuccess(e,t,r,i){const a=(e,t)=>"never"!==t?(0,n.ls)((()=>this.eventHandler.newEvent((0,s.XO)(e),null)),(()=>this.eventsCache.add(e,{persistOnDisk:!0}))):n.Q1,o=(e,t,r)=>{const i={name:t.name,session_id:t.session_id,view_id:t.view_id,properties:t.properties,id:null,time:(new Date).toISOString()};return(0,n.zG)(r(e.error.message),(t=>console.error(e)),(t=>this.eventHandler.newEvent(i,e)))};return e.forEach(((e,c)=>{let{body:u}=e;const l=t[c],d=r[c],p=i[c];return(0,s.bk)(u)?o(u,l,d.error):((e,t,r,i)=>{const o=(0,s.mh)(e,t);return(0,n.zG)(r(o),a(o,i))})(u,l,d.success,p)}))}resetBatch(){this.batch={requestData:[],requestOptions:[],processingStrategies:[]}}trackMetrics(e){this.metrics.track({name:"sdk_events_batch_size_total",value:e.length,labels:{}}),this.metrics.track({name:"sdk_events_batch_size_bytes",value:2*JSON.stringify(e).length,labels:{}})}isBatchResponse(e){return!!e}}},389:(e,t,r)=>{r.d(t,{p:()=>s});var i=r(3577);const n="permutive-pvc";class s extends((0,i.h)(n)){constructor(e){super(e)}}},5865:(e,t,r)=>{r.d(t,{J:()=>n});var i=r(3577);class n extends((0,i.h)("permutive-unprocessed-pba")){constructor(e){super(e)}}},3577:(e,t,r)=>{r.d(t,{h:()=>o});var i=r(3735),n=r(6567),s=r(824);const a=e=>t=>class extends t{constructor(){super(...arguments),this.key=e}put(e){return this.db.then((t=>t.put(e,this.key))).then(i.Q1)}getIfPresent(){return this.db.then((e=>e.get(this.key))).then(n.ij)}reset(){return this.db.then((e=>e.delete(this.key)))}},o=e=>(0,i.zG)(class{constructor(e){this.db=Promise.resolve((0,s.S)(e.namespace,e.logger,e.consentTracking))}},a(e))},5700:(e,t,r)=>{r.d(t,{LP:()=>s,dG:()=>i,eP:()=>n});const i=4096,n=`Cookie exceeds maximum supported size of ${i} bytes for most browsers.`,s="Cookie is missing required parameters."},8404:(e,t,r)=>{r.d(t,{S:()=>c});var i=r(3735),n=r(5700);class s{constructor(e,t,r){this.namespace=e,this.config=t,this.logger=r}setCookie(e,t){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var i;if(!(t&&e&&this.config.cookieExpiry&&this.config.cookieDomain)){const{cookieExpiry:r,cookieDomain:s}=null!==(i=this.config)&&void 0!==i?i:{};throw this.logger.warn(`Unable to set cookie. ${n.LP}`,{value:t,cookieName:e,cookieExpiry:r,cookieDomain:s}),new Error(n.LP)}const s=this.namespace.getNamespacedStorageKey(e),a=[encodeURIComponent(s),"=",encodeURIComponent(t),"; expires=",this.config.cookieExpiry,"; domain=",this.config.cookieDomain,"; path=/",r?"; samesite=none; secure":""].join("");if(a.length>n.dG)throw this.logger.warn(`Unable to set cookie ${s}. ${n.eP}`),new Error(n.eP);return this.logger.debug(`Setting cookie ${a}`),document.cookie=a,!0}getCookie(e){const t=arguments.length>1&&void 0!==arguments[1]&&arguments[1]?e:this.namespace.getNamespacedStorageKey(e),r=new RegExp("\\b"+encodeURIComponent(t)+"=([^;]+)").exec(document.cookie);return null!==r?decodeURIComponent(r[1]):null}deleteCookie(e){if(!e||!this.config.cookieDomain)return!1;const t=this.namespace.getNamespacedStorageKey(e);return document.cookie=encodeURIComponent(t)+"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; domain="+this.config.cookieDomain+"; path=/",!0}}var a=r(4769);const o=e=>{const{logger:t,consentTracking:r}=e,i=e=>(t.debug(`Cookie: Failed to set cookie ${e} as consent is revoked`),!1);return e=>class extends e{constructor(){super(...arguments),this.setCookie=(0,a.v)(super.setCookie.bind(this),i,r.isRevoked)}}},c=(e,t,r,n)=>new((0,i.zG)(s,o({consentTracking:n,logger:r})))(e,t,r)},8076:(e,t,r)=>{r.d(t,{S:()=>l});var i=r(3735),n=r(2688),s=r(787),a=r(70);class o{constructor(e){this.namespace=e}getExternalData(e){const t=this.namespace.getNamespacedStorageKey(e);return window.localStorage.getItem(t)}getExternalJsonData(e){return(0,i.zG)(this.getExternalData(e),s.A)}setExternalData(e,t){const r=this.namespace.getNamespacedStorageKey(e);try{window.localStorage.setItem(r,t)}catch(e){}}setExternalJsonData(e,t){return(0,i.zG)((r=t,(0,a.Y3)((function(){var e=JSON.stringify(r);if("string"!=typeof e)throw new Error("Converting unsupported structure to JSON");return e}),i.yR)),(0,a.UI)((t=>this.setExternalData(e,t))),(0,a.g_)((e=>{throw(0,n.w)(e)}),i.Q1));var r}removeExternalData(e){const t=this.namespace.getNamespacedStorageKey(e);window.localStorage.removeItem(t)}}var c=r(4769);const u=e=>{const{logger:t,consentTracking:r}=e,i=e=>{t.debug(`External Data: Failed to set key ${e} as consent is revoked`)},n=i,s=i;return e=>class extends e{constructor(){super(...arguments),this.setExternalData=(0,c.v)(super.setExternalData.bind(this),n,r.isRevoked),this.setExternalJsonData=(0,c.v)(super.setExternalJsonData.bind(this),s,r.isRevoked)}}},l=(e,t,r)=>new((0,i.zG)(o,u({consentTracking:r,logger:t})))(e)},9849:(e,t,r)=>{r.d(t,{P:()=>i});class i{constructor(e,t,i,n,s,a,o,c,u){let l=arguments.length>9&&void 0!==arguments[9]?arguments[9]:[],d=arguments.length>10&&void 0!==arguments[10]?arguments[10]:{};this.logger=e,this.network=t,this.userId=i,this.viewId=n,this.messages=s,this.sessionManager=a,this.cookies=o,this.externalData=c,this.api=u,this.blockers=l,this.addons=d,this.listenForBlockers=!0,Promise.resolve().then(r.bind(r,9078)).then((e=>{this.extMessages=new e.PermutiveMessages(this),this.messages.emit("permutive:internals:extMessages:ready")}))}makeSafe(e){var t=this;return function(){try{return e(...arguments)}catch(e){t.api.reportError(e,t.userId.get())}}}utcNow(){const e=new Date;return new Date(e.toUTCString())}addBlocker(e){this.blockers.push(e),this.logger.log("<blockers> added blocker "+e),this.messages.on(e,(()=>{if(this.listenForBlockers){const t=this.blockers.indexOf(e);t>=0&&(this.blockers.splice(t,1),this.logger.log("<blockers> removed blocker "+e)),0===this.blockers.length&&(this.listenForBlockers=!1,this.messages.emit("permutive:blockers:empty"),this.logger.log("<blockers> complete"))}}))}}},342:(e,t,r)=>{r.d(t,{SX:()=>s});class i{constructor(){this.prefix="[Permutive]",this.debugStyle=["color: blue"].join(";")}log(){return console.log.bind(window.console,this.prefix)(...arguments)}debug(){return console.debug.bind(window.console,"%c%s",this.debugStyle,this.prefix)(...arguments)}warn(){return console.warn.bind(window.console,this.prefix)(...arguments)}error(){return console.error.bind(window.console,this.prefix)(...arguments)}}class n{log(){}debug(){}warn(){}error(){}}const s=e=>{var t;return e.loggingEnabled&&void 0!==(null===(t=window.console)||void 0===t?void 0:t.log)?new i:new n}},8491:(e,t,r)=>{r.d(t,{Q:()=>s});var i=r(3735);const n="[MESSAGES]";class s{constructor(e){this.logger=e,this.messageListenerMap={},this.replayQueue={},this.onceTracker={},this.defaultMessageOptions={withReplay:!1,once:!1}}on(e,t,r){var i,n,s;const a=this.mergeMessageOptions(r);null!==(i=(s=this.messageListenerMap)[e])&&void 0!==i||(s[e]=[]),a.withReplay&&this.processReplayQueue(e,t);const o=(null===(n=this.messageListenerMap[e])||void 0===n?void 0:n.push(t))-1;return a.once&&this.addToOnceTracker(e,o),o}once(e,t){return this.on(e,t,{once:!0})}off(e,t){if(null==t)return this.messageListenerMap[e]=[],void(this.replayQueue[e]=[]);t<0?this.logError('Index for "off" fell out of range',{index:t}):this.messageListenerMap[e][t]=i.Q1}emit(e,t,r){var i;const n=this.mergeMessageOptions(r);(null===(i=this.messageListenerMap[e])||void 0===i?void 0:i.length)>0?(this.logDebug(`Emitting Event: ${e}`),this.emitMessageWithPayload(e,t)):n.withReplay&&this.addToReplayQueue(e,t)}addToReplayQueue(e,t){var r,i;null!==(r=(i=this.replayQueue)[e])&&void 0!==r||(i[e]=[]),this.replayQueue[e].push(t)}processReplayQueue(e,t){var r;null===(r=this.replayQueue[e])||void 0===r||r.forEach((e=>t(e)))}emitMessageWithPayload(e,t){var r;null===(r=this.messageListenerMap[e])||void 0===r||r.forEach(((r,i)=>{r(t),this.removeListenerIfSetToFireOnlyOnce(e,i)}))}addToOnceTracker(e,t){var r,i;null!==(r=(i=this.onceTracker)[e])&&void 0!==r||(i[e]=[]),this.onceTracker[e].push(t)}removeListenerIfSetToFireOnlyOnce(e,t){var r;(null===(r=this.onceTracker[e])||void 0===r?void 0:r.includes(t))&&this.off(e,t)}mergeMessageOptions(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Object.assign(Object.assign({},this.defaultMessageOptions),e)}logError(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];this.logger.error(n,...t)}logDebug(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];this.logger.debug(n,...t)}}},4666:(e,t,r)=>{r.d(t,{p:()=>h});var i=r(655),n=r(2688),s=r(3735),a=(r(7341),r(9384)),o=function(e,t){return function(){return t(e())}},c=function(e){return function(t){return o(t,e)}},u=s.a9,l=(s.yR,s.yR,a.F4,a.Xl,function(){return Math.random()});function d(e,t){return(0,s.zG)(l,c((function(r){return Math.floor((t-e+1)*r+e)})))}c((function(e){return e<.5}));var p=r(356),m=r(4673),g=r(2122);const h=e=>{const t={metricsToSend:[]},r="[Metrics Reporter]",a=a=>{let{metrics:o,enrichers:c,api:u}=a;return(0,i.mG)(void 0,void 0,void 0,(function*(){const i=o.consume();if(0===i.length&&0===t.metricsToSend.length)return!0;t.metricsToSend=[...t.metricsToSend,...i];try{return yield u.metrics({context:Object.assign(Object.assign({},(0,s.zG)({},(0,s.ls)((0,p.dx)("continent",m.U.$ip_geo_info_continent),(e=>c.enrich(e,!0).output)))),{environment:"web",sdk_version:"v19.55.0",events_count:0,segments_count:0}),items:t.metricsToSend}),t.metricsToSend=[],!0}catch(i){return function(){for(var t=arguments.length,i=new Array(t),n=0;n<t;n++)i[n]=arguments[n];e.logger.error(r,...i)}(`Failed to publish metrics ${(0,n.w)(i).message}`,t.metricsToSend),!1}}))};e.messages.on("permutive:ready",(()=>{const t=d(3e4,9e4),r=n=>window.setTimeout((()=>(0,i.mG)(void 0,void 0,void 0,(function*(){const i=(yield a(e))?5e3:t();r(i)}))),n);r(5e3),(0,g.aq)((()=>a(e)))}))}},4074:(e,t,r)=>{function i(e,t,r,i,a){var o;return(null!==(o=r.getData("metricsEnabled"))&&void 0!==o?o:(()=>{const e=Math.random()<=t.metricsSamplingPercentage/100;return r.setData("metricsEnabled",e),e})())?new n(e,i,a):new s}r.d(t,{g:()=>i});class n{constructor(e,t,r){this.sdkInitTimestamp=e,this.messages=t,this.logger=r,this.prefix="[Metrics]",this.pendingMetrics=[],this.pendingTimers={},this.track({name:"sdk_initialisation_start_time_seconds",value:e/1e3,labels:{}})}consume(){const e=this.pendingMetrics;return this.pendingMetrics=[],e}track(e){this.logDebug(`Tracking ${e.name}`,{metric:e}),this.pendingMetrics.push(e)}trackTimeSinceInit(e,t){const r=(performance.now()-this.sdkInitTimestamp)/1e3;this.logDebug("timer stopped",e,r),this.track({name:e,value:r,labels:t})}startTimer(e,t){const r=performance.now(),i=this.generateRandomKey(e);return this.pendingTimers[i]={startTime:r,labels:t},i}stopTimer(e,t){const r=this.pendingTimers[t];if(r){const i=(performance.now()-r.startTime)/1e3;this.logDebug("timer stopped",e,i),this.track({name:e,value:i,labels:r.labels}),delete this.pendingTimers[t]}}generateRandomKey(e){return`${e}-${[...Array(24)].map((()=>Math.random().toString(36)[2])).join("")}`}logDebug(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];this.logger.debug(this.prefix,...t)}}class s{consume(){return[]}track(e){}trackTimeSinceInit(e,t){}startTimer(e,t){return""}stopTimer(e,t){}}},3382:(e,t,r)=>{r.d(t,{AG:()=>o,UC:()=>s,Yh:()=>a});var i=r(6567),n=r(2122);const s=(e,t,r)=>e in t||(()=>{const t="number"==typeof e?e:parseInt(e);return!1===isNaN(t)&&r.has(t)})(),a=e=>(0,n.b0)(e,((e,t)=>t.state?(0,i.G)({[t.checksum]:t.state}):i.YP));function o(e){var t;return["SegmentEntry","SegmentExit"].includes(e.name)&&void 0!==(null===(t=e.properties)||void 0===t?void 0:t.segment_number)}},1117:(e,t,r)=>{r.d(t,{c:()=>cr,e:()=>ar});var i=r(7183),n=r(3735),s=r(1045),a=r(655);const o=()=>({kind:"null",value:null}),c=e=>({kind:"string",value:e}),u=e=>({kind:"number",value:e}),l=e=>({kind:"array",value:e}),d=e=>({kind:"object",value:e}),p=e=>e,m=()=>({kind:"bottom"}),g=e=>({kind:"inner",a:e}),h=e=>({kind:"top",error:e}),f=e=>({kind:"unbounded",group:e}),_=(e,t)=>({kind:"windowed",key:t,group:e}),v=(e,t,r)=>({kind:"countLimit",n:r,limit:t,group:e}),b=(e,t,r)=>({kind:"uniqueLimit",n:r,limit:t,group:e}),y=e=>({kind:"numberGroup",group:e}),w=e=>({kind:"stringGroup",group:e}),E=e=>({kind:"tuple",tuple:e}),k=e=>({state:e}),S=(e,t)=>({commands:e,payload:t});function D(e){return e}function P(e,t,r,i,n,s,a,o,c){switch(arguments.length){case 1:return e;case 2:return t(e);case 3:return r(t(e));case 4:return i(r(t(e)));case 5:return n(i(r(t(e))));case 6:return s(n(i(r(t(e)))));case 7:return a(s(n(i(r(t(e))))));case 8:return o(a(s(n(i(r(t(e)))))));case 9:return c(o(a(s(n(i(r(t(e))))))));default:for(var u=arguments[0],l=1;l<arguments.length;l++)u=arguments[l](u);return u}}var M=function(e){return{equals:function(t,r){return t===r||e(t,r)}}},q=function(e){return M((function(t,r){for(var i in e)if(!e[i].equals(t[i],r[i]))return!1;return!0}))},O=function(e){return function(t,r){return t===r||0===e(t,r)}},I=function(e){return{equals:O(e),compare:function(t,r){return t===r?0:e(t,r)}}},x=function(e){return function(t){return I((function(r,i){return t.compare(e(r),e(i))}))}},T=function(e){return function(t,r){return-1===e.compare(t,r)}},A=function(e){return function(t,r){return 1===e.compare(t,r)}},C=function(e){return function(t,r){return t===r||e.compare(t,r)>-1?t:r}};var R={equals:function(e,t){return e===t}},L={equals:R.equals,compare:function(e,t){return e<t?-1:e>t?1:0}};const U=(e,t)=>{switch(e.kind){case"bottom":return{kind:"bottom"};case"inner":return g(t(e.a));case"top":return h(e.error)}},j=e=>I(((t,r)=>{if("bottom"===t.kind&&"bottom"===r.kind)return 0;if("bottom"===t.kind)return-1;if("bottom"===r.kind)return 1;if("top"===t.kind&&"top"===r.kind)return L.compare(t.error,r.error);if("top"===t.kind)return 1;if("top"===r.kind)return-1;if("inner"===t.kind&&"inner"===r.kind)return e.compare(t.a,r.a);throw new Error("Non exhaustive match in extendedAlgebraOrd")}));var B=function(e,t){for(var r=0,i=t.length,n=e.length;r<i;r++,n++)e[n]=t[r];return e},G=function(e){return"Some"===e._tag},N={_tag:"None"},W=function(e){return{_tag:"Some",value:e}},F=function(e){return"Left"===e._tag},z=(Object.prototype.hasOwnProperty,function(e){return B([e[0]],e.slice(1))});var K=N,$=W;function V(e){return function(t){return e(t)?$(t):K}}var H=function(e){return"Left"===e._tag?K:$(e.right)},Q=function(e){return{equals:function(t,r){return t===r||(ee(t)?ee(r):!ee(r)&&e.equals(t.value,r.value))}}},Y=function(e){return{equals:Q(e).equals,compare:function(t,r){return t===r?0:Z(t)?Z(r)?e.compare(t.value,r.value):1:-1}}},J=function(e){return function(t){return ee(t)?K:$(e(t.value))}},X=H,Z=G,ee=function(e){return"None"===e._tag},te=function(e){return function(t){return ee(t)?e():t.value}};var re;re=void 0;var ie=function(e){return e[0]},ne=ie;var se=function(e,t){for(var r=0,i=t.length,n=e.length;r<i;r++,n++)e[n]=t[r];return e},ae=function(e){return e.length>0},oe=function(e,t){return e<0||e>=t.length},ce=function(e){return function(t){return se([e],t)}},ue=ce,le=function(e){return function(t){return se(se([],t),[e])}},de=le,pe=z,me=function(e){return ae(e)?W(e):N},ge=function(e){return function(t){for(var r=Math.max(0,Math.floor(t)),i=[e(0)],n=1;n<r;n++)i.push(e(n));return i}};var he=pe;var fe=function(e){return function(t){var r=Math.max(1,e);return r>=t.length?[he(t),[]]:[P(t.slice(1,r),ue(ve(t))),t.slice(r)]}},_e=function(e){return M((function(t,r){return t.length===r.length&&t.every((function(t,i){return e.equals(t,r[i])}))}))},ve=ne;var be={equals:function(e,t){return e===t}},ye={equals:be.equals,compare:function(e,t){return e<t?-1:e>t?1:0}};var we=function(e,t){return function(r){for(var i=r.length,n=e,s=0;s<i;s++)n=t(s,n,r[s]);return n}};var Ee=function(e){return 0===e.length},ke=ae,Se=ue,De=de,Pe=function(e,t){return e<=0?[]:ge(t)(e)};var Me=oe,qe=function(e){return function(t){return Me(e,t)?xe(t):t.slice(0,e)}};var Oe=function(e,t){for(var r=e.length,i=0;i<r&&t(e[i]);i++);return i};var Ie=function(e){return function(t){return e<=0||Ee(t)?xe(t):e>=t.length?[]:t.slice(e,t.length)}};var xe=function(e){return e.slice()},Te=function(e){return Ee(e)?[]:e.slice().reverse()},Ae=function(e){return function(t){return t.length<=1?xe(t):t.slice().sort(e.compare)}},Ce=function(e,t,r){for(var i=[],n=Math.min(e.length,t.length),s=0;s<n;s++)i[s]=r(e[s],t[s]);return i};var Re=function(e){return function(t){return e>=1&&ke(t)?fe(e)(t):Ee(t)?[xe(t),[]]:[[],xe(t)]}};var Le=function(e){return function(t){return P(t,function(e){return function(t){for(var r=[],i=0;i<t.length;i++)r.push.apply(r,e(i,t[i]));return r}}((function(t,r){return e(r)})))}},Ue=function(e){return function(t){for(var r=[],i=0;i<t.length;i++){var n=e(i,t[i]);G(n)&&r.push(n.value)}return r}},je=function(e){return Ue((function(t,r){return e(r)}))},Be=je(D),Ge=we,Ne=function(e){var t=We(e);return function(e){return t((function(t,r){return e(r)}))}},We=function(e){return function(t){return Ge(e.of([]),(function(r,i,n){return e.ap(e.map(i,(function(e){return function(t){return P(e,De(t))}})),t(r,n))}))}},Fe=function(e){return I((function(t,r){for(var i=t.length,n=r.length,s=Math.min(i,n),a=0;a<s;a++){var o=e.compare(t[a],r[a]);if(0!==o)return o}return ye.compare(i,n)}))},ze=function(e){return{_tag:"Left",left:e}},Ke=function(e){return{_tag:"Right",right:e}},$e=function(e,t){return P(e,Qe(t))},Ve=function(e,t){return P(e,Je(t))},He="Either",Qe=function(e){return function(t){return Ze(t)?t:Ke(e(t.right))}},Ye=Ke,Je=function(e){return function(t){return Ze(t)?t:Ze(e)?e:Ke(t.right(e.right))}},Xe={URI:He,map:$e,ap:Ve,of:Ye},Ze=F;var et=function(e){return-1===e?1:1===e?-1:0};function tt(e,t){return Be(e.map(t))}function rt(e,t,r,i){const n=(e,t)=>{if(0===e.length)return Be(t.map((e=>$({1:e[1],2:r(K,$(e[2]))}))));if(0===t.length)return Be(e.map((e=>$({1:e[1],2:r($(e[2]),K)}))));if(e.length>0&&t.length>0&&T(i)(e[0][1],t[0][1])){const[i,...s]=e,a=i[1],o=i[2];return Se({1:a,2:r($(o),K)})(n(s,t))}if(e.length>0&&t.length>0&&A(i)(e[0][1],t[0][1])){const[i,...s]=t,a=i[1],o=i[2];return Se({1:a,2:r(K,$(o))})(n(e,s))}if(e.length>0&&t.length>0){const[i,...s]=e,[a,...o]=t,c=i[1],u=i[2],l=a[2];return Se({1:c,2:r($(u),$(l))})(n(s,o))}throw new Error("Non exhaustive match in mapOption2")},s=x((e=>e[1]))(i),a=(e=>{const t=tt(e,(e=>Z(e[2])?$({1:e[1],2:e[2].value}):K));return 0===t.length?K:$(t)})(n(Ae(s)([...e].map((e=>({1:e[0],2:e[1]})))),Ae(s)([...t].map((e=>({1:e[0],2:e[1]}))))));return J((e=>new Map(e.map((e=>[e[1],e[2]])))))(a)}function it(e,t,r,i){const n=x((e=>e[0]))(i),s=Ae(n)([...t]).reduceRight(((e,t)=>{if(Ze(e)){const i=r(t[1],e.left);return Z(i)?ze(i.value):Ke(t[0])}return e}),ze(e));return X(s)}function nt(e,t){return new Map([...e].map(t))}function st(e,t){return new Map([...e].filter(t))}function at(e){return JSON.stringify(ot(e))}function ot(e){switch(e.kind){case"null":return lt.encode(e);case"string":return dt.encode(e);case"number":return pt.encode(e);case"array":return mt.encode(e);case"object":return gt.encode(e)}}function ct(e){return null===e?lt.decode(e):"number"==typeof e?pt.decode(e):"string"==typeof e?dt.decode(e):Array.isArray(e)?mt.decode(e):gt.decode(e)}const ut=(e,t)=>ze(`Failed to decode. Input was ${JSON.stringify(e)}. Codec type was ${t}`),lt={encode:e=>null,decode:e=>null===e?Ke({kind:"null",value:null}):ut(e,"SimpleNull")},dt={encode:e=>e.value,decode:e=>"string"==typeof e?Ke(c(e)):ut(e,"SimpleString")},pt={encode:e=>e.value,decode:e=>"number"==typeof e?Ke(u(e)):ut(e,"SimpleNumber")},mt={encode:e=>e.value.map(ot),decode:e=>{if(Array.isArray(e)){const t=Ne(Xe)(ct)(e);return Qe(l)(t)}return ut(e,"SimpleArray")}},gt={encode:e=>{const t=[...e.value.entries()];return Object.assign({},...Array.from(t,(([e,t])=>({[e]:ot(t)}))))},decode:e=>{if(e&&e.constructor===Object){const t=Ne(Xe)((([e,t])=>P(ct(t),Qe((t=>function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return e}(e,t))))))(Object.entries(e));return Qe((e=>d(new Map([...e]))))(t)}return ut(e,"SimpleObject")}};function ht(e){return P(e,_t,J(at),te((()=>"<encode error>")))}function ft(e){return J(kt)(function(e){switch(e.state.kind){case"top":return $(c(e.state.error));case"bottom":return K;case"inner":return _t(e.state.a)}}(e))}function _t(e){return function(e){switch(e.kind){case"numberGroup":case"stringGroup":return vt(e.group);case"tuple":return e.tuple.length>0}}(e.payload)?$(l(function(e,t){const r=J((e=>Se(e)(t)))(e);return te((()=>t))(r)}(J((e=>c(function(e){const t=e=>{switch(e){case"add":return"p";case"mul":return"m";case"max":return"v";case"min":return"n"}},r=e=>1===e[2]?t(e[1]):t(e[1])+JSON.stringify(e[2]);return e.map(r).join("")}(e))))(e.commands),function(e){const t=e=>{switch(e.kind){case"bottom":return{kind:"null",value:null};case"top":return c(e.error);case"inner":return u(e.a)}},r=e=>tt([bt,yt,e=>P(e,Et,d,$)],(t=>t(e))),i=e=>tt([bt,wt,e=>P(e,Et,(e=>nt(e,(([e,t])=>[JSON.stringify(e),t]))),d,$)],(t=>t(e)));switch(e.kind){case"tuple":return e.tuple.map(t);case"stringGroup":return r(e.group);case"numberGroup":return i(e.group)}}(e.payload)))):K}function vt(e){switch(e.kind){case"unbounded":return e.group.size>0;case"windowed":return e.group.size>0||Z(e.key);case"countLimit":case"uniqueLimit":return e.group.size>0||Z(e.limit)}}function bt(e){switch(e.kind){case"unbounded":return K;case"windowed":return $(c("w"));case"countLimit":return $(c(1===e.n?"x":`x${e.n}`));case"uniqueLimit":return $(c(1===e.n?"u":`u${e.n}`))}}function yt(e){switch(e.kind){case"unbounded":return K;case"windowed":return $(c(Z(e.key)?e.key.value:""));case"countLimit":case"uniqueLimit":return $(c(Z(e.limit)?e.limit.value:""))}}function wt(e){switch(e.kind){case"unbounded":return K;case"windowed":return Z(e.key)?$(u(e.key.value)):$({kind:"null",value:null});case"countLimit":case"uniqueLimit":return Z(e.limit)?$(u(e.limit.value)):$({kind:"null",value:null})}}function Et(e){switch(e.kind){case"unbounded":case"windowed":case"countLimit":case"uniqueLimit":return e.group}}function kt(e){switch(e.kind){case"array":return 0===e.value.length?{kind:"null",value:null}:1===e.value.length?kt(e.value[0]):l(e.value.map(kt));case"object":return P(st(e.value,(([e,t])=>"null"!==t.kind)),(e=>nt(e,(e=>[e[0],kt(e[1])]))),d);default:return e}}function St(e){const t=e=>{if(0===e.length)return{kind:"bottom"};const t=(e=>{if(4!==e.length)return K;const[t,r,i,n]=e;if("string"===t.kind&&"string"===r.kind&&"object"===n.kind){const e=V((e=>Dt(e[1].value)&&Pt(e[2].value)))({1:t,2:r});return J((e=>({prim:e[1].value,grp:e[2].value,cutoff:i,m:n.value})))(e)}return K})(e);if(Z(t)){const{prim:e,grp:r,cutoff:i,m:n}=t.value,s=Mt(i,n,qt(r));return"string"==typeof s?h(s):g(S(Ot(e),s))}const r=(e=>{if(3!==e.length)return K;const[t,r,i]=e;if("string"===t.kind&&"object"===i.kind){const e=V((e=>Pt(e.value)))(t);return J((e=>({grp:e.value,cutoff:r,m:i.value})))(e)}return K})(e);if(Z(r)){const{grp:e,cutoff:t,m:i}=r.value,n=Mt(t,i,qt(e));return"string"==typeof n?h(n):g(S(K,n))}const i=(e=>{if(2!==e.length)return K;const[t,r]=e;if("string"===t.kind&&"object"===r.kind){const e=V((e=>Dt(e.value)))(t);return J((e=>({prim:e.value,m:r.value})))(e)}return K})(e);if(Z(i)){const{prim:e,m:t}=i.value;return g(S(Ot(e),w(f(t))))}const n=(e=>{if(1!==e.length)return K;const[t]=e;return"object"===t.kind?$({m:t.value}):K})(e);if(Z(n)){const{m:e}=n.value;return g(S(K,w(f(e))))}const s=(e=>{if(e.length<1)return K;const[t,...r]=e;if("string"===t.kind){const e=V((e=>Dt(e.value)))(t);return J((e=>({prim:e.value,rest:r})))(e)}return K})(e);if(Z(s)){const{prim:e,rest:t}=s.value;return g(S(Ot(e),xt(t)))}return g(S(K,xt(e)))},r=e=>"array"===e.kind?Le(r)(e.value):[e];return"null"===e.kind?k({kind:"bottom"}):k(t(r(e)))}function Dt(e){const t=e.split("");if(!0==(0===t.length))return!1;{const[e,...r]=t;return-1!=="pmvn".indexOf(e)&&r.every((e=>-1!=="pmvn0123456789".indexOf(e)))}}function Pt(e){const t=e.split("");switch(!0){case 0===t.length:return!1;case"w"===t[0]&&void 0===t[1]:return!0;default:{const[e,...r]=t;return-1!=="ux".indexOf(e)&&-1===r.map((e=>!isNaN(parseInt(e)))).indexOf(!1)}}}function Mt(e,t,r){switch(e.kind){case"string":return w(r({1:$(e.value),2:t}));case"number":case"null":return y(r({1:"null"===e.kind?K:$(e.value),2:st(nt(t,(([e,t])=>[Number(e),t])),(e=>!isNaN(e[0])))}));default:return"{bad cutoff}"}}function qt(e){const t=e=>t=>b(t[2],t[1],e),r=e=>t=>v(t[2],t[1],e),i=e.split("");switch(!0){case"w"===i[0]&&void 0===i[1]:return e=>_(e[2],e[1]);case"u"===i[0]&&void 0===i[1]:return t(1);case"u"===i[0]&&void 0!==i[1]:return t(parseInt(i.slice(1).join("")));case"x"===i[0]&&void 0===i[1]:return r(1);case"x"===i[0]&&void 0!==i[1]:return r(parseInt(i.slice(1).join("")));default:throw new Error("This should never happen if you use isGroupCommand")}}function Ot(e){return J(p)(me(It(e,(e=>{const t=e.split("");if(0===t.length)return K;const[r,...i]=t,n=(e=>{switch(e){case"p":return $("add");case"m":return $("mul");case"v":return $("max");case"n":return $("min");default:return K}})(r);return J((e=>{const{init:t,rest:r}=(n=e=>{return"number"==typeof(t=parseInt(e))&&isFinite(t)&&Math.floor(t)===t;var t},function(e){var t=Re(Oe(e,n))(e);return{init:t[0],rest:t[1]}})(i);var n;return{1:{1:e,2:0===t.length?1:parseInt(t.join(""))},2:r.join("")}}))(n)}))))}function It(e,t){const r=t(e);return te((()=>[]))(J((e=>[e[1]].concat(It(e[2],t))))(r))}function xt(e){return E(e.map(Tt))}function Tt(e){switch(e.kind){case"number":return g(e.value);case"string":return h(e.value);case"null":return{kind:"bottom"};case"object":return h("{object}");case"array":return h("{array}")}}const At={strategy:(e,t,r)=>i=>{if(ee(r))return t;if("delta"===e&&ee(t))return K;if(ee(t))return r;if(Z(t)&&Z(r))return i(t.value,r.value);throw new Error("Non exhaustive match in combineCommand.strategy")},operation:(e,t,r,i,n,s)=>{const a=Fe(j(s));if("append"===e&&"add"===t)return Ce(r,i,Nt("append",n.plus));if("append"===e&&"mul"===t)return Ce(r,i,Nt("append",n.times));if("append"===e&&"max"===t)return C(a)(r,i);if("join"===e&&"add"===t)return Ce(r,i,Nt("join",C(s)));if("join"===e&&"mul"===t)return Ce(r,i,Nt("join",C(s)));if("join"===e&&"max"===t)return C(a)(r,i);if("min"===t)return At.operation(e,"max",r,i,n,function(e){return I(((t,r)=>et(e.compare(t,r))))}(s));if("delta"===e&&"max"===t)return A(a)(r,i)?r:i.map(m);if("delta"===e)return Ce(r,i,((e,t)=>A(j(s))(e,t)?e:{kind:"bottom"}));throw new Error("Non exhaustive match in combineCommand.operation")},extend:(e,t,r,i)=>{if("delta"===e&&"top"===r.kind&&"top"===i.kind)return A(L)(r.error,i.error)?h(r.error):{kind:"bottom"};if("delta"===e&&"bottom"===i.kind)return r;if("delta"===e&&"bottom"===r.kind)return{kind:"bottom"};if("top"===r.kind&&"top"===i.kind)return h(C(L)(r.error,i.error));if("top"===r.kind)return r;if("top"===i.kind)return i;if("inner"===r.kind&&"inner"===i.kind)return t(r.a,i.a);if("bottom"===r.kind)return i;if("bottom"===i.kind)return r;throw new Error("Non exhaustive match in extend")}},Ct={plus:(e,t)=>e+t,times:(e,t)=>e*t};function Rt(e,t,r,i){if("unbounded"===e.kind&&"unbounded"===t.kind){const n=e.group,s=t.group;return te(m)(J((e=>g(f(e))))(rt(n,s,r,i)))}if("windowed"===e.kind&&"windowed"===t.kind){const n=e.key,s=e.group,a=t.key,o=t.group,c=C(Y(i))(n,a);return te(m)(J((e=>g(_(e,c))))(rt(s,o,r,i)))}if("countLimit"===e.kind&&"countLimit"===t.kind){const n=e.n,s=t.n;if(n===s){const s=e.limit,a=e.group,o=t.limit,c=t.group,u=C(Y(i))(s,o);return te(m)(J((e=>g(v(e,u,n))))(rt(a,c,r,i)))}return h("Non matching counts")}if("uniqueLimit"===e.kind&&"uniqueLimit"===t.kind){const n=e.n,s=t.n;if(n===s){const s=e.limit,a=e.group,o=t.limit,c=t.group,u=C(Y(i))(s,o);return te(m)(J((e=>g(b(e,u,n))))(rt(a,c,r,i)))}return h("Non matching counts")}return h("Non matching group types")}function Lt(e,t,r,i,n,s){const a=(e,t)=>({1:qe(e)(t).concat(Pe(Math.max(0,e-t.length),m)),2:Ie(e)(t)}),o=(t,r,i)=>{if(0===t.length)return At.operation(e,"max",r,i,n,s);if(t.length>0){const[c,...u]=t,l=a(c[2],r),d=l[1],p=l[2],m=a(c[2],i),g=m[1],h=m[2];return At.operation(e,c[1],d,g,n,s).concat(o(u,p,h))}throw new Error("Non exhaustive match in recurse")};return Te((c=e=>"bottom"===e.kind,function(e){return e.slice(Oe(e,c))})(Te(o(t,r,i))));var c}function Ut(e,t,r){return te(o)(jt(e,K)(t,r))}function jt(e,t){const r=t=>(r,i)=>At.strategy(e,r,i)(jt(e,t)),i=(i,n)=>{if(Q(_e(q({1:R,2:be}))).equals(i.commands,n.commands)){const s=((t,i,n)=>{if("stringGroup"===i.kind&&"stringGroup"===n.kind){const e=Rt(i.group,n.group,r(t),L);return U(e,(e=>w(Gt(e,L))))}if("numberGroup"===i.kind&&"numberGroup"===n.kind){const e=Rt(i.group,n.group,r(t),ye);return U(e,(e=>y(Gt(e,ye))))}if("tuple"===i.kind&&"tuple"===n.kind){const r=Z(t)?t.value:[];return g(E(Lt(e,r,i.tuple,n.tuple,Ct,ye)))}throw new Error(`Non matching payload. Got ${i.kind} and ${n.kind}`)})(ee(i.commands)?t:i.commands,i.payload,n.payload);return U(s,(e=>S(i.commands,e)))}throw new Error(`Non matching primitive strings. Got ${ht(i)} and ${ht(n)}`)};return(t,r)=>ft(k(At.extend(e,i,St(t).state,St(r).state)))}function Bt(e,t,r){const i=J((t=>st(e,(([e,i])=>function(e){return function(t,r){return-1!==e.compare(t,r)}}(r)(e,t)))))(t);return te((()=>e))(i)}function Gt(e,t){switch(e.kind){case"unbounded":return e;case"windowed":return ee(e.key)?e:_(Bt(e.group,e.key,t),e.key);case"countLimit":{const r=e.limit,i=e.n,n=e.group,s=(e,t)=>t<=1?K:$(t-1),a=it(i,n,s,t),o=C(Y(t))(r,a);return v(Bt(n,o,t),o,i)}case"uniqueLimit":{const r=e.limit,i=e.n,n=e.group,s=(e,t)=>{if("object"===e.kind){const r=[...e.value.keys(),...t.keys()],n=new Set(r);return n.size>=i?K:$(n)}return K},a=it(new Set,n,s,t),o=C(Y(t))(r,a);return b(Bt(n,o,t),o,i)}}}function Nt(e,t){return(r,i)=>At.extend(e,((e,r)=>g(t(e,r))),r,i)}var Wt=r(6567),Ft=r(922),zt=r(2122),Kt=r(4730),$t=r(3382),Vt=r(3540);class Ht{constructor(e,t,r){this.externalData=e,this.localQueries=t,this.externalQueries=r,this.queryCodesAsList=[],this.queryCodesAsMap={};const i=this.externalData.getExternalJsonData(Ft.mL)||[],n=(0,Wt.fS)((()=>[]))((0,Wt.Y3)((()=>i.filter((e=>(0,$t.UC)(e,this.localQueries,this.externalQueries)))))),[s,a]=Vt.Ue(this.queryCodesAsList);this.queryCodesRef=s,this.queryCodesRefUpdate=a,this.add(n)}standardCohorts(){return(0,n.zG)(this.queryCodesRef,Vt.UI((e=>e.filter((e=>e>=1e7)))))}has(e){return e in this.queryCodesAsMap}add(e){return(0,n.zG)(e.forEach((e=>this.queryCodesAsMap[e]=!0)),(e=>this.updateSegmentsList()))}remove(e){return(0,n.zG)(e.forEach((e=>delete this.queryCodesAsMap[e])),(e=>this.updateSegmentsList()))}getAllAsList(){return this.queryCodesAsList}getStdAsList(){return this.queryCodesAsList.filter((e=>e>=1e7))}getAllAsMap(){return this.queryCodesAsMap}getUpdates(e){const t=[],r=[];return Object.entries(e).forEach((e=>{let[i,n]=e;const s=parseInt(i),a=(null==n?void 0:n.result)||{result:!1},o=!0===(null==a?void 0:a.result)&&!(s in this.queryCodesAsMap),c=!1===(null==a?void 0:a.result)&&s in this.queryCodesAsMap;o?t.push(s):c&&r.push(s)})),{entered:t,exited:r}}flush(){this.externalData.setExternalJsonData(Ft.mL,this.getAllAsList())}reset(){this.externalData.removeExternalData(Ft.mL),this.queryCodesAsList=[],this.queryCodesAsMap={}}updateSegmentsList(){this.queryCodesAsList=Object.keys(this.queryCodesAsMap).map((e=>parseInt(e))),this.queryCodesRefUpdate(this.queryCodesAsList)}}const Qt="bootstrap",Yt="process",Jt="processTransitions",Xt="updateEnvironment",Zt="updateExternalState",er="updateLAL",tr="updateTPD";const rr="permutive:query:changed",ir="internal_query_states",nr="external_query_states",sr=e=>class extends e{constructor(){super(...arguments),this.prefix="[Query Manager]",this.isWorkerReady=!1,this.stateMap={value:{},promise:Promise.resolve({})},this.extStateMap={},this.userSegments=new Ht(this.externalData,this.queryMetadata,this.externalQueries),this.segmentEntryQueryCodes=new Set,this.segmentExitQueryCodes=new Set,this.cohortEntryQueryCodes=new Set,this.cohortExitQueryCodes=new Set,this.hasNewOrModifiedQueries=!1,this.makeDebouncedProcessTransitions();const[e,t]=Vt.Ue(this.userSegments.getAllAsList());this.queryCodesRef=e,this.queryCodesRefUpdate=t}get queryCodesAsRef(){return this.queryCodesRef}makeStateMaps(){const e=this.permutiveData.getData(ir)||{},t=this.permutiveData.getData(nr)||{};this.logDebug("Cached state maps",{internal:e,external:t});const r=Object.keys(this.queryMetadata),i=Object.keys(e);this.hasNewOrModifiedQueries=r.length!==i.length||r.filter((t=>{var r;return this.queryMetadata[t]!==(null===(r=e[t])||void 0===r?void 0:r.checksum)})).length>0,this.logDebug("has new or modified queries",this.hasNewOrModifiedQueries);const n=this.hasNewOrModifiedQueries?(0,zt.fl)(e,(t=>{var r;const i=null===(r=e[t])||void 0===r?void 0:r.checksum,n=i===this.queryMetadata[t];return n||this.logDebug(`Dropping state for query ${t}, mismatched checksum`,{cachedChecksum:i,checksum:this.queryMetadata[t]}),n})):e;this.extStateMap=this.hasNewOrModifiedQueries?this.dropExternalStateMissingFromStateMap(t,n):t,this.stateMap={value:n,promise:Promise.resolve(n)},this.logDebug("Initialised state maps",{internal:this.stateMap.value,external:this.extStateMap,metadata:this.queryMetadata});this.permutiveData.getData("query_states")&&this.permutiveData.setData("query_states",null)}dropExternalStateMissingFromStateMap(e,t){const r=(0,zt.fl)(e,(e=>e in t));return this.permutiveData.setData(nr,r),r}makeDebouncedProcessTransitions(){this.scheduler=new Kt.b(this.transitionDebounceTime,this.transitionDebounceMaxTime);this.debouncedProcessTransitions=this.scheduler.scheduleAccumulated((e=>this.processTransitions(e)),{concat:(e,t)=>e.concat(t),empty:[]})}makeMessage(e,t,r){return{type:e,payload:(0,n.bc)(this.queryMetadata,this.extStateMap,...t),stateMap:r,userId:this.userId.get()}}trackTransition(e,t){const r=Ft.ED?this.customProperties.getCustomProps():{},i=Object.assign(Object.assign(Object.assign({},r),{segment_number:t}),{});e?(this.segmentEntryQueryCodes.add(t),this.cohortEntryQueryCodes.add(t.toString())):(this.segmentExitQueryCodes.add(t),this.cohortExitQueryCodes.add(t.toString())),this.permutive.track(e?"SegmentEntry":"SegmentExit",i)}trackSegmentsTransition(e,t){e.forEach((e=>{this.trackTransition(!0,e),this.messages.emit(rr,{queryCode:e,result:{result:!0}})})),t.forEach((e=>{this.trackTransition(!1,e),this.messages.emit(rr,{queryCode:e,result:{result:!1}})}))}updateUserSegments(e,t){e.length>0&&this.userSegments.add(e),t.length>0&&this.userSegments.remove(t),(e.length>0||t.length>0)&&(this.userSegments.flush(),this.queryCodesRefUpdate(this.userSegments.getAllAsList()))}onStateChangeReady(e){const{entered:t,exited:r}=this.userSegments.getUpdates(e);this.trackSegmentsTransition(t,r),this.updateUserSegments(t,r),this.logDebug("Updating query state",{updatedStateMap:e}),this.permutiveData.setData(ir,e);return(t.length>0||r.length>0)&&(this.logDebug("Updated cohorts",{entered:t,exited:r}),this.messages.emit("permutive:segments:updated")),{segmentsEntered:new Set(t),segmentsExited:new Set(r),cohortsEntered:new Set(t.map(String)),cohortsExited:new Set(r.map(String))}}onStateChange(e,t){return(0,n.zG)(t.length>0?this.api.reportError(`QL error(s). Got ${t.join("; ")}`,this.userId.get()):{},(t=>this.stateMap.value=Object.assign(Object.assign({},this.stateMap.value),e)),(e=>this.isWorkerReady?[e,this.onStateChangeReady(e)]:[e,{segmentsEntered:new Set,segmentsExited:new Set,cohortsEntered:new Set,cohortsExited:new Set}]))}postMessage(e,t){const r=e=>this.userId.get()===e.userId?e:{diff:{},errors:[]};return new Promise((i=>{this.stateMap.promise=this.stateMap.promise.then((0,n.ls)((r=>this.makeMessage(e,t,r)),(e=>this.processMessage(e)))).then((0,n.ls)(r,(e=>{let{diff:t,errors:r,externalStateToDrop:n}=e;if(n){const e=(0,zt.fl)(this.stateMap.value,(e=>!(e in n)));this.extStateMap=this.dropExternalStateMissingFromStateMap(this.extStateMap,e)}const[s,a]=this.onStateChange(t,r);return i([t,a]),s}))).catch((e=>(0,n.zG)(this.api.reportError(`Error during query execution. Got ${e}`,this.userId.get()),(e=>i([{},{segmentsEntered:new Set,segmentsExited:new Set,cohortsEntered:new Set,cohortsExited:new Set}])),(e=>this.stateMap.value))))}))}processTransitions(e){return this.postMessage(Jt,[e])}bootstrap(e){return this.postMessage(Qt,[{segments:{"1p":this.userSegments.getAllAsMap()},sessionId:this.sessionManager.getSessionId(),viewId:this.viewId.get(),lookalikeModels:{}},e])}updateEnvironment(e){return this.postMessage(Xt,[e])}updateLAL(e){return this.postMessage(er,[e])}updateTPD(e){return this.postMessage(tr,[e])}process(e,t){return(0,$t.AG)(e)?this.debouncedProcessTransitions([e]):this.processStandard([e],t)}processStandard(e,t){return(0,a.mG)(this,void 0,void 0,(function*(){const r=yield this.postMessage(Yt,[e]);return t&&this.setAsRealTimeifNeeded(e),r}))}updateExternalState(e){const t=(0,zt.b0)(e,((e,t)=>{const r=this.queryMetadata[e];return r&&t[r]?(0,Wt.Uo)(ct(t[r])):Wt.YP})),r=(0,zt.b0)(this.extStateMap,((e,t)=>(0,Wt.Uo)(ct(t)))),i=(e,t,r)=>(0,n.zG)((0,Wt.Y3)((()=>(this.logDebug("Joining external state",{newExtState:e,currentExtState:t}),function(e,t){return Ut("join",e,t)}(e,t)))),(0,Wt.fS)((()=>(this.api.reportError(`Failed to join external state for query: ${r}. Had ${at(t)}, received ${at(e)}}`,this.userId.get()),e)))),s=(0,zt.b0)(Object.assign(Object.assign({},r),t),((e,t)=>r[e]?(0,Wt.G)(ot(i(t,r[e],e))):(0,Wt.G)(ot(t))));return this.permutiveData.setData(nr,s),this.extStateMap=s,this.postMessage(Zt,[])}reset(){this.userSegments.reset(),this.permutiveData.setData(ir,{}),this.permutiveData.setData(nr,{}),this.stateMap={value:{},promise:Promise.resolve({})},this.extStateMap={}}setAsReady(){this.isWorkerReady=!0,this.onStateChangeReady(this.stateMap.value),this.messages.emit("permutive:queries:initialised")}getStateSizeInBytes(){return 2*JSON.stringify(this.stateMap.value).length}updateExternalSegments(e){const t={};for(const r of Object.keys(e)){const i=parseInt(r);!isNaN(i)&&this.externalQueries.has(i)&&(t[i]={result:{result:e[i]}})}const{entered:r,exited:i}=this.userSegments.getUpdates(t);this.trackSegmentsTransition(r,i),this.updateUserSegments(r,i);(r.length>0||i.length>0)&&this.messages.emit("permutive:segments:updated")}setAsRealTimeifNeeded(e){return!this.realtime.isRealtime()&&e.filter((e=>"Pageview"===e.name)).length>0?this.realtime.setAsRealtime(this.userSegments.getAllAsList().length):void 0}logDebug(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];this.logger.debug(this.prefix,...t)}};function ar(){return(0,i.h)(new s.Z)}class or{constructor(e){this.queryMetadata={85200:"0c8b70cdb7",88161:"31389171d8",88162:"71d0da69bd",88163:"8788c53165",88164:"7498ba9490",88165:"ee5722beee",88167:"4c9834d57f",88168:"5354a7c694",88822:"223f61b1ff",88823:"5975a4d38b",89055:"1dee529000",89056:"29f81971b4",89073:"9f4632e360",89076:"d4c384787f",89078:"64bfb06bdc",89080:"489ca06e29",89084:"eec4b7a7ee",89089:"c16d3b45c9",90805:"34f1fe7b32",90806:"b957920f32",90807:"f100780ab9",90808:"862c0fecad",90810:"ec39a3c624",90811:"7fcc8293fb",90814:"22120f84b3",90815:"0941143167",92795:"6c694276b6",93873:"be45a24610",93874:"03c5198ada",93876:"22d0237512",94257:"8a27f6d0fd",94259:"48c3393d72",94260:"ebe565aa0b",94344:"5a22fd62a3",94345:"6b38760231",94346:"6e98532ec3",94347:"5b9a191699",94373:"a53c0a0c3f",94434:"8c06ee09bd",94494:"87dc1ce505",94500:"2aad76cd03",94501:"ba6a68c0c1",94506:"3e352b032e",94507:"ad2722f157",94509:"7ce1f88f13",94511:"f037fee5df",94611:"658310fbd6",94612:"b2ee4b0b40",94614:"3d1d8b6769",94615:"d251ac5d46",94616:"8ea973c436",94619:"bc938ffc4c",94620:"df5a10e013",94621:"c967f07d45",94627:"34e02701bd",94636:"087b2b914f",94638:"507c466c1b",94668:"b3e1226806",94670:"0f55fe13e2",94721:"9ff01ddb20",94722:"3fa87ca1fc",94724:"168cdb072c",94725:"8f53cf4179",94726:"a67faac481",94727:"3a58425ab8",94728:"b683cf8608",94729:"ed4d7bdd76",94730:"c878fe9cee",94732:"dc46705f10",94733:"cbdd21bff0",94734:"f3559e5bd1",94735:"360ecf0c1a",94736:"43246857ad",94740:"1609c9bdb5",94742:"11c4924892",94743:"351d638427",94744:"0433376e18",94802:"0e9ecf2e1c",94803:"473b320c1f",94804:"299c1a24e7",94812:"6c3d20ba73",94961:"b794b6484e",95194:"949507f147",95578:"8d2a43507d",97804:"3e9c956f7f",97805:"1c78bcec2e",98061:"d7df781d76",98425:"a5a31a4dcf",98503:"300c5308d0",98504:"a968372a25",98505:"1bb7d50ac7",98506:"77b4f2a307",98729:"0e1303bf16",98732:"da069639de",98737:"6439755692",98813:"48c7c3b233",98820:"10ae277a12",98955:"7410e963f7",98956:"23f9dd28a8",98957:"d5675b1092",98958:"ee7d7eae23",98959:"3a544f3abd",98960:"f024402eb5",98961:"65f325a117",98962:"1e006189e6",98963:"2ca195e444",98964:"db68366426",98965:"15b152b037",98966:"4a5d10e71b",98967:"3e660d6db6",98968:"49bce36256",98969:"a1c2dbd094",98970:"505efaaef6",98971:"22204a1956",98972:"282aa89285",98973:"50a53c7b8b",98974:"24dbec13af",99029:"4d81e17866",99040:"2c87f56c9c",99041:"729a9ff79e",99042:"89c1594cba",99043:"bc2f35c925",99044:"c0a3986a7d",99045:"14b5a89e5d",99046:"d527a7cb92",99047:"53b3202b90",99048:"4adcda961e",99049:"1ba78031da",99050:"5a6c954d37",99051:"c3722b6217",99052:"4c2f421ab6",99053:"21aab37414",99054:"87e399d94a",99055:"83751d97d1",99057:"1b813c8264",99058:"f15e5ed9a9",99062:"d9fab8287b",99063:"069896410f",99064:"111194de0a",99065:"0b9e36b9d5",99066:"686deafd48",99067:"8c3cd330f8",99068:"8717cea74e",99069:"ceaf9fb0f0",99070:"dbc23d761f",99071:"ce501f9538",99072:"024bab9b72",99073:"e9fe99d54c",99074:"f2f6c44e10",99075:"a865e3d367",99076:"ddd2fabd46",99077:"f15e5ed9a9",99078:"37688b5450",99079:"dfdfab6a93",99080:"4e6c6ea36e",99169:"9e855ea3dc",99450:"416c6b5cb5",99452:"93823fbf80",99839:"2fab010f7d",99840:"7285a4d499",99841:"572df72de8",99842:"90a86e206d",99843:"2058d9fbf7",99844:"4d51396d9a",99845:"93b8295311",99846:"224d8cf786",99847:"c476ea84e4",99848:"3ff44f1cb8",99849:"abca9b9888",99850:"97f939eb56",99851:"379a6c63c4",99852:"7d2c13ab58",99853:"0b84a146e4",99929:"673a118ef0",99930:"8e03ef5c9a",99931:"35a449cf9d",99932:"3a073bd15c",99933:"d5fba07456",99934:"5e375e8302",99935:"cf8b63f28e",99936:"cdf759b976",99937:"5644668929",99940:"735b00928c",99941:"84b47ee69a",99942:"1ff3e93a86",99943:"6ebae9ad8a",99944:"cd178ea6d6",99946:"e44bcb9d7e",99968:"0092dd7e74",99980:"2c78295e43",100154:"8b9f2c295f",100381:"941421658b",100526:"6d79c734c0",100884:"d888a1df76",101074:"c914e07406",101075:"e137b019d0",101259:"2e868cec01",101283:"bde42d2ff7",101424:"52762d5ad6",103496:"28870dc4f8",103599:"0015ad02cd",103625:"e9469feccf",104019:"842ac49ef3",104033:"d4277a8ea8",104040:"a777fcf3c7",104042:"131d9dff4a",104043:"ca7f071dc8",104044:"1dc67823cb",104507:"597b829c3b",104508:"69c522af0f",104509:"07fcf092ba",104510:"1f65861383",104521:"f563ad2804",104522:"97a3ba3458",104523:"ecdc06bbb6",104524:"48632dfb17",104525:"bce15c8eb5",104526:"1f8a11aebd",104527:"4807555cc6",104528:"0f9f07735b",104529:"0ccd55fc17",104530:"5bc36d8a90",104531:"08a57ccc97",104532:"f3784313d0",104533:"5d0c90efb6",104534:"1f7eededef",104535:"85805f3aec",104536:"f1ea928160",104537:"f43e7aef0d",104538:"cfce946923",104539:"d516988263",104540:"7baabe9b38",104541:"a623eb6908",104542:"71f8688c5c",104543:"04577a379b",104544:"225764924c",104545:"e514f285e0",104546:"3fd8b8d40c",104547:"2e883cc497",104548:"085e4be677",104549:"85ff1f8cf2",104550:"75f554102b",104551:"e9b383d614",104552:"0c27dbdade",104553:"005806f0f8",104554:"4f98e8c06d",104555:"7bfb115262",104556:"c9e4ab7c87",104557:"136b22d962",104558:"b98949a0a5",104559:"be73803134",104560:"71fcfd381a",104561:"3dd5db496a",104562:"6fdd9c7c19",104563:"01ff4be25f",104564:"562daa5bab",104693:"46b181524a",104940:"d794d6f87c",104941:"f8f54fc06c",104946:"8df2feaaa3",104947:"bd9aff700e",104948:"35c2202aec",104949:"f4d8468491",104950:"4afe79bd9c",104951:"32ef4b6ad0",104952:"d583c7453b",104953:"c05ebba1ec",104954:"562415a005",104955:"54853ee24e",104956:"9a0c7e1882",104957:"b1299a9ac1",104958:"73943ca434",104959:"67b6fc9afb",104960:"a3db8b9006",104961:"e426f439a1",104962:"9ad161eab1",104964:"ffdfb9f6f8",104966:"b5baed4ec0",104967:"6ebcbf84db",104968:"0fc3b8dd58",104969:"f620d72301",105096:"8e569f23ac",106426:"8b70c2501f",106427:"5709274fdd",106428:"d2878aa7b7",106574:"a934730336",106781:"5ddcf64e51",106793:"0bee41263b",106839:"4c98abf87d",106883:"3d03c86808",106904:"3af3c033e3",106971:"26219c4da2",107240:"90d562cf9a",107241:"7b11cc0d77",107493:"26219c4da2",107498:"c7568bf924",107511:"2c18573b45",107513:"b015356896",107686:"31fcbbd0e1",107696:"d265593049",107946:"6e22e2f451",107947:"223f4bb577",107948:"6d5439f1ba",107949:"707b95b1f5",107986:"bd0e907782",107987:"f3b6c7eed7",108271:"4ecfa12b51",108473:"8a8adeb8d7",108535:"aaff79631a",108539:"42720b9388",109203:"b55e637423",109205:"d89754945c",109299:"d2ca337f9b",109405:"72dd4b3332",109506:"66679835df",109759:"64ed4d3ca3",110626:"d502f13bd0",110628:"7b893744cd",113066:"08975cecac",113069:"2ad78c398d",113071:"b086cb54f8",113072:"504e0abb3c",113073:"84288d8f31",113607:"6138f112c3",113608:"9846a07e4a",113800:"9950517884",113801:"eb6bb6c5a0",113802:"41848204c5",113804:"dc4abb26bd",113805:"832f16857b",113806:"28b4935bc6",113807:"e9ab2118a5",113808:"7326d47d6c",113809:"52ef66d1eb",113810:"3b5a9582d8",113811:"c6809ccdf1",113812:"3fd30b83e6",113813:"eb95654524",113814:"afae69c584",113815:"0444117ba7",113816:"acbbacc9ff",113817:"3d4ec842b8",113818:"c0623656db",113819:"7a3cfa322e",113820:"aec122cf66",113821:"db0702a17d",113822:"12c7035d1c",113823:"9d1f5ccbec",113824:"3b3a5a7671",113825:"5544e6e7e3",113826:"fdf5eefab2",113827:"d8dce8b3ee",113828:"dfeb75c4d4",113829:"dc86746738",113833:"f8c4acd0d8",114083:"2bfb6171f3",114093:"06e2ba8f42",114094:"d6db526ac2",114095:"043d0b4f34",114289:"e9c1c23cfd",114290:"01c07adfd5",114456:"af60f6fc3f",114693:"1ecc882f24",114694:"c35269a1d1",114695:"719475e1b0",114810:"979ef708cb",114811:"804b750515",114812:"8b385b59b0",114834:"5cb81404c6",114836:"5ab519515e",114881:"6425f79c9c",115146:"5e1595be9e",115147:"f53d2b9e68",115149:"825afec6e8",115150:"b78478cf51",115188:"29d403bd28",115272:"19ea5cb7c4",115273:"ec358eb24b",115274:"0187985d1d",115276:"3a40289be6",115387:"3c524805f1",115388:"e0a8186143",115453:"1d6c50113b",115860:"582bd3d01e",115861:"98cdae12fd",115862:"dc0852e6a3",115863:"208da3d18b",115958:"517097f12c",116672:"992d990895",116673:"3d8eaf1159",116697:"5f4a4b379c",116698:"a22c0990f5",117069:"329d5baffa",117070:"c7cbdc06de",117071:"ca0ed3c681",117072:"3d051e5c90",117073:"c4014018db",117074:"8690798bca",117075:"73f27595ed",117076:"165b0d7ed2",117077:"c4ff50769b",117370:"6cdd4460e9",117415:"bd82e2e728",117538:"fe9aadcddc",117539:"6e5c212676",117703:"d3f3999486",117711:"447880b3a5",117712:"a8103788f5",117859:"53c39476c1",117867:"59af4e9d1d",118623:"f53b18753c",118624:"6debf9b06a",118625:"61132aa428",118626:"18e6116865",118627:"543aeb3d3a",118628:"ec42d76765",118629:"8e2ba10d81",118630:"1e416383dd",120525:"94a9da3f0e",120526:"270639ca8b",120531:"e773db7c53",120540:"6de9825e8b",120541:"849241e1ac",120542:"d123df2406",120543:"c709282dbd",120544:"e79086a9a9",120545:"812eac7525",120551:"a646770fcf",120554:"c3b0105ea0",120555:"54204407da",121833:"1d84baae5f",122080:"2a276141c6",122081:"ac71052e9e",122309:"0044199fc3",122329:"c0770f2959",122378:"916c333c50",123558:"337f778673",123778:"01b03b5485",123780:"22c38bfa3f",126495:"889e0fc9a1",127375:"6f9539c814",127377:"6d9845e762",127586:"de51f73634",127652:"da8708bc7f",127876:"6da387e8f0",127877:"95172317f7",127878:"9c2acf645c",127879:"a51f848d82",127880:"7cab41d1d9",127881:"eff992476b",127882:"ef3a35703c",127883:"e5bc099895",127884:"e6dd26f566",127885:"8c49f99b61",127888:"c540bca086",127889:"8d066c468d",127890:"37fb9dd362",127891:"40374e8205",128356:"6766ba9910",128953:"d39878680c",129469:"f94f4a9df8",131528:"f758e95820",131529:"abd6f57386",131684:"41e61311d2",131686:"088076ec69",131688:"5a2877f56e",131689:"f13a7ef112",131690:"dd6d1fe26c",131844:"c9e6c9f499",132165:"a068fe1990",132166:"43f1a6df76",133814:"4a51133dbb",133941:"582a076f14",133942:"3a3452745f",133943:"bf1979de03",133944:"f9901c50b6",133945:"12a4675f72",133946:"de920aaf98",133947:"280860032d",133948:"5992fd82bb",133949:"4e92543f09",133950:"884f2ea68d",133951:"50cd9e9ca7",133952:"92122f92fd",133953:"a604514b99",133954:"445741733a",133956:"8ccff33c25",133961:"b1a49f2582",133962:"7a1719235e",133963:"40a903e4cd",133964:"fc15fffdda",133965:"535b9117c8",133966:"27719ab497",133967:"65e6ca0657",133968:"ad9ddb09ac",134173:"b7dc5e0ac6",134607:"7bda1fd8aa",134608:"7fcc8293fb",134611:"75f49eccb7",134613:"1784653f6f",135256:"88fc8f9407",135738:"4bb615718a",135889:"3d374e86de",135890:"cc94100198",135891:"e1a74e38e6",135892:"5d61a9e608",136101:"94ce6de30e",136102:"e59776914c",136103:"14a7f9145d",136343:"ecac317759",136344:"c66dc3786a",136345:"52914b63f0",136348:"3e0c3cb3e7",136353:"d4636a0fbf",136357:"3d5f372d7a",136447:"e2018140a5",136448:"9b1fe19ce3",136456:"e9c9da3703",136458:"ec25901bc8",136459:"f8dc8c9d79",136461:"769449863b",136462:"e5c82075d2",136463:"3ebf3c98f3",136464:"e42a4075f7",136465:"c0c3f64abe",136466:"3e64442a1b",136471:"52677e8792",136580:"bd5c398d8c",136816:"9f594c04f3"},this.externalQueries=new Set([]),this.customProperties=e.customProperties,this.externalData=e.externalData,this.logger=e.logger,this.messages=e.messages,this.api=e.api,this.permutive=e.permutive,this.permutiveData=e.permutiveData,this.queryWorker=e.queryWorker,this.realtime=e.realtime,this.sessionManager=e.sessionManager,this.transitionDebounceMaxTime=e.transitionDebounceMaxTime,this.transitionDebounceTime=e.transitionDebounceTime,this.userId=e.userId,this.viewId=e.viewId}processMessage(e){return this.queryWorker.postMessage(Object.assign({engine:"QLE"},e))}}class cr extends((()=>(0,n.zG)(or,sr))()){constructor(e){super(e),this.makeStateMaps()}}},8317:(e,t,r)=>{r.d(t,{S:()=>a});var i=r(655),n=r(3735),s=r(2122);class a{constructor(e,t){var r;this.db=e,this.options=t,this.hasChanged=!1,this.options=null!==(r=this.options)&&void 0!==r?r:{},this.options.timeout_seconds=this.options.timeout_seconds||1800,this.options.session_data_key=this.options.session_data_key||"permutive-session",this.session_id=null}getSessionId(){return this.session_id}sessionHasChanged(){return this.hasChanged}decodeSessionData(e){return null===e?null:"object"==typeof e&&e.hasOwnProperty("session_id")&&e.hasOwnProperty("last_updated")?Object.assign(Object.assign({},e),{last_updated:new Date(e.last_updated)}):null}reset(){return this.db.delete(this.options.session_data_key)}persistSessionData(e){return(0,i.mG)(this,void 0,void 0,(function*(){const t=e.last_updated.toISOString();yield this.db.put(Object.assign(Object.assign({},e),{last_updated:t}),this.options.session_data_key)}))}newSession(e){return this.hasChanged=!0,{session_id:(0,s.k$)(),last_updated:e}}hasExpired(e,t){if(isNaN(t.getTime()))return!0;return e>new Date(t.getTime()+1e3*this.options.timeout_seconds)}static initialise(e,t,r){return(0,i.mG)(this,void 0,void 0,(function*(){const i=new a(t,r);e.deleteCookie(i.options.session_data_key);const s=new Date,o=yield i.db.get(i.options.session_data_key).catch(n.gn),c=i.decodeSessionData(o),u=null===c||i.hasExpired(s,c.last_updated)?i.newSession(s):Object.assign(Object.assign({},c),{last_updated:s});return yield i.persistSessionData(u),i.session_id=u.session_id,i}))}}},8183:(e,t,r)=>{r.d(t,{S:()=>_});var i=r(3735),n=r(2688),s=r(787),a=r(70),o=r(2122),c=r(4730);class u{constructor(e,t,r){this.config=e,this.namespace=t,this.logger=r,this.prefix="[Data Store]",this.permutiveData={},this.permutiveDataSize=0,this.localStorageQueue=new Set,this.localStorageScheduler=new c.b(e.localStorageWriteDelay,e.localStorageWriteMaxDelay),this.debouncedFlush=this.localStorageScheduler.schedule(this.flushLocalStorageQueue.bind(this)),this.debouncedStorageKeys=new Set(e.localStorageDebouncedKeys),this.localStorageScheduler.scheduleForPageUnload(this.flushLocalStorageQueue.bind(this)),this.permutiveData=this.buildData()}reset(){this.permutiveData={}}getDataSize(){return this.permutiveDataSize}getData(e){return this.permutiveData[e]}setData(e,t){this.permutiveData[e]=t,this.debouncedStorageKeys.has(e)?(this.localStorageQueue.add(e),this.debouncedFlush()):this.writeData(e)}flushLocalStorageQueue(){for(let e of this.localStorageQueue)this.writeData(e);this.localStorageQueue.clear()}buildData(){return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},this.getDataChunk("misc")),this.getDataChunk("models")),this.getDataChunk("queries")),this.getDataChunk("tpd")),this.getDataChunk("enrichers"))}getDataChunk(e){const t=this.namespace.getNamespacedStorageKey(this.chunkKeyToStorageKey(e)),r=window.localStorage.getItem(t),i=(0,s.A)(r);return null===i?{}:(this.permutiveDataSize+=2*r.length,i)}chunkKeyToStorageKey(e){switch(e){case"models":return this.config.permutiveDataModelsKey;case"queries":return this.config.permutiveDataQueriesKey;case"tpd":return this.config.permutiveDataTPDKey;case"enrichers":return this.config.permutiveDataEnrichersKey;case"misc":return this.config.permutiveDataMiscKey;default:return(0,o.Fi)(e)}}writeData(e){this.logger.debug(`Data Store: Writing ${e} to localStorage`);const[t,r]=this.dataKeyToChunkInfo(e);return a.Y3((()=>window.localStorage.setItem(this.namespace.getNamespacedStorageKey(t),JSON.stringify(r))),(t=>{const r=(0,n.w)(t);return this.logError(`Failed to set ${e}. Got ${r}`),r}))}dataKeyToChunkInfo(e){const t=e=>(0,o.eu)(this.permutiveData,e);switch(e){case"models_data":case"models_last_updated":return[this.chunkKeyToStorageKey("models"),t(l)];case"query_states":case"internal_query_states":case"external_query_states":case"state_offset":case"event-source-id":return[this.chunkKeyToStorageKey("queries"),t(d)];case"third-party-data":case"third-party-data-session-id":case"third-party-data-usage":return[this.chunkKeyToStorageKey("tpd"),t(p)];case"enricher:geoip":return[this.chunkKeyToStorageKey("enrichers"),t(m)];case"identities":case"amp_ready":case"metricsEnabled":case"addon:tradedesk":case"addon:tracking_pixel":case"addon:eyeota_pixel":case"addon:twitter_pixel":case"addon:pinterest_pixel":case"addon:facebook_pixel_v2":case"addon:appnexus":case"addon:ddp":case"addon:gigya":case"addon:neustar_fabrick":case"pubmatic":case"lotame":return[this.chunkKeyToStorageKey("misc"),t(g)];default:return(0,o.Fi)(e)}}logError(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];this.logger.error(this.prefix,...t)}}const l=["models_data","models_last_updated"],d=["query_states","internal_query_states","external_query_states","state_offset","event-source-id"],p=["third-party-data","third-party-data-session-id","third-party-data-usage"],m=["enricher:geoip"],g=["identities","amp_ready","metricsEnabled","addon:tradedesk","addon:tracking_pixel","addon:eyeota_pixel","addon:twitter_pixel","addon:pinterest_pixel","addon:facebook_pixel_v2","addon:appnexus","addon:ddp","addon:gigya","addon:neustar_fabrick","pubmatic","lotame"];var h=r(4769);const f=e=>{const{logger:t,consentTracking:r}=e,i=e=>(t.debug(`Data Store: Failed to write ${e} as consent is revoked`),a.F2(void 0));return e=>class extends e{constructor(){super(...arguments),this.writeData=(0,h.v)(super.writeData.bind(this),i,r.isRevoked)}}},_=(e,t,r,n)=>new((0,i.zG)(u,f({consentTracking:n,logger:r})))(e,t,r)},7915:(e,t,r)=>{r.d(t,{$:()=>n});var i=r(2122);class n{constructor(e){this.permutiveData=e,this.eventSourceId=e.getData("event-source-id")||this.generateAndStoreEventSourceId()}get(){return this.eventSourceId}generateAndSet(){this.eventSourceId=this.generateAndStoreEventSourceId()}generateAndStoreEventSourceId(){const e=(0,i.k$)();return this.permutiveData.setData("event-source-id",e),e}}},569:(e,t,r)=>{r.d(t,{L:()=>i});class i{constructor(e){this.config=e}getNamespacedStorageKey(e){return`${this.config.stateNamespace}${e}`}}},7575:(e,t,r)=>{r.d(t,{u:()=>i});class i{constructor(e,t){this.metrics=e,this.messages=t}isRealtime(){return this._isRealtime}isReady(){return this._isReady}setAsRealtime(e){this._isRealtime=!0,this.messages.emit("permutive:realtime"),this.metrics.trackTimeSinceInit("sdk_realtime_targeting_set_task_duration_seconds",{}),this.metrics.track({name:"sdk_user_segments_count",value:e,labels:{}})}setAsReady(){this._isReady=!0,this.messages.emit("permutive:ready"),this.metrics.trackTimeSinceInit("sdk_initialisation_task_duration_seconds",{}),window.performance&&window.performance.memory&&(this.metrics.track({name:"sdk_heap_memory_bytes_used",value:window.performance.memory.usedJSHeapSize,labels:{}}),this.metrics.track({name:"sdk_heap_memory_limit_fraction_used",value:window.performance.memory.usedJSHeapSize/window.performance.memory.jsHeapSizeLimit,labels:{}}))}}},7332:(e,t,r)=>{r.d(t,{a:()=>a});var i=r(655),n=r(3735),s=r(356);class a{constructor(e,t,r,i,n,s,a,o){this.config=e,this.localStorage=t,this.logger=r,this.queryManager=i,this.permutiveData=n,this.eventSourceId=s,this.cookies=a,this.externalData=o}reset(){return(0,i.mG)(this,void 0,void 0,(function*(){return this.logger.log("Resetting State"),(0,n.zG)(this.cookies.deleteCookie(this.config.cookieName),(e=>this.externalData.removeExternalData(this.config.cookieName)),(e=>(0,s.XP)({_paols:!0,_papns:!0,_pcrdbs:!0,_pcrprs:!0,_pdfps:!0,_pfws:!0,_pnativo:!0,_prps:!0,_prubicons:!0,_psegs:!0,_psmart:!0,"permutive-id":!0,"permutive-loaded":!0,"permutive-prebid-rtd":!0,"permutive-events-cache":!0,_pssps:!0}).forEach((e=>this.externalData.removeExternalData(e)))),(e=>this.queryManager.reset()),(e=>this.permutiveData.reset()),(e=>this.eventSourceId.generateAndSet()),(e=>Promise.all([this.localStorage.delete(this.config.permutiveDataModelsKey),this.localStorage.delete(this.config.permutiveDataQueriesKey),this.localStorage.delete(this.config.permutiveDataTPDKey),this.localStorage.delete(this.config.permutiveDataEnrichersKey),this.localStorage.delete(this.config.permutiveDataMiscKey)])),n.Q1)}))}}},5875:(e,t,r)=>{r.d(t,{N:()=>m,e:()=>d});var i=r(655),n=r(2688),s=r(7183),a=r(70),o=r(3735),c=r(1045),u=r(4730),l=r(3382);function d(){return(0,s.h)(new c.Z)}const p={concat:(e,t)=>Object.assign(Object.assign({},e),t),empty:{}};class m{constructor(e,t,r,i,n,s,a,o,c){this.api=e,this.network=t,this.sessionManager=r,this.permutiveData=i,this.queryManager=n,this.metrics=s,this.userId=a,this.eventSourceId=o,this.stateWorker=c,this.DEBOUNCE_TIME=1e3,this.MAX_DEBOUNCE_TIME=5e3,this.fetchUnseenState=!0,this.scheduler=new u.b(this.DEBOUNCE_TIME,this.MAX_DEBOUNCE_TIME),this.debouncedSyncIfNotEmpty=this.scheduler.scheduleAccumulated((e=>this.syncIfNotEmpty.bind(this)("standard",e)),p),this.fetchUnseenState=!!g.includes("3a6b0682-f3e1-4576-a706-5eb4101b9cc3")||this.sessionManager.sessionHasChanged(),this.stateOffset=this.permutiveData.getData("state_offset")||0,this.lastSentStateMapWithChecksum=(0,l.Yh)(this.permutiveData.getData("internal_query_states")||{}),this.stateWorker.postMessage({engine:"SSE",type:"noop"})}sync(e){return(0,o.zG)(this.debouncedSyncIfNotEmpty(e),(e=>Promise.resolve()))}syncWithUnseen(){return this.syncIfNotEmpty("unseen",{}).then(o.Q1)}syncIfNotEmpty(e,t){const[r,i,s]="standard"===e?[this.stateOffset,t,this.fetchUnseenState]:"unseen"===e?[this.stateOffset,this.queryManager.stateMap.value,!0]:[0,{},!0],a=this.metrics.startTimer("sdk_compute_delta_seconds",{}),c={type:"delta",stateMap:i,lastSentStateMapWithChecksum:this.lastSentStateMapWithChecksum},u=this.stateWorker.postMessage(Object.assign({engine:"SSE"},c)).then((e=>(this.metrics.stopTimer("sdk_compute_delta_seconds",a),e))),l=e=>{this.fetchUnseenState=!1;const t=(0,o.ls)((e=>this.api.reportError(`Error sending state delta. Got ${(0,n.w)(e)}`,this.userId.get())),(e=>({})));return this.api.state(this.metrics,this.userId.get(),this.eventSourceId.get(),e,r,s).then((e=>function(e){return!!e}(e)?this.onStateResponse(e):{})).then((t=>(this.lastSentStateMapWithChecksum=e,t))).catch(t)};return u.then((e=>s||Object.keys(e).length>0?l(e):Promise.resolve({})))}resetSync(){return(0,i.mG)(this,void 0,void 0,(function*(){this.reset(),yield this.syncIfNotEmpty("reset",{})}))}reset(){this.lastSentStateMapWithChecksum={}}onStateResponse(e){const t=(0,a.Y3)((()=>JSON.parse(e.state)),(e=>this.api.reportError(`Failed to parse State API response, got ${e}`,this.userId.get()))),r=e=>e?this.queryManager.updateExternalState(e):(0,o.Q1)();return(0,a.tO)(t)?(0,o.zG)(e.state_offset,(e=>this.stateOffset=e),(e=>this.permutiveData.setData("state_offset",e)),(e=>r(t.right)),(e=>t.right)):{}}}const g=["fe68d1f7-c9f4-45b3-8905-7cda73d3fd74"]},7274:(e,t,r)=>{r.d(t,{u:()=>i});class i{constructor(e,t,r,i,n){this.permutiveData=e,this.permutiveReset=t,this.userId=r,this.viewId=i,this.eventsCache=n}getPermutiveData(e){return this.permutiveData.getData(e)}setPermutiveData(e,t){return this.permutiveData.setData(e,t)}getStateSizeInBytes(){return this.permutiveData.getDataSize()+this.eventsCache.getStateSizeInBytes()}reset(){return this.permutiveReset.reset()}}},9117:(e,t,r)=>{r.d(t,{M:()=>o});var i=r(3735),n=r(6567),s=r(3540),a=r(2122);class o{constructor(e,t,r,n){this.config=e,this.clientContext=t,this.cookies=r,this.externalData=n,this.setUserId=i.Q1;const a=this.getOrGenerateUserId(),[o,c]=s.Ue(a);this.userId=o,this.setUserId=c,this.set(a)}isEqual(e){return this.userId.current===e}get(){return this.userId.current}getRef(){return this.userId}set(e){this.cookies.setCookie(this.config.cookieName,e,!0),this.externalData.setExternalData(this.config.cookieName,e),this.clientContext.updateContext(["user_id",e]),this.setUserId(e)}getOrGenerateUserId(){return(0,n.fS)((()=>(0,n.fS)(a.k$)(this.getUserIdFromLocalStorage())))(this.getUserIdFromCookie())}getUserIdFromCookie(){return this.getUserIdFromStorageIfValid("cookie")}getUserIdFromLocalStorage(){return this.getUserIdFromStorageIfValid("localStorage")}getUserIdFromStorageIfValid(e){const t=(0,n.DT)(a.Gz);return(0,i.zG)("cookie"===e?this.cookies.getCookie(this.config.cookieName):this.externalData.getExternalData(this.config.cookieName),n.ij,(0,n.tS)(t))}}},9880:(e,t,r)=>{r.d(t,{W:()=>n});var i=r(2122);class n{constructor(e,t){this.clientContext=e,this.config=t,t.viewId&&(0,i.Gz)(t.viewId)?this.set(t.viewId):this.generateAndSet()}get(){return this.viewId}generateAndSet(){return this.set((0,i.k$)())}set(e){return this.viewId=e,this.clientContext.updateContext(["view_id",this.viewId]),this.viewId}}},5203:(e,t,r)=>{r.d(t,{_:()=>n});var i=r(4769);const n=e=>{const{logger:t,consentTracking:r}=e,n=(e,r)=>(t.debug(`DB: Failed to write ${String(r)} as consent is revoked`),Promise.resolve(r));return e=>class extends e{constructor(){super(...arguments),this.put=(0,i.v)(super.put.bind(this),n,r.isRevoked)}}}},824:(e,t,r)=>{r.d(t,{S:()=>o});var i=r(3735),n=r(5203),s=r(787);class a{constructor(e){this.namespace=e}put(e,t){return(0,i.zG)(this.namespace.getNamespacedStorageKey(String(t)),(t=>window.localStorage.setItem(t,JSON.stringify(e))),(e=>Promise.resolve(t)))}get(e){return(0,i.zG)(this.namespace.getNamespacedStorageKey(String(e)),(e=>window.localStorage.getItem(e)),s.A,(e=>Promise.resolve(e)))}delete(e){return(0,i.zG)(this.namespace.getNamespacedStorageKey(String(e)),(e=>Promise.resolve(window.localStorage.removeItem(e))))}deleteStore(){return Promise.resolve()}}const o=(e,t,r)=>new((0,i.zG)(a,(0,n._)({logger:t,consentTracking:r})))(e)},9455:(e,t,r)=>{r.d(t,{m:()=>i});class i extends Error{constructor(e){super(e),this.name="StoreClosingError"}}},2497:(e,t,r)=>{r.d(t,{Ec:()=>a,_8:()=>s});var i=r(6567),n=r(2122);const s=e=>{const t=e.__tcfapi,r={type:"aborted"},s=["tcloaded","useractioncomplete"];return t?(0,n.a4)((()=>o(t,"getTCData")),(()=>o(t,"getTCData").then((e=>"loaded"===(null==e?void 0:e.cmpStatus)&&s.includes(null==e?void 0:e.eventStatus))))).then((0,i.g_)((()=>r),(e=>({type:"loaded",data:e})))):Promise.resolve({type:"missing"})},a=e=>e.gdprApplies?(0,i.G)(e.vendor.consents):i.YP,o=(e,t)=>new Promise((r=>{e(t,2,(e=>{r(e)}))}))},5165:(e,t,r)=>{r.d(t,{D:()=>i});const i={tradedesk:21,ddp:755,appnexus:32,pubmatic:76,neustar_fabrick:468}},1865:(e,t,r)=>{r.d(t,{U:()=>c});var i=r(655),n=r(2688),s={equals:function(e,t){return e===t}},a=r(3735),o=r(2122);class c{constructor(e,t,r,i,n,s,a,o,c,u,l){this.network=e,this.logger=t,this.api=r,this.permutiveData=i,this.messages=n,this.sessionManager=s,this.metrics=a,this.permutiveIdentity=o,this.queryManager=c,this.permutive=u,this.userId=l,this.lastUserIdentitiesChecked=new Date,this.logger.log("Enabling tpd reporting"),this.messages.on("permutive:segments:updated",(()=>{this.reportUsage()})),this.readThirdPartyCohorts(),this.lastCheckedSession=this.permutiveData.getData("third-party-data-session-id")||""}readThirdPartyCohorts(){this.userSegments=this.permutiveData.getData("third-party-data")||{},this.segmentsPromise=Promise.resolve(this.userSegments)}shouldUseSegmentsInMemory(){const e=this.lastUserIdentitiesChecked>=this.permutiveIdentity.getIdentitiesLastModified;return this.lastUserIdentitiesChecked=new Date,e&&this.lastCheckedSession===this.sessionManager.getSessionId()&&!!this.segmentsPromise}segments(){if(this.shouldUseSegmentsInMemory())return this.segmentsPromise;const e=this.sessionManager.getSessionId(),t=(0,o.b2)();this.lastCheckedSession=e;const r=this.metrics.startTimer("sdk_get_third_party_data_task_duration_seconds",{}),i=Object.assign(Object.assign({},this.permutiveIdentity.getCustomerDefinedIdentitiesMap()),this.permutiveIdentity.getTPDIdentitiesMap());if(Object.keys(i).length>0){const e=this.permutiveIdentity.getPrioritizedIdentities(i),r=u(e),s=e=>(this.userSegments=l(e),this.userSegments),c=e=>{t.resolve(e)},d="Audience matching retrieval failed with reason:",p="Third Party Data segments retrieval failed with reason:",m=(e,t)=>{const r=(0,n.w)(`${e} ${t}`);this.api.reportError(r,this.userId.get())},g=e=>this.metrics.track({name:e,value:1,labels:{}}),h=()=>this.api.audienceMatching(this.metrics,this.userId.get(),{identities:e.map((e=>(0,o.eu)(e,["tag","id"])))}),f=()=>this.api.tpd(this.metrics,r),_=(0,a.ls)(s,c),v=e=>(0,a.zG)(g("sdk_audience_matching_request_fail_count"),(()=>m(d,e)),f),b=e=>(0,a.zG)(m(p,e),(()=>c({})));h().then((e=>_(e.items))).catch((e=>v(e).then((e=>_(e))).catch((e=>b(e)))))}else t.resolve({});const c=t.promise.then((e=>this.userSegments));return c.then((t=>{this.permutiveData.setData("third-party-data-session-id",e),this.metrics.stopTimer("sdk_get_third_party_data_task_duration_seconds",r);const i=this.permutiveData.getData("third-party-data")||{},n=(0,o.rB)((0,o.rB)(s)),a=(0,o.rB)(s);if(0===Object.keys(i).length||!n.equals(i,t)){this.permutiveData.setData("third-party-data",this.userSegments);const e=Object.entries(t||{});(i?e.filter((e=>{let[t,r]=e;return!a.equals(i[t]||{},r)})):e).forEach((e=>{let[t,r]=e;return this.fireSegments(t,Object.keys(r))}))}})),this.segmentsPromise=c}reset(){this.segmentsPromise=null,this.userSegments={}}fireSegments(e,t){this.permutive.track("ThirdPartySegments",{data_provider:e,segments:t})}reportUsage(){const e=d(this.queryManager.stateMap.value),t=(0,o.vp)(JSON.stringify(e));if(this.permutiveData.getData("third-party-data-usage")!==t&&Object.keys(e).length>0){this.permutiveData.setData("third-party-data-usage",t);const r={user_id:this.userId.get(),time:new Date,tpd_segments:e};this.api.tpdUsage(this.metrics,r)}}}const u=e=>(null==e?void 0:e.reduce(((e,t)=>(e[t.tag]=t.id,e)),{}))||{},l=e=>Object.entries(e).reduce(((e,t)=>{let[r,i]=t;return Object.assign(Object.assign({},e),{[r]:(0,o.j5)(i)})}),{}),d=e=>{const t={},r=Object.keys(e),n=r.length;for(let s=0;s<n;s++){const n=r[s],a=e[n],{activations:o}=a;(0,i._T)(a,["activations"]);o&&Object.keys(o).length>0&&(t[n]=o)}return t}},1970:(e,t,r)=>{r.d(t,{C:()=>c});var i=r(655),n=r(5846),s=r(3735);const a=(o=[[{name:"dfp",import:Promise.resolve().then(r.bind(r,5711))}],[],[],[],[],[],[{name:"brightcove",import:Promise.resolve().then(r.bind(r,1522))}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[{name:"rubicon_ssp",import:Promise.resolve().then(r.bind(r,8563))}],[],[],[],[],[{name:"web",import:Promise.resolve().then(r.bind(r,4295))}],[],[{name:"ctv",import:Promise.resolve().then(r.bind(r,1157))}],[]],(0,s.zG)((0,n.xH)(o),(0,n.u4)({},((e,t)=>Object.assign(Object.assign({},e),{[t.name]:t.import})))));var o;const c=e=>{let{_internals:t,logger:r,network:n,permutiveMethods:s,q:o,clientContext:c}=e;const u=Object.entries(a).map((e=>{let[a,u]=e;return(0,i.mG)(void 0,void 0,void 0,(function*(){return r.log(`Loading addon ${a}`),(yield u).load(o,s,t,n,c)}))}));return Promise.all(u)}},1522:(e,t,r)=>{r.r(t),r.d(t,{load:()=>s});var i=r(655),n=r(8771);const s=(e,t,r,s,a)=>{(function(){function e(e,t,r){let i=0;const n=setInterval((function(){(e()||i===r)&&clearInterval(n),i++}),t)}function t(){return(0,i.mG)(this,void 0,void 0,(function*(){return{userId:r.state.userId.get(),visitId:r.state.viewId.get(),sessionId:r.sessionManager.getSessionId(),client:yield a.getClient(),segments:r.queryManager.userSegments.getAllAsList()}}))}function s(e){return(0,i.mG)(this,void 0,void 0,(function*(){const n=yield t();e.postMessage({type:"Init",data:n},"*"),e.postMessage({type:"permutive:init",data:n},"*"),r.messages.on("permutive:segments:updated",r.makeSafe((function(){return(0,i.mG)(this,void 0,void 0,(function*(){e.postMessage({type:"permutive:update",data:yield t()},"*")}))})))}))}const o=function(){return"undefined"!=typeof videojs&&(Object.values(videojs.players).filter((e=>!!e)).forEach((e=>e.on("loadedmetadata",(()=>s(window))))),s(window),!0)},c=function(){!function(){const e=document.getElementsByTagName("iframe");if(0===e.length)return;[].slice.call(e).forEach((e=>{"amp-brightcove"!==e.parentNode.nodeName.toLowerCase()&&-1!==e.src.indexOf("brightcove")&&(s(e.contentWindow),e.addEventListener("load",(()=>{s(e.contentWindow)})))}))}(),function(){const t=document.getElementsByTagName("amp-brightcove");if(0===t.length)return;[].slice.call(t).forEach((t=>{e((function(){const e=t.getElementsByTagName("iframe");return e.length>0&&(s(e[0].contentWindow),!0)}),500,10)}))}(),"complete"===document.readyState?o():window.addEventListener("load",(function(){e(o,500,10)}),!1)},u=function(){var e,t;(null===(t=null===(e=r.state)||void 0===e?void 0:e.userId)||void 0===t?void 0:t.get())?c():r.messages.on("permutive:user:ready",c)};(0,n.p)((()=>r.extMessages.listen("brightcove-init",u)),"permutive:internals:extMessages:ready",r.messages).catch((e=>r.api.reportError(`Error on brightcove-init. Got ${e.message}`))),u()})()}},8427:(e,t,r)=>{r.r(t),r.d(t,{createAddon:()=>S,getCachedCleanRoomSegments:()=>w,getCachedDFPSegments:()=>E});var i=r(655),n=r(2688),s=r(5846),a=r(70),o=r(3735),c=r(6567),u=r(2751);var l=r(3540),d=r(9853),p=r(2122);const m="_pdfps";r(5700);let g=!1;let h;const f=(e,t)=>{const{logger:r}=t;(0,o.zG)(e,c.UI((e=>{!0!==g&&e.pubadsReady&&(null!=h||(h=i=>{let{slot:n}=i;const{getContentUrl:s}=n;if(!s||"function"!=typeof s)return;(0,o.zG)(s(),(0,u.pn)("&trunc=1"))&&(r.debug("DFP content URL has been truncated!"),(e=>{let{metrics:t,logger:r}=e;g||(t.track({name:"sdk_targeting_size_limit_exceeded_count",value:1,labels:{target:"dfp"}}),g=!0,r.debug("DFP has exceeded targeting limit"))})(t),e.pubads().removeEventListener("slotRenderEnded",h),h=null)}),e.pubads().addEventListener("slotRenderEnded",h))})))},_=(e,t,r,i)=>{const{logger:n}=t;f(e,t);(0,o.zG)(e,c.UI((e=>(e=>{e.cmd.push((()=>{const{getTargeting:t,setTargeting:a}=e.pubads(),o=t("permutive")||[],c=Object.values(r.eligibleSegments).map(String).concat(r.cloudCohorts).concat(r.cleanRoomSegments).concat("rts"),u=(0,s.uK)((e=>c.includes(e))),{left:l}=u(o),d=i.concat(l).concat("rts");n.debug("DFP setting GPT targeting to",d),a("permutive",d)}))})(e))))};var v=r(5711);const b={liveSegments:[],cloudCohorts:[],cleanRoomSegments:[],eligibleSegments:{}},y={segments:b,getGAMKeyValues:()=>({permutive:""})},w=e=>{const t=e.getExternalJsonData("_pcrdbs")||[],r=e.getExternalJsonData("_pcrprs")||[];return(0,s.G0)(u.Eq)(t)(r)},E=e=>e.getExternalJsonData(m)||[],k=(e,t,r)=>{const{logger:i,externalData:s,api:a}=t;let o=r.map(String).concat(b.cloudCohorts).concat(b.cleanRoomSegments);i.debug("DFP is updating with targeting values",o),_(e,t,b,o);try{s.setExternalJsonData(m,o)}catch(e){const t=(0,n.w)(e),r="DFP failed to set data. Got:";i.error(r,t),a.reportError(`${r} ${t.message}`)}return((e,t)=>{let{api:r,logger:i}=e;(0,d.$S)("sync_segments_cookie",!1)?(i.debug("DFP syncing segment cookie _pdfps"),r.segmentSync({key:m,value:t})):i.debug("DFP sync segments cookie not enabled, skipping sync")})(t,JSON.stringify(o)),i.debug("DFP live segments updated to",r),r},S=e=>(0,i.mG)(void 0,void 0,void 0,(function*(){const{api:t,logger:r,activationManager:i,messages:n,externalData:s,nextGenOutput:u,userId:d,cookies:g}=e,h=yield(0,p.a4)((()=>window.googletag),(()=>!!window.googletag),{waitTimeInMs:10,maxAttempts:200,exponentialBackOff:!1});c.Wi(h)&&r.error("[DFP]: unable to find google tag script on the page"),(0,o.zG)(h,c.UI((e=>(e=>e.cmd.push((()=>e.pubads().setTargeting("prmtvsdk","web"))))(e))));y.getGAMKeyValues=()=>Object.assign(Object.assign({},(0,o.zG)((0,v.generateProjectSpecificKVs)(e),a.Vn((e=>{var r;return r=e,t.reportError(`[DFP] ${r}`,d.get()),e})),a.fS((()=>({}))))),{permutive:y.segments.liveSegments.join(",")}),b.eligibleSegments=(e=>{const t=e.getSpecializedActivations("dfp"),r={};for(const e of t.dfp)r[e]=e;for(const e of Object.keys(t.dfp_legacy)){const i=Number(e);r[i]=t.dfp_legacy[i]}return r})(i);const f=(0,o.zG)(u,l.UI((e=>e.queryLanguageSegments)),l.UI((e=>(r.debug("DFP received QL segments",{qlSegments:e}),(0,o.zG)(e,c.fS((()=>[])),(e=>((e,t)=>e.filter((e=>e in t)).map((e=>t[e])))(e,b.eligibleSegments)))))),l.D8(p.cO)),_=(0,o.zG)(u,l.UI((e=>e.cloudCohorts.gam))),[E,S]=l.Ue(w(s));return n.on("permutive:cleanroom:db:updated",S),n.on("permutive:reset",(()=>S([]))),(0,o.zG)(l.vP(f,_,E),l.YP((0,p.Z_)(t,d,(t=>{let[i,n,s]=t;r.debug("DFP received updated cohorts",{filteredQlSegments:i,cloudCohorts:n,cleanRoomSegments:s}),b.cloudCohorts=n,b.cleanRoomSegments=s,b.liveSegments=k(h,e,i)})))),r.debug("DFP initialised with segments",b),n.on("permutive:reset",(0,p.Z_)(t,d,(()=>{r.debug("DFP received 'permutive:reset' event"),s.removeExternalData(m),g.deleteCookie(m)}))),n.emit("permutive:dfp:ready"),y}))},5711:(e,t,r)=>{r.r(t),r.d(t,{generateProjectSpecificKVs:()=>S,load:()=>l});var i=r(2688),n=r(70),s=r(3735),a=r(922),o=r(2122),c=r(8427);const u={},l=(e,t,r)=>{e.push({functionName:"addon",arguments:["dfp",{}]});window.googletag=window.googletag||{},window.googletag.cmd=window.googletag.cmd||[],window.googletag.cmd.push((()=>d(t,r)))},d=(e,t)=>{e.ready(t.makeSafe((()=>y(t.metrics))),"realtime");w(t.externalData);(0,s.zG)(S(t),n.tS((e=>n.Y3((()=>(0,o.qh)(e).forEach((e=>{let[t,r]=e;googletag.pubads().setTargeting(t,r)}))),i.w))),n.Vn((e=>t.api.reportError(`[DFP:load], ${e}`,t.userId.get())))),f(e),googletag.cmd.push((()=>{_(e),v(e)})),window.addEventListener("message",m(e),!1)},p=e=>{let{advertiserId:t,campaignId:r,lineItemId:i,creativeId:n}=e;return{advertiser_id:(0,o.ke)(t),campaign_id:(0,o.ke)(r),line_item_id:(0,o.ke)(i),creative_id:(0,o.ke)(n)}},m=e=>t=>{var r;try{const i=JSON.parse(t.data);if(!i.permutive_type||"google_ad_click"!==i.permutive_type)return;const{ad_unit_path:n,creative_id:s,advertiser_id:a,order_id:o,line_item_id:c}=null!==(r=null==i?void 0:i.data)&&void 0!==r?r:{},l=p({lineItemId:c,advertiserId:a,campaignId:o,creativeId:s});let d;Object.keys(u).some((e=>{const{slot:t,creative_id:r}=u[e];if((null==t?void 0:t.ad_unit_path)===n&&r===l.creative_id)return d=u[e],!0})),d=null!=d?d:Object.assign(Object.assign({},l),{is_empty:!1}),g(e,d)}catch(e){}},g=(e,t)=>{a.PH&&t&&e.track("SlotClicked",t)},h=(e,t,r)=>{u[t]=r,b(e,r),k(e,t)},f=e=>{const t=googletag.pubadsReady&&googletag.pubads().getSlots();t&&t.forEach((t=>{const r=t.getResponseInformation();if(!r)return;const i=Object.assign(Object.assign({},p(r)),{is_empty:!1,service_name:"publisher_ads",slot:E(t)}),n=t.getSlotElementId();h(e,n,i)}))},_=e=>{googletag.pubads().addEventListener("slotRenderEnded",(t=>{const r=Object.assign(Object.assign({},p(t)),{is_empty:t.isEmpty,service_name:t.serviceName,slot:E(t.slot)});if(t.size){const[e,i]=t.size;"number"==typeof e&&"number"==typeof i&&(r.width=e,r.height=i)}const i=t.slot.getSlotElementId();h(e,i,r)}))},v=e=>{a.EW&&googletag.pubads().addEventListener("impressionViewable",(t=>{let{slot:r,serviceName:i}=t;const n=r.getResponseInformation();if(!n)return;const s=Object.assign(Object.assign({},p(n)),{service_name:i,slot:E(r)});e.track("SlotViewable",s)}))},b=(e,t)=>{if(!a.CL)return;var r;r=Object.assign(Object.assign({},t),{rendered_timestamp:Date.now()}),e.track("SlotRendered",r)},y=e=>{let t=0;const r=googletag.pubadsReady&&googletag.pubads().getSlots();r&&r.forEach((e=>e.getResponseInformation()&&t++));const i=0===t?"sdk_targeting_realtime_success_count":"sdk_targeting_realtime_fail_count";e.track({name:i,value:1,labels:{target:"dfp"}})},w=e=>{const t=(0,c.getCachedDFPSegments)(e);googletag.cmd.push((()=>{const{getTargeting:e,setTargeting:r}=googletag.pubads(),i=e("permutive")||[];r("permutive",[...new Set([...t.map(String),...i])])}))},E=e=>{const t={ad_unit_path:e.getAdUnitPath(),slot_element_id:e.getSlotElementId()};return a.jH?Object.assign(Object.assign({},t),(()=>{const t={},r=[];let i=[];const n=(e,n)=>{const s="slot"===e?e=>t[e]=1:()=>{},a=n.getTargetingKeys();i=a;for(let a=0;a<i.length;a++){const o=i[a];if(void 0!==t[o]&&"service"===e)continue;const c=[],u=n.getTargeting(o);for(let e=0;e<u.length;e++)c.push(u[e].toString());c.length>0&&(s(o),r.push({key:o,value:c}))}};return n("slot",e),n("service",googletag.pubads()),{targeting_keys:r}})()):t},k=(e,t)=>{let r=!1;const i=()=>{r&&"hidden"===document.visibilityState&&g(e,u[t])},n=()=>{r=!0},s=()=>{r=!1};try{document.addEventListener("visibilitychange",i);const e=document.getElementById(t);e.addEventListener("mouseover",n),e.addEventListener("mouseout",s)}catch(e){}},S=e=>{let{userId:t,viewId:r}=e;return n.Y3((()=>({})),i.w)}},8563:(e,t,r)=>{r.r(t),r.d(t,{RubiconSspAddon:()=>a,load:()=>s});var i=r(2122);const n="_prubicons",s=e=>{e.push({functionName:"addon",arguments:["rubicon_ssp",{}]})};class a{constructor(e){this.options=e,this.liveSegments=e.externalData.getExternalJsonData(n)||[],this.eligibleSegments={};const t=this.options.activationManager.getSpecializedActivations("rubicon_ssp");for(let e=0;e<t.length;e++)this.eligibleSegments[t[e]]=!0;const r=this.options.userSegments.getAllAsList();this.updateIfNecessary(r),this.options.messages.on("permutive:segments:updated",(()=>{const e=this.options.userSegments.getAllAsList();this.updateIfNecessary(e)})),this.options.messages.on("permutive:reset",(0,i.Z_)(e.api,e.userId,(()=>{localStorage.removeItem(n),this.liveSegments=[]})))}updateIfNecessary(e){const t=this.filterSegments(e);(0,i.cO)(t,this.liveSegments)||this.options.externalData.setExternalJsonData(n,t),this.liveSegments=t}filterSegments(e){return e.filter((e=>e in this.eligibleSegments))}}},4295:(e,t,r)=>{r.r(t),r.d(t,{WebAddon:()=>S,load:()=>k});var i=r(655),n=r(2688),s=r(70),a=r(3735),o=r(4011),c=r(6567),u=r(7209),l=r(922),d=r(2122),p=r(8219),m=r(9853);const g=(0,m.MU)("add_alchemy_entities",!1),h=(0,m.MU)("add_alchemy_taxonomy",!1);function f(e){return Object.assign(Object.assign(Object.assign({},e&&h?{taxonomy_labels:"$alchemy_taxonomy_labels"}:{}),e&&g?{entity_names:"$alchemy_entity_names"}:{}),{})}function _(e,t,r,i){const n=Object.assign(Object.assign(Object.assign({isp_info:"$ip_isp_info",geo_info:"$ip_geo_info"},{}),e),t);r.track("Pageview",n).then((e=>{i.emit("permutive:event:pageview",e)}))}function v(e,t,r,i,n,s){let a=!(arguments.length>6&&void 0!==arguments[6])||arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:c.YP;const u=b(e,t,r,i,n),l=(0,c.fS)((()=>null))(o);let d={useBeacon:a};null!==l&&(d=Object.assign(Object.assign({},d),{unprocessedData:l})),s.track("PageviewComplete",u,d)}function b(e,t,r,i,n){return Object.assign(Object.assign(Object.assign({isp_info:"$ip_isp_info",geo_info:"$ip_geo_info"},i),r),{aggregations:Object.assign({PageviewEngagement:Object.assign({engaged_time:e},l.UW?{completion:t}:{})},l.ED?{SegmentEntry:Array.from(n.segmentEntryQueryCodes),SegmentExit:Array.from(n.segmentExitQueryCodes),CohortEntry:Array.from(n.cohortEntryQueryCodes),CohortExit:Array.from(n.cohortExitQueryCodes)}:{})})}const y=["mousemove","click","scroll"],w=["email","tel","submit","reset","button","file","password","radio","checkbox"],E=["email","e-mail","password","tel","telephone","phone","name_first","name_last","sa_zip"],k=(e,t)=>{0};class S{constructor(e){this.dirtyState=!1,this.totalCompletion=0,this.totalEngagedTime=0,this.hasPageviewCompleteFired=!1,this.cleanupPageEngagementDetection=a.Q1,this.permutive=e.permutive,this.options=e,this.api=e.api,this.clientContext=e.clientContext,this.logger=e.logger,this.unprocessedPVC=e.unprocessedEvents.PageviewComplete,this.options.customProperties.overrideCustomProps(e.page||{});this.pageEngagementDetected=(()=>{this.dirtyState=!0,l.Uy&&this.resetTimeout()}).bind(this),_(f(this.clientContext.getContext().isArticle),this.options.customProperties.getCustomProps(),this.permutive,this.options.messages),this.enablePageEngagementDetection(),"loading"!==document.readyState?this.attachListeners():window.addEventListener("DOMContentLoaded",this.attachListeners.bind(this),!1),l.t2&&(this.timerHandle=this.registerEngagementInterval(this.getEventInterval())),l.Uy&&(this.setPageviewCompleteTimeout(l.MU),(0,d.aq)((()=>{this.hasPageviewCompleteFired||v(this.totalEngagedTime,this.totalCompletion,f(this.clientContext.getContext().isArticle),this.options.customProperties.getCustomProps(),this.options.queryManager,this.permutive)})))}sendLinkClickEvent(e,t){if(window.location.href&&e.href){const r=0===e.href.indexOf("data:")?"NOT_URL":e.href;this.permutive.track("LinkClick",{dest_url:r},{useBeacon:t})}}sendFormSubmissionEvent(e){{const t=e.currentTarget,r={form:Object.assign(Object.assign(Object.assign({method:t.method||"GET",properties:this.serializeForm(t)},"string"==typeof t.id?{id:t.id}:{}),t.name&&"string"==typeof t.name?{name:t.name}:{}),t.action&&"string"==typeof t.action?{action:t.action}:{})};this.permutive.track("FormSubmission",r)}}trackEngagementInterval(e){return(0,a.zG)(this.updateState(e),(e=>{let{engaged_time:t,total_engaged_time:r,completion:i,total_completion:n}=e;return function(e,t,r,i,n,s){const a=Object.assign(Object.assign({isp_info:"$ip_isp_info",geo_info:"$ip_geo_info",engaged_time:e,total_engaged_time:t},n),{completion:r,total_completion:i});s.track("PageviewEngagement",a)}(t,r,i,n,this.options.customProperties.getCustomProps(),this.permutive)}),(e=>{if(!this.hasPageviewCompleteFired)return function(e,t,r,i,n,s,a,o,c){const u=b(e,t,a,o,c);return n.then((e=>{const t={props:u,sessionId:r,viewId:i,client:e};s.put(t)}))}(this.totalEngagedTime,this.totalCompletion,this.options.sessionManager.getSessionId(),this.options.viewId.get(),this.clientContext.getClient(),this.unprocessedPVC,f(this.clientContext.getContext().isArticle),this.options.customProperties.getCustomProps(),this.options.queryManager)}))}reset(e){return(0,i.mG)(this,void 0,void 0,(function*(){if(this.disablePageEngagementDetection(),l.Uy){const e=yield this.unprocessedPVC.getIfPresent();this.hasPageviewCompleteFired=!1,v(this.totalEngagedTime,this.totalCompletion,f(this.clientContext.getContext().isArticle),this.options.customProperties.getCustomProps(),this.options.queryManager,this.permutive,!1,e)}this.dirtyState=!1,this.options.state.viewId.generateAndSet(),this.totalCompletion=0,this.totalEngagedTime=0,this.options.customProperties.overrideCustomProps(e.page||{}),this.updateWebOptions(e),this.enablePageEngagementDetection();const t={logger:this.logger,config:Object.assign(Object.assign({},this.options.config),{watson:e.watson}),clientContext:this.clientContext,api:this.api,permutiveData:this.options.permutiveData,metrics:this.options.metrics,sessionManager:this.options.sessionManager,enrichers:this.options.enrichers,network:this.options.network};(0,p.H)(t)().then((()=>{_(f(this.clientContext.getContext().isArticle),this.options.customProperties.getCustomProps(),this.permutive,this.options.messages),l.t2&&(clearInterval(this.timerHandle),this.timerHandle=this.registerEngagementInterval(this.getEventInterval()))}))}))}serializeForm(e){return[...e.getElementsByTagName("input")].filter((e=>!(!e.type||!e.id||e.disabled||e.checked||"fieldset"===e.nodeName.toLowerCase()||-1!==w.indexOf(e.type.toLowerCase())||-1!==E.indexOf(e.name.toLowerCase())))).map((e=>({name:e.name||e.id,value:e.value}))).filter((e=>e.value.length<120))}registerEngagementInterval(e){return setInterval((()=>{this.dirtyState&&this.trackEngagementInterval(e)}),1e3*e)}attachListeners(){const e=e=>"a"===e.tagName.toLowerCase(),t=r=>e(r)?(0,c.G)(r):r.parentElement?e(r.parentElement)?(0,c.G)(r.parentElement):t(r.parentElement):c.YP;l.eV&&[].slice.call(document.getElementsByTagName("form"),0).forEach((e=>{e.addEventListener("submit",(0,d.Z_)(this.options.api,this.options.userId,this.sendFormSubmissionEvent.bind(this)))})),l.qr&&document.body.addEventListener("click",(e=>{if(e.target instanceof Element){const r=t(e.target);return(0,c.g_)((()=>{}),(t=>this.sendLinkClickEvent(t,((e,t)=>!("_blank"===t.target||e.metaKey||e.ctrlKey||e.shiftKey||2===e.which||3===e.which))(e,t))))(r)}}),{capture:!0})}updateState(e){const t=Math.max(this.totalCompletion,this.getCurrentCompletion()),r=t-this.totalCompletion;return this.totalEngagedTime+=e,this.totalCompletion=t,this.dirtyState=!1,{engaged_time:e,total_engaged_time:this.totalEngagedTime,completion:r,total_completion:this.totalCompletion}}getCurrentCompletion(){if("function"==typeof this.options.getPageCompletion)return(0,a.zG)((0,s.Y3)((0,a.ls)(this.options.getPageCompletion,Number,(e=>isNaN(e)?0:e),(0,u.uZ)(o.Df)(0,1)),n.w),(0,s.EQ)((e=>(this.logger.warn("Web: invoking getPageCompletion threw an error. Got",e),0)),(e=>(this.logger.debug("Web: invoking getPageCompletion returned",e),e))));return(()=>{const e=document.documentElement.scrollHeight,t=window.pageYOffset+window.innerHeight;return t<=0?0:t>=e?1:t/e})()}setPageviewCompleteTimeout(e){return window.setTimeout((()=>{this.hasPageviewCompleteFired||(v(this.totalEngagedTime,this.totalCompletion,f(this.clientContext.getContext().isArticle),this.options.customProperties.getCustomProps(),this.options.queryManager,this.permutive,!1),this.hasPageviewCompleteFired=!0)}),e)}resetTimeout(){clearTimeout(this.pageviewCompleteTimeoutHandle),this.pageviewCompleteTimeoutHandle=this.setPageviewCompleteTimeout(l.MU)}registerPageEngagementCleanup(e){if("function"!=typeof e)return this.logger.warn("No page detection cleanup was registered"),null;this.cleanupPageEngagementDetection=()=>(0,s.Y3)((()=>{e(),this.cleanupPageEngagementDetection=a.Q1}),(e=>this.logger.warn("Page detection cleanup threw an error",(0,n.w)(e))))}enablePageEngagementDetection(){this.options.addPageEngagementDetection&&(0,a.zG)(this.options.addPageEngagementDetection(this.pageEngagementDetected),(e=>this.registerPageEngagementCleanup(e))),this.setDirtyEventListenersTo(!0,this.getDirtyEvents())}disablePageEngagementDetection(){this.cleanupPageEngagementDetection(),this.setDirtyEventListenersTo(!1,this.getDirtyEvents())}setDirtyEventListenersTo(e,t){const r=e?window.addEventListener:window.removeEventListener;return t.forEach((e=>r(e,this.pageEngagementDetected))),null}getDirtyEvents(){return this.options.dirtyEvents||y}getEventInterval(){return this.options.eventInterval||5}updateWebOptions(e){var t;e.watson={enabled:"boolean"==typeof(null===(t=e.watson)||void 0===t?void 0:t.enabled)?e.watson.enabled:this.options.config.watson.enabled};const r={addPageEngagementDetection:void 0,dirtyEvents:void 0,eventInterval:void 0,getPageCompletion:void 0,page:void 0,watson:void 0};return this.options=Object.assign(Object.assign(Object.assign({},this.options),r),e)}}},176:(e,t,r)=>{r.d(t,{J:()=>n});const i=e=>"string"==typeof e&&"$"===e[0];class n{constructor(){this.replacementMap={}}register(e){this.replacementMap=Object.assign(Object.assign({},this.replacementMap),e.getReplacementMap)}enrich(e,t){return this.enrichRecursive(e,t)}enrichRecursive(e,t){const r={output:{},isFullyEnriched:!0},n=Object.keys(e);for(let s=0;s<n.length;s++){const a=n[s],o=e[a];switch(!0){case i(o):const[e,n]=this.isPropertyReplaceable(o);r.output[a]=e?n:o,this.replacementMap.hasOwnProperty(o)&&n===o&&t&&delete r.output[a],r.isFullyEnriched=!!e&&r.isFullyEnriched;break;case null!==o&&"object"==typeof o&&o.constructor===Object:const s=this.enrichRecursive(o,t);r.output[a]=s.output,r.isFullyEnriched=r.isFullyEnriched&&s.isFullyEnriched;break;default:r.output[a]=o}}return r}isPropertyReplaceable(e){const t=this.replacementMap[e];return[this.replacementMap.hasOwnProperty(e)&&t!==e,t]}}},8219:(e,t,r)=>{r.d(t,{B:()=>o,H:()=>c});var i=r(3735),n=r(5151),s=r(9705);const a=[],o=e=>{a.push(e)},c=e=>{const t=a.map((t=>(0,s.Y3)((()=>t.load(e)),(t=>{e.api.reportError(t)}))));return(0,i.zG)((0,n.RD)(t),(0,n.UI)(i.Q1))}},9078:(e,t,r)=>{r.r(t),r.d(t,{PermutiveMessages:()=>i});class i{constructor(e){this._internals=e,this.handlers={},this.messageQueue={};window.addEventListener("message",(e=>{var t;"permutive"===(null===(t=null==e?void 0:e.data)||void 0===t?void 0:t.origin)&&this.handle(e)}),!1),this._internals.messages.once("permutive:api:ready",(function(){window.postMessage({origin:"permutive",type:"sdk-init"},"*")}))}listen(e,t){if(e in this.handlers||(this.handlers[e]=[]),this.handlers[e].push(t),e in this.messageQueue)for(let t=0;t<this.messageQueue[e].length;t++){const r=this.messageQueue[e][t];this.handle(r)}}handle(e){e.data.type in this.handlers?this.handlers[e.data.type].forEach((t=>{t(e)})):(e.data.type in this.messageQueue||(this.messageQueue[e.data.type]=[]),this.messageQueue[e.data.type].push(e))}}},533:(e,t,r)=>{r.d(t,{o:()=>i,s:()=>n});class i extends Error{constructor(){super(i.defaultMessage),this.name=i.errorName}static get defaultMessage(){return"Network request failed"}}i.errorName="NetworkRequestFailedError";class n extends Error{constructor(){super(n.defaultMessage),this.name=n.errorName}static get defaultMessage(){return"Network request timed out"}}n.errorName="NetworkRequestTimeoutError"},7423:(e,t,r)=>{r.d(t,{F:()=>l});var i=r(655),n=r(2688),s=r(3735),a=r(6567),o=r(3328),c=r(3030),u=r(533);class l{constructor(e,t,r,i,n){this.urls=e,this.config=t,this.network=r,this.metricsCollector=i,this.logger=n,this.prefix="[API]"}identify(e,t,r){const i=()=>this.reqWithMetrics(e,"sdk_http_identify_seconds",{url:this.urls.getEndpointUrl("/identify",a.G(this.config.apiVersion)),method:"POST",payload:{user_id:t.get(),aliases:r},contentType:"text/plain",dataType:"json",withCredentials:!0});return this.identifyPromise?this.identifyPromise=this.identifyPromise.then(i):this.identifyPromise=i()}metrics(e){return this.network.req({url:this.urls.getEndpointUrl("/internal/metrics",a.G(this.config.apiVersion)),method:"POST",payload:e,contentType:"text/plain",dataType:"text",withCredentials:!1})}track(e,t,r){const i=this.getTrackUrl(t,{isFullyEnriched:r,useBeacon:!1});return this.reqWithMetrics(e,"sdk_http_events_seconds",{url:i,method:"POST",payload:t,contentType:"text/plain",dataType:"json",withCredentials:!1})}trackBatch(e,t){const r=this.getTrackUrl(t,{isFullyEnriched:!0,useBeacon:!1});return this.reqWithMetrics(e,"sdk_http_events_seconds",{url:r,method:"POST",payload:t,contentType:"text/plain",dataType:"json",withCredentials:!1})}trackBeacon(e,t){const r=this.getTrackUrl(e,{isFullyEnriched:t,useBeacon:!0});return this.network.reqWithBeacon({url:r,payload:e})}trackBatchBeacon(e){const t=this.getTrackUrl(e,{isFullyEnriched:!0,useBeacon:!0});return this.network.reqWithBeacon({url:t,payload:e})}tpd(e,t){return this.reqWithMetrics(e,"sdk_http_tpd_seconds",{url:this.urls.getEndpointUrl("/tpd",a.G(this.config.apiVersion)),method:"POST",payload:{user_id:t},contentType:"text/plain",dataType:"json",withCredentials:!1})}tpdUsage(e,t){return this.reqWithMetrics(e,"sdk_http_tpd_usage_seconds",{url:this.urls.getEndpointUrl("/tpd/usage",a.G(this.config.apiVersion)),method:"POST",payload:t,contentType:"text/plain",dataType:"json",withCredentials:!1})}audienceMatching(e,t,r){return this.reqWithMetrics(e,"sdk_http_audience_matching_seconds",{url:this.urls.getAudienceMatchingEndpointUrl("/id",a.G("v1"),t),payload:r,method:"POST",withCredentials:!1,dataType:"json"})}reset(e){return this.reqWithMetrics(e,"sdk_http_reset_seconds",{url:this.urls.getEndpointUrl("/reset",a.G(this.config.apiVersion)),method:"POST",payload:null,contentType:"text/plain",dataType:"json",withCredentials:!0})}segmentSync(e){return this.network.req({url:`https://${this.config.segmentSyncApiHost}/sync/${e.key}`,method:"POST",payload:`value=${encodeURIComponent(e.value)}`,contentType:"application/x-www-form-urlencoded",dataType:"json",withCredentials:!0})}modelsBinary(e){return this.reqWithMetrics(e,"sdk_http_models_seconds",{url:this.getModelsUrl("binary"),method:"GET",contentType:"text/plain",dataType:"binary",withCredentials:!1})}modelsJson(e){return this.reqWithMetrics(e,"sdk_http_models_seconds",{url:this.getModelsUrl("json"),method:"GET",contentType:"text/plain",dataType:"json",withCredentials:!1})}state(e,t,r,i,n,s){return this.reqWithMetrics(e,"sdk_http_reset_seconds",{url:this.urls.getEndpointUrl("/state",a.G("v1.0"),[["fetch_unseen",JSON.stringify(s)]]),method:"POST",payload:{group_id:t,event_source_id:r,state:JSON.stringify(i),last_seen_offset:n},contentType:"text/plain",dataType:"json",withCredentials:!1})}cleanRoom(e,t){return this.network.req({url:this.urls.getAdvertiserEndpointUrl("/segment",a.G(this.config.advertiserApiVersion),[["new-session",e.toString()]]),method:"POST",payload:t,contentType:"text/plain",dataType:"json",withCredentials:!1})}appnexus(e){return this.network.req({url:e,method:"GET",contentType:"text/plain",dataType:"json",withCredentials:!0,timeout:2e3})}pxid(e){return this.network.req({url:this.urls.makeAuthenticatedUrl(e),method:"GET",contentType:"text/plain",dataType:"json",withCredentials:!0,timeout:2e3})}queries(){const e={addons:{dfp:{activations:{dfp:[],dfp_legacy:{}},auto_init:!0,track_slot_rendered:!1,track_slot_viewable:!1,track_slot_clicked:!1,track_targeting_keys:!1,sync_segments_cookie:!1},web:{auto_init:!1,track_pageview_engagement:!0,track_pageview_complete:!0,track_form_submission:!1,track_link_click:!1,engagement_edge_only:!0,segment_transition_edge_only:!1}},queries:{queries:{},eventSegments:{},eventsLookup:[],literalsLookup:[],subexpressionsLookup:[],stateSyncReplays:[],propertiesLookup:[]},queries_metadata:{}},t=`${this.config.cdnBaseUrl.startsWith("dev.local:")?"http":"https"}://${this.config.cdnBaseUrl}/queries/3a6b0682-f3e1-4576-a706-5eb4101b9cc3-amp.json`;return this.network.req({url:t,withCredentials:!1,dataType:"json",method:"GET"}).catch((()=>e))}pxidReset(e){return this.network.req({url:this.urls.makeAuthenticatedUrl(e),method:"POST",payload:null,contentType:"text/plain",dataType:"json",withCredentials:!0})}uploadCohortMemberships(e,t){return this.reqWithMetrics(e,"sdk_http_upload_cohort_memberships_seconds",{url:this.urls.getCCSCohortMembershipEndpointUrl("/amp/cohorts",a.G("alpha"),[["i",t.user_id]]),method:"POST",payload:t,contentType:"text/plain",dataType:"json",withCredentials:!1})}getSocioDemoPredictions(e){return this.network.req({method:"POST",url:this.urls.getEndpointUrl("/demographic/infer/v3",a.G(this.config.apiVersion)),dataType:"json",payload:e,withCredentials:!1})}reqWithMetrics(e,t,r){const i=e.startTimer(t,{});return this.network.req(r).then((r=>(0,s.zG)(e.stopTimer(t,i),(e=>r))))}reportError(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Date;return(0,i.mG)(this,void 0,void 0,(function*(){const l=(0,n.w)(e);if(this.logError("Reporting error:\n",l),!this.config.sendClientErrors)return void this.logDebug("Send errors not enabled. Skipping");const d=e=>this.network.req({url:this.urls.getSdkErrorsUrl("/errors",a.G(this.config.sdkErrorsApiVersion)),method:"POST",payload:[e],contentType:"text/plain",dataType:"text",withCredentials:!1}),p=e=>{this.metricsCollector.track({name:"sdk_http_generic_network_request_fail_count_total",value:1,labels:{network_error_type:e}})};yield(0,s.zG)([u.o,u.s],o.Ew((e=>l.name===e.errorName||l.message.indexOf(e.errorName)>=0||l.message.indexOf(e.defaultMessage)>=0)),a.g_((()=>{const e=(()=>{var e,i,n,s,a,o,u,d;const p={error_message:null!==(i=null===(e=null==l?void 0:l.message)||void 0===e?void 0:e.toString())&&void 0!==i?i:"",stack_trace:null===(n=null==l?void 0:l.stack)||void 0===n?void 0:n.split("\n")},m=t?{user_id:t}:{};return Object.assign({platform:"web",sdk_version:"v19.55.0",ql_runtime_version:"v5.2.2",timestamp:r,domain:null!==(a=null===(s=null===window||void 0===window?void 0:window.location)||void 0===s?void 0:s.hostname)&&void 0!==a?a:"",url:(0,c.bk)(null===(o=null===window||void 0===window?void 0:window.location)||void 0===o?void 0:o.href),referrer:(0,c.bk)(null===document||void 0===document?void 0:document.referrer),user_agent:null!==(u=null===navigator||void 0===navigator?void 0:navigator.userAgent)&&void 0!==u?u:"",error_message:null!==(d=p.error_message)&&void 0!==d?d:String(l),stack_trace:p.stack_trace},m)})();return d(e).catch((0,s.ls)(n.w,(e=>this.logError(e))))}),(e=>(0,i.mG)(this,void 0,void 0,(function*(){return p(e.errorName)})))))}))}getTrackUrl(e,t){const{isFullyEnriched:r,useBeacon:i}=t,n=Array.isArray(e),s=!r;return this.urls.getEndpointUrl(n?"/batch/events":"/events",a.G(this.config.apiVersion),[["enrich",JSON.stringify(s)],["sdkp",JSON.stringify(!i)]])}getModelsUrl(e){const t=`https://${this.config.cdnBaseUrl}`;switch(e){case"binary":return`${t}/models/v2/3a6b0682-f3e1-4576-a706-5eb4101b9cc3-models.bin`;case"json":return`${t}/models/3a6b0682-f3e1-4576-a706-5eb4101b9cc3-models.json`}}logDebug(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];this.logger.debug(this.prefix,...t)}logError(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];this.logger.error(this.prefix,...t)}}},4586:(e,t,r)=>{r.d(t,{E:()=>a});var i=r(70),n=r(3735),s=r(533);class a{constructor(){}req(e){return this.reqImpl(e).then((e=>(0,n.MZ)(e)))}reqWithBeacon(e){let{url:t,payload:r}=e;return null===navigator||void 0===navigator?void 0:navigator.sendBeacon(t,JSON.stringify(r))}reqImpl(e){const{url:t,dataType:r,contentType:n,method:a,withCredentials:o,timeout:c}=e;return new Promise(((u,l)=>{const d=new XMLHttpRequest,p="POST"===e.method?"string"==typeof(m=e.payload)?m:JSON.stringify(m):null;var m;d.onload=function(){if(this.status>=400){const e="text"===this.responseType||""===this.responseType?this.responseText:"Couldn't access response text";l(`Failed ajax request. Status code was ${this.status}. ${e}`)}else if("json"===r){const e=this.responseText?(0,i.Y3)((()=>JSON.parse(this.responseText)),(e=>`Failed to parse response as JSON. Response was ${JSON.stringify(this.responseText)}. Got ${e}`)):(0,i.F2)(null);(0,i.g_)(l,u)(e)}else u("text"===r?this.responseText:this.response)},d.onerror=()=>l(new s.o),d.ontimeout=()=>l(new s.s),d.open(a,t,!0),n&&d.setRequestHeader("content-type",n),d.timeout=c||d.timeout,d.withCredentials=o||d.withCredentials,d.responseType="binary"===r?"arraybuffer":d.responseType,d.send(p)}))}}},7548:(e,t,r)=>{r.d(t,{XO:()=>n,bk:()=>a,kJ:()=>i,mh:()=>s,sv:()=>o});const i=e=>Object.assign({id:e.id,name:e.name,time:new Date(e.time),properties:e.properties||{}},c(e)),n=e=>Object.assign({id:e.id||null,name:e.name,time:(u(e.time)?e.time:new Date).toISOString(),properties:e.properties||{}},c(e)),s=(e,t)=>Object.assign({id:e.id,time:new Date(e.time),name:t.name,properties:t.properties},c(t)),a=e=>void 0!==e.request_id,o=e=>void 0!==e.properties,c=e=>Object.assign(Object.assign({},e.session_id?{session_id:e.session_id}:{}),e.view_id?{view_id:e.view_id}:{}),u=e=>isFinite(e)&&e instanceof Date},310:(e,t,r)=>{r.d(t,{s:()=>n});var i=r(6567);class n{constructor(e){this.config=e,this.PATH_JOINER_Q="?",this.PATH_JOINER_A="&"}getEndpointUrl(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return this.getUrl("base",e,t,r)}getSdkErrorsUrl(e,t){return this.getUrl("sdk-errors",e,t,[])}getAdvertiserEndpointUrl(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return this.getUrl("adv",e,t,r)}getClassificationModelsEndpointUrl(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return this.getUrl("clm",e,t,r)}getAudienceMatchingEndpointUrl(e,t,r){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];const n=`${e}/${r}/audiences`;return this.getUrl("audience-matching",n,t,i)}getCCSCohortMembershipEndpointUrl(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return this.getUrl("ccs",e,t,r)}makeAuthenticatedUrl(e){return this.makeUrlWithQueryParams(e,[["k",this.config.apiKey]])}getUrlPrefix(e){switch(e){case"base":return"";case"adv":return"/adv";case"sdk-errors":return"/sdk-errors";case"clm":return"/clm";case"audience-matching":return"/audience-matching";case"ccs":return"/ccs"}}getUrl(e,t,r,n){const s=this.getUrlPrefix(e),a=(0,i.g_)((()=>""),(e=>`/${e}`))(r),o=`${this.config.apiProtocol}://${this.config.apiHost}${s}${a}${t}`;return this.makeUrlWithQueryParams(o,n.concat([["k",this.config.apiKey]]))}makeUrlWithQueryParams(e,t){const r=t.map((e=>{let[t,r]=e;return`${t}=${r}`})).join(this.PATH_JOINER_A),i=e.includes(this.PATH_JOINER_Q)?this.PATH_JOINER_A:this.PATH_JOINER_Q;return`${e}${i}${r}`}}},3982:(e,t,r)=>{r.d(t,{v:()=>E});var i=r(655),n=r(3735),s=r(1450),a=r(3540);function o(e){return(0,s.TS)(c,e)}const c={output:a.a9(void 0),state:a.a9(void 0),stop:()=>(0,i.mG)(void 0,void 0,void 0,(function*(){}))};function u(e){return t=>{const[r,n]=a.BT(t.input),s=e(Object.assign(Object.assign({},t),{input:r}));return Object.assign(Object.assign({},s),{stop:()=>(0,i.mG)(this,void 0,void 0,(function*(){n(),yield s.stop()}))})}}function l(e){return t=>{const r=e(t),i=a.vP(t.input,r.output,r.state);return Object.assign(Object.assign({},r),{output:(0,n.zG)(i,a.UI((e=>{let[t,r]=e;return r}))),state:(0,n.zG)(i,a.UI((e=>{let[t,r,i]=e;return i})))})}}var d=r(2122),p=r(6567);function m(e){const t=(0,n.zG)(a.vP(function(e){0;const{consent:t}=e;return t}(e),function(){const e=()=>Math.floor(Date.now()/1e3),[t,r]=a.Ue(e());return setInterval((()=>r(e())),10),t}(),function(e){let{messages:t}=e;const[r,i]=a.Ue(new Set);return t.on("permutive:addon:preinit",(e=>i(new Set([...r.current,e])))),r}(e),function(e){let{messages:t,userSegments:r,logger:i}=e;const s="[Ref: QL segments]",o=()=>(0,n.zG)([...r.getAllAsList()],p.DT((e=>e.length>0))),[c,u]=a.Ue(o());return i.debug(s,"initialised",{segments:c.current}),t.on("permutive:segments:updated",(()=>{const e=o();i.debug(s,"updated",{segments:e}),u(e)})),t.on("permutive:reset",(()=>{i.debug(s,"reset"),u(p.YP)})),(0,n.zG)(c,a.D8(((e,t)=>p.pC(e)&&p.pC(t)?(0,d.cO)(e.value,t.value):p.pC(e)===p.pC(t))))}(e),function(e){let{messages:t,realtime:r}=e;const[i,n]=a.Ue(r.isReady());return t.on("permutive:ready",(()=>n(!0))),i}(e),function(e){let{messages:t,realtime:r}=e;var i;const[n,s]=a.Ue(null!==(i=r.isRealtime())&&void 0!==i&&i);return t.on("permutive:realtime",(()=>s(!0))),t.on("permutive:reset",(()=>s(!1))),n}(e),e.userId.getRef()),a.UI((e=>{let[t,r,i,n,s,a,o]=e;return{consent:t,currentTimestampSecs:r,enabledAddons:i,queryLanguageSegments:n,ready:s,realtime:a,userId:o}}))),[r,i]=a.Ue(t.current);return t.onChange((()=>setTimeout((()=>i(t.current))))),r}function g(){return e=>{let{input:t}=e;return{components:{},output:t,state:a.a9({}),stop:()=>(0,i.mG)(this,void 0,void 0,(function*(){}))}}}function h(e,t,r){return s=>o=>{const c=s(o),u=f(o.previousState)?o.previousState[e]:null,l=(0,n.zG)(c.output,a.UI(r)),d=t({previousState:u,input:l});return{components:Object.assign(Object.assign({},c.components),{[e]:d}),output:(0,n.zG)(a.vP(c.output,d.output),a.UI((t=>{let[r,i]=t;return Object.assign(Object.assign({},r),{[e]:i})}))),state:(0,n.zG)(a.vP(c.state,d.state),a.UI((t=>{let[r,i]=t;return Object.assign(Object.assign({},r),{[e]:i})}))),stop:()=>(0,i.mG)(this,void 0,void 0,(function*(){yield Promise.all([d.stop(),c.stop()])}))}}}const f=function(e){return"object"==typeof e&&!!e&&e.constructor===Object};function _(e){return t=>r=>{const i=t(r);return Object.assign(Object.assign({},i),{output:e(i.output)})}}const v=()=>({allCohorts:[],gam:[],xandrSsp:[]}),b=function(e){return t=()=>({output:a.a9(v())}),(0,n.zG)((0,n.ls)(t,o),u,l);var t},y=e=>{return(0,n.zG)(g(),h("classificationModels",b(e),n.yR),_((0,n.ls)(a.UI((0,d.vg)("classificationModels")),a.UI((e=>({cohorts:{all:e.allCohorts,gam:e.gam,xandrSsp:e.xandrSsp}}))))),(e=>r=>{const n=e(r);if(t)return t(n);const{components:s}=n;return(0,i._T)(n,["components"])}));var t};p.YP;function w(e){return(0,n.zG)(g(),h("publisherCohorts",y(e),(e=>({consent:e.consent,currentTimestampSecs:e.currentTimestampSecs,enabledAddons:e.enabledAddons,queryLanguageCohorts:e.queryLanguageSegments,realtime:e.realtime,userId:e.userId}))),_((0,n.ls)(a.UI((e=>({cloudCohorts:e.publisherCohorts.cohorts,queryLanguageSegments:e.queryLanguageSegments}))),a.D8((t=e=>[e.cloudCohorts,e.queryLanguageSegments],(e,r)=>(0,d.cO)(t(e),t(r)))))));var t}function E(e){const t=function(e){const t=function(e){const{api:t,config:r,logger:i,metrics:n,network:s,urls:a}=e;return{config:r,logger:i,metrics:n,permutiveApi:s,permutiveUrls:a,reportError:function(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};t.reportError(e,null==r?void 0:r.userId,null==r?void 0:r.timestamp)}}}(e),r=e.namespace.getNamespacedStorageKey("permutive-app"),s=5e3;return(0,n.zG)(w(t),function(e){return t=>r=>{const n=t(r),[s,o]=a.Ue(n.state.current),c=()=>o(n.state.current),u=setInterval(c,e);let l=!1;return(0,d.aq)((()=>!l&&c()),navigator.userAgent),Object.assign(Object.assign({},n),{state:s,stop:()=>(0,i.mG)(this,void 0,void 0,(function*(){l=!0;const e=n.stop();c(),clearInterval(u),yield e}))})}}(s),P,k,function(e){return t=>r=>{let{input:i}=r;const s=localStorage.getItem(e),o=t({previousState:s,input:i});return(0,n.zG)(o.state,a.YP((t=>{switch(typeof t){case"string":localStorage.setItem(e,t);break;case"undefined":localStorage.removeItem(e);break;case"object":if(null===t){localStorage.removeItem(e);break}throw new Error("Permutive app raised an invalid state.");default:throw new Error("Permutive app raised an invalid state.")}}))),o}}(r))}(e);return t({input:m(e)}).output}const k=(S=e=>{if("string"!=typeof e)return{};try{return JSON.parse(e)}catch(e){return{}}},D=a.UI(JSON.stringify),e=>t=>{var{previousState:r}=t,n=(0,i._T)(t,["previousState"]);const s=e(Object.assign({previousState:S(r)},n));return Object.assign(Object.assign({},s),{state:D(s.state)})});var S,D;function P(e){return t=>{let{previousState:r,input:i}=t;const s=(0,n.zG)(i,a.UI((e=>e.consent))),o=s.current?r:void 0,c=e({previousState:o,input:i});return Object.assign(Object.assign({},c),{state:(0,n.zG)(a.vP(s,c.state),a.UI((e=>{let[t,r]=e;return t?r:void 0})))})}}},2163:(e,t,r)=>{r.d(t,{NY:()=>m,vk:()=>l,qA:()=>u});var i=r(655),n=r(3735),s=r(3540),a=r(824),o=r(1410);var c=r(30);const u=()=>({opt_in:!0,token:o.L}),l=()=>({opt_in:!1,token:""}),d=e=>{return(0,n.ls)((t=e,e=>(0,n.zG)((0,c.J)(t.consentRequired,e),(e=>{let{consentData:r,isValid:i}=e;return t.consentDatabase.put(r,o.L),i}))),(e=>{let{logger:t,messages:r}=e;return e=>{const i=e?"given":"revoked";return t.log("Consent has been",i),r.emit(`permutive:consent:${i}`),e}})(e));var t},p=e=>(t,r)=>{e.on("permutive:consent:revoked",t),e.on("permutive:consent:given",r)},m=(e,t,r,u)=>{let{consentRequired:l}=u;return(0,i.mG)(void 0,void 0,void 0,(function*(){const i={consentRef:s.a9(!0),isGiven:()=>!0,isRevoked:()=>!1,listenForConsent:n.Q1},u=(0,a.S)(r,t,i),{consentRef:m,giveConsent:g,revokeConsent:h,isRevoked:f,isGiven:_}=(()=>{const[e,t]=s.Ue(!0),r=()=>!0===e.current;return{consentRef:e,revokeConsent:()=>(t(!1),e.current),giveConsent:()=>(t(!0),e.current),isRevoked:()=>!r(),isGiven:r}})(),v=yield u.get(o.L);(0,c.J)(l,v).isValid?g():h();const b={consentRef:m,isGiven:_,isRevoked:f,listenForConsent:p(e)};b.listenForConsent(h,g);return{consentTracking:b,consentValidation:d({consentDatabase:u,consentRequired:l,logger:t,messages:e}),consentDatabase:u}}))}},1410:(e,t,r)=>{r.d(t,{L:()=>i});const i="permutive-consent"},7708:(e,t,r)=>{r.d(t,{D:()=>d});var i=r(5846),n=r(70),s=r(3735),a=r(6567),o=r(5151),c=r(4922),u=r(1410),l=r(30);const d=e=>{const{partialTagWithKey:t}=e,r=t.key;var d;window[r].consent=(d=e,(0,s.ls)(d.consentModule.consentValidation,(e=>e?(0,c.H)(d)():null)));const p=(0,a.EQ)((()=>{return t={consentDatabase:e.consentModule.consentDatabase,consentRequired:e.tag.config.consentRequired},(0,s.zG)((0,s.a9)(t.consentDatabase.get(u.L)),(0,o.UI)((e=>(0,l.J)(t.consentRequired,e).isValid)));var t}),o.of);return(0,s.zG)((0,s.zG)((e=>{let{consentModule:t,tag:r}=e;const n=(0,i.Ew)((function(e){return"consent"===e.functionName}))(r.q);return(0,a.UI)((e=>t.consentValidation(e.arguments[0])))(n)})(e),p),(0,o.UI)((e=>e?(0,n.F2)(!0):(0,n.t$)("No consent to run on the page"))))}},4769:(e,t,r)=>{r.d(t,{v:()=>i});const i=(e,t,r)=>function(){const i=r()?t:e;return i(...arguments)}},30:(e,t,r)=>{r.d(t,{J:()=>a});var i=r(3735),n=r(6567),s=r(2163);const a=(e,t)=>(0,i.zG)((0,n.ij)(t),(t=>!1===e&&(0,n.Wi)(t)?{isValid:!0,consentData:(0,s.qA)()}:(e=>(0,n.pC)(e)&&(e=>null!==e&&"object"==typeof e)(e.value)&&(e=>{var t;return!0===e.opt_in&&"string"==typeof e.token&&(null===(t=e.token)||void 0===t?void 0:t.length)>0})(e.value))(t)?{isValid:!0,consentData:t.value}:{isValid:!1,consentData:(0,s.vk)()}))},9807:(e,t,r)=>{r.d(t,{S:()=>U});var i=r(3735),n=r(655),s=r(6567),a=r(3540),o=r(458),c=r(922),u=r(7548);const l=(e,t)=>{switch(d(e.event,e.isEventFullyEnriched,t)){case"immediate":return m(e);case"memoryOnly":return g(e);case"response":return h(e);case"deferred":return f(e);case"never":return _(e)}},d=(e,t,r)=>r?"deferred":p(e.name,t),p=(e,t)=>S.has(e)?"memoryOnly":k.has(e)?"never":t?"immediate":"response",m=e=>{let{event:t,requestData:r,requestOptions:s,queryManager:a,eventsBatch:o,stateSync:c,metrics:u,logger:l}=e;return(0,n.mG)(void 0,void 0,void 0,(function*(){const[e,{segmentsEntered:n,segmentsExited:d,cohortsEntered:p,cohortsExited:m}]=yield w(t,u,a,l),g=(e,t)=>{const r=new Set(e);for(const e of t)r.delete(e);return r},h=g(new Set([...r.segments,...n]),d),f=g(new Set([...r.cohorts,...p]),m);return l.debug(`Batching ${t.name} with`,{segments:h,cohorts:f}),Promise.all([o.add(Object.assign(Object.assign({},r),{segments:[...h],cohorts:[...f]}),s,"immediate"),c.sync(e)]).then(i.Q1)}))},g=e=>{let{event:t,metrics:r,queryManager:n,logger:s}=e;return w(t,r,n,s).then(i.Q1)},h=e=>{let{requestData:t,requestOptions:r,queryManager:i,eventsCache:n,eventHandler:s,api:a,metrics:o,logger:c}=e;return a.track(o,t,!1).then((e=>v(e,t,r,n,o,i,c))).then((e=>{let{event:t,error:r}=e;return E(s,t,r)}))},f=e=>{let{event:t,isEventFullyEnriched:r,requestData:n,api:a,eventHandler:o}=e;return Promise.all([a.trackBeacon(n,r),E(o,t,s.YP)]).then(i.Q1)},_=e=>{let{requestData:t,requestOptions:r,eventsBatch:i}=e;return i.add(t,r,"never")},v=(e,t,r,i,n,s,a)=>(0,u.bk)(e)?b(e,t,r):y(e,t,r,i,n,s,a),b=(e,t,r)=>{const n={name:t.name,session_id:t.session_id,view_id:t.view_id,properties:t.properties,id:null,time:new Date};return(0,i.zG)(r.error(e.error.message),(t=>Promise.resolve({event:n,error:(0,s.G)(e)})))},y=(e,t,r,n,a,o,c)=>{const l=(0,u.sv)(e)?(0,u.kJ)(Object.assign(Object.assign({},e),{session_id:t.session_id,view_id:t.view_id})):(0,u.mh)(e,t);return w(l,a,o,c).then((e=>(0,i.zG)(r.success(l),(e=>n.add(l,{persistOnDisk:!0})),(e=>({event:l,error:s.YP})))))},w=(e,t,r,n)=>M.has(e.name)?(0,i.zG)(t.startTimer("sdk_events_querylanguage_seconds",{}),(s=>r.process(e,!0).then((r=>(0,i.zG)(t.stopTimer("sdk_events_querylanguage_seconds",s),(t=>n.log("Processing event",e,"caused the following update",r)),(e=>r)))))):Promise.resolve([{},{segmentsEntered:new Set,segmentsExited:new Set,cohortsEntered:new Set,cohortsExited:new Set}]),E=(e,t,r)=>{P.has(t.name)||e.newEvent((0,u.XO)(t),(0,s.fS)((()=>null))(r))},k=new Set(["ThirdPartySegments","SlotRendered"]),S=new Set([...c.D0?["PageviewEngagement"]:[],...c.ED?["SegmentEntry","SegmentExit"]:[],"VideoEngagement"]),D=new Set(["PageviewComplete"]),P=new Set(["PrebidAuctions"]),M=new Set(["!UpdateLookalikeModels","!UpdateSecondPartyData","!UpdateThirdPartyData","FormSubmission","LinkClick","Pageview","PageviewComplete","PageviewEngagement","SegmentEntry","SegmentExit","SlotClicked","SlotViewable","VideoAdPlay","VideoEvent","VideoPlay"]);var q=r(2497),O=r(5165),I=r(8771),x=r(2122);class T{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.wait_prev=t.wait_prev||!1,this.block_next=t.block_next||!1,this.started=!1,this.complete=!1,this.task=e}waits(){return this.wait_prev}blocks(){return this.block_next}execute(e){this.started=!0,this.task((()=>{this.complete=!0,e()}))}}var A=r(1879);class C{constructor(e,t,r,i,n,s,a,o,c,u,l,d,p,m,g,h,f,_,v,b,y,w,E,k,S,D,P,M,q,O,I,x,T,A,C){this.namespace=e,this.logger=t,this.api=r,this.eventHandler=i,this.activationManager=n,this.sessionManager=s,this.metrics=a,this.viewId=o,this.userId=c,this.network=u,this.enrichers=l,this.clientContext=d,this.unprocessedEvents=p,this.eventsBatch=m,this.queryManager=g,this.stateSync=h,this.eventsCache=f,this.taskQueue=_,this.identities=v,this.permutiveReset=b,this.messages=y,this.addons=w,this.trace=E,this.permutiveRealtime=k,this.state=S,this.customProperties=D,this.config=P,this.permutiveData=M,this.externalData=q,this.cookies=O,this.thirdParty=I,this.models=x,this.identitiesIngestor=T,this.global=A,this.nextGenOutput=C,this.initialisedAddons=[],this.triggerListeners=[],this.cloudCohorts=this.setupCloudCohortRef()}identify(e){this.logger.debug("<call> identify",e);const t=(0,x.b2)(),r=this.identities.parseCustomerDefinedIdentities(e),i=Object.assign(Object.assign({},this.identities.getIdentitiesMap()),r.reduce(((e,t)=>{let{tag:r,id:i,priority:n,expiry:s}=t;return Object.assign(Object.assign({},e),{[r]:Object.assign(Object.assign({id:i},void 0!==n?{priority:n}:{}),void 0!==s?{expiry:s}:{})})}),{})),s=Object.values(i).map((e=>e.id)),a=this.identities.getPrioritizedIdentities(i);if("string"==typeof e&&(0,o.Bt)("3a6b0682-f3e1-4576-a706-5eb4101b9cc3","3a6b0682-f3e1-4576-a706-5eb4101b9cc3",s,window.location.hostname,this.userId.get()))return t.resolve(),t.promise;const c=()=>(0,n.mG)(this,void 0,void 0,(function*(){yield(0,A.WI)({logger:this.logger,queryManager:this.queryManager,thirdParty:this.thirdParty,trace:this.trace})})),u=e=>(0,n.mG)(this,void 0,void 0,(function*(){yield(0,A.Yj)({clientContext:this.clientContext,eventsCache:this.eventsCache,global:this.global,identities:this.identities,logger:this.logger,metrics:this.metrics,models:this.models,queryManager:this.queryManager,reset:this.permutiveReset,stateSync:this.stateSync,thirdParty:this.thirdParty,trace:this.trace,userId:this.userId},e.user_id)}));return this.taskQueue.add(new T((e=>(0,n.mG)(this,void 0,void 0,(function*(){this.logger.debug("<task> identify ",r);const i=yield this.api.identify(this.metrics,this.userId,a);this.identities.setIdentities(r),this.userId.isEqual(i.user_id)?yield c():yield u(i),this.logger.debug("<done> identify",r),e(),t.resolve(),yield this.identitiesIngestor.ingestIfEligible(r).catch((e=>this.api.reportError(`Couldn't ingest identities, got ${e}`,this.userId.get())))}))),{wait_prev:!0,block_next:!0})),t.promise}on(e,t){return this.eventHandler.addListener({name:e,callback:t,once:!1})}once(e,t){return this.eventHandler.addListener({name:e,callback:t,once:!0})}track(){var e,t,r;const[n,s,a]=[arguments.length<=0?void 0:arguments[0],(arguments.length<=1?void 0:arguments[1])||{},(arguments.length<=2?void 0:arguments[2])||{}],o=this.trace.startSpan("track_event");this.logger.log("<call> track",n);const c=(0,x.b2)();if(!this.api)return this.api.reportError("The API hasn't been loaded."),c.reject(),c.promise;const u=null!==(e=a.unprocessedData)&&void 0!==e?e:{},d=null!==(t=u.sessionId)&&void 0!==t?t:this.sessionManager.getSessionId(),p=null!==(r=u.viewId)&&void 0!==r?r:this.viewId.get(),m={success:a.success||(e=>{}),error:a.error||((e,t)=>{})};return this.taskQueue.add(new T((e=>{this.logger.log("<task> track",n);const{output:t,isFullyEnriched:r}=this.enrichers.enrich(s,S.has(n));this.metrics.track({name:r?"sdk_event_enrichment_success_count":"sdk_event_enrichment_fail_count",value:1,labels:{}});return(u.client?Promise.resolve(u.client):this.clientContext.getClient()).then((u=>{var g;const h=Object.assign(Object.assign({},t),{client:s.client?(0,x.PM)(u,s.client):u}),f={user_id:this.userId.get(),name:n,cohorts:Array.from(this.cloudCohorts.current).concat(this.queryManager.userSegments.getAllAsList().map(String)),segments:this.queryManager.userSegments.getAllAsList(),properties:h,session_id:d,view_id:p};this.messages.emit("permutive:event:requestData",f);const _={name:n,properties:h,session_id:d,view_id:p,time:new Date};return(v={event:_,requestData:f,isEventFullyEnriched:r,requestOptions:m,logger:this.logger,queryManager:this.queryManager,stateSync:this.stateSync,eventsCache:this.eventsCache,eventHandler:this.eventHandler,metrics:this.metrics,eventsBatch:this.eventsBatch,api:this.api,unprocessedPVC:this.unprocessedEvents.PageviewComplete},b=null!==(g=a.useBeacon)&&void 0!==g&&g,l(v,b).then((e=>D.has(v.event.name)?v.unprocessedPVC.reset():(0,i.Q1)()))).then((t=>{this.logger.log("<done> track",_.name),c.resolve(_),e(),o.finish()})).catch((e=>{m.error(e),this.api.reportError(e,this.userId.get())}));var v,b}))}))),c.promise}trigger(e,t,r){const i=(0,x.b2)();this.logger.log("<call> trigger",e),this.triggerListeners=this.triggerListeners||[];return this.taskQueue.add(new T((t=>{this.logger.log("<task> trigger",e);const n=this.messages.on("permutive:query:changed",(function(t){t.queryCode===e&&(r(t.result),i.resolve(t.result))}));this.triggerListeners.push(n),this.logger.log("<done> trigger",e),t()}))),i.promise}query(){return Promise.resolve({result:!1})}segment(e,t){const r=(0,x.b2)();this.logger.log("<call> segment",e);return this.taskQueue.add(new T((i=>{var n;this.logger.log("<task> segment",e);const s=this.queryManager.stateMap.value[e];s&&(t((null===(n=null==s?void 0:s.result)||void 0===n?void 0:n.result)||!1),r.resolve()),this.logger.log("<done> segment",e),i()}))),r.promise}segments(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"all";const r=(0,x.b2)();this.logger.log("<call> segments");return this.taskQueue.add(new T((i=>{this.logger.log("<task> segments ("+t+")");const n=n=>{e(n),r.resolve(n),this.logger.log("<done> segments ("+t+")"),i()};"dfp"===t?this.messages.once("permutive:dfp:ready",(()=>{n([...this.addons.dfp.segments.liveSegments])})):n(this.queryManager.userSegments.getAllAsList())}))),r.promise}reset(){return Promise.all([this.api.reset(this.metrics),this.identities.reset(),this.permutiveReset.reset(),this.stateSync.reset(),this.unprocessedEvents.PageviewComplete.reset(),this.queryManager.bootstrap([])]).then((e=>{let[t]=e;return this.userId.set(t.id),this.eventsCache.reset()})).then((()=>{this.messages.emit("permutive:reset")})).catch((e=>{this.api.reportError(`Error resetting internals. Got ${e}`)}))}addon(e,t){const i=Object.assign(Object.assign({},t),{permutive:this,api:this.api,activationManager:this.activationManager,network:this.network,clientContext:this.clientContext,logger:this.logger,unprocessedEvents:this.unprocessedEvents,metrics:this.metrics,namespace:this.namespace,state:this.state,queryManager:this.queryManager,messages:this.messages,userId:this.userId,viewId:this.viewId,customProperties:this.customProperties,config:this.config,permutiveData:this.permutiveData,sessionManager:this.sessionManager,userSegments:this.queryManager.userSegments,addons:this.addons,enrichers:this.enrichers,externalData:this.externalData,cookies:this.cookies,nextGenOutput:this.nextGenOutput});if(-1===this.initialisedAddons.indexOf(e))switch(this.initialisedAddons.push(e),this.messages.emit("permutive:addon:preinit",e),e){case"web":Promise.resolve().then(r.bind(r,4295)).then((e=>this.addons.web=new e.WebAddon(i))).then((()=>this.messages.emit("permutive:web:ready")));break;case"publishers":case"overlays":case"scriptrunner":case"nativo":case"freewheel":case"facebook_pixel_v2":case"eyeota_pixel":case"rubicon":case"tracking_pixel":case"twitter_pixel":case"pinterest_pixel":case"local_storage":case"appnexus_adserver":case"prebid":case"classification_models":case"clean_room":case"gam_log":case"socio_demo_cohorts":case"smart":case"tradedesk":case"ddp":case"dbm":case"appnexus":case"pubmatic":case"ssp":0;break;case"dfp":Promise.resolve().then(r.bind(r,8427)).then((e=>(0,n.mG)(this,void 0,void 0,(function*(){return this.addons.dfp=yield e.createAddon(i)}))));break;case"rubicon_ssp":Promise.resolve().then(r.bind(r,8563)).then((e=>this.addons.rubicon_ssp=new e.RubiconSspAddon(i)));break;case"ctv":Promise.resolve().then(r.bind(r,1157)).then((e=>this.addons.ctv=new e.CTVAddon(i)))}else"web"===e&&!0!==t.auto_init?(0,I.p)((()=>this.addons.web.reset(t)),"permutive:web:ready",this.messages).catch((e=>{this.api.reportError(`Got error while trying to reset web. Got ${e.message}`,this.state.userId.get())})):"ctv"===e&&!0!==(null==t?void 0:t.auto_init)&&Promise.resolve().then(r.bind(r,1157)).then((e=>this.addons.ctv=new e.CTVAddon(i)))}addonIfTCFConsent(e,t){const r=()=>{switch(e.key){case"tradedesk":this.addons.tradedesk=new e.Addon(t);break;case"ddp":this.addons.ddp=new e.Addon(t);break;case"appnexus":this.addons.appnexus=new e.Addon(t);break;case"pubmatic":this.addons.pubmatic=new e.Addon(t)}},n=t=>t[O.D[e.key]]?r():(0,i.Q1)();return(0,q._8)(window).then((e=>{switch(e.type){case"missing":return r();case"aborted":return(0,i.Q1)();case"loaded":return(0,i.zG)((0,q.Ec)(e.data),(0,s.g_)(r,n))}}))}ready(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"initialised";const r=(0,x.b2)(),i=()=>{e(),r.resolve()};switch(t){case"initialised":this.permutiveRealtime.isReady()?i():this.messages.on("permutive:ready",i);break;case"realtime":this.permutiveRealtime.isRealtime()?i():this.messages.once("permutive:realtime",i)}return r.promise}setupCloudCohortRef(){const[e,t]=a.Ue(new Set),r=r=>{t(new Set([...e.current,...r]))};return this.messages.on("permutive:cleanroom:db:updated",r),(0,i.zG)(this.nextGenOutput,a.UI((e=>e.cloudCohorts.all)),a.YP(r)),e}}var R=r(4769);const L=e=>{const{logger:t,consentTracking:r}=e,s=function(){return t.debug("Methods[track]: Cannot track as consent is revoked"),Promise.resolve(null)};return e=>class extends e{constructor(){super(...arguments),this.track=(0,R.v)(super.track.bind(this),s,r.isRevoked),r.listenForConsent((()=>this.consentRevoked()),i.Q1)}consentRevoked(){return(0,n.mG)(this,void 0,void 0,(function*(){return yield this.sessionManager.reset(),this.reset()}))}}},U=(e,t,r,n,s,a,o,c,u,l,d,p,m,g,h,f,_,v,b,y,w,E,k,S,D,P,M,q,O,I,x,T,A,R,U,j)=>new((0,i.zG)(C,L({consentTracking:U,logger:t})))(e,t,r,n,s,a,o,c,u,l,d,p,m,g,h,f,_,v,b,y,w,E,k,S,D,P,M,q,O,I,x,T,A,R,j)},9087:(e,t,r)=>{r.d(t,{Oc:()=>l,l9:()=>d});var i=r(1828),n=r(70),s=r(3735);class a{constructor(){}setItem(e,t){return(0,s.zG)(JSON.stringify(t),(t=>window.sessionStorage.setItem(e,t)))}getItem(e){return(0,s.zG)(window.sessionStorage.getItem(e),JSON.parse)}}class o{constructor(){}setItem(){}getItem(){return null}}const c=e=>(0,n.tS)((e=>1===e.size?(0,n.F2)(null):(0,n.t$)("Iterable Maps not supported")))((e=>"function"==typeof e.Map?(0,n.F2)(new e.Map([["a",1]])):(0,n.t$)("Maps not supported"))(e)),u=e=>(0,n.tS)((e=>2===e.size?(0,n.F2)(null):(0,n.t$)("Iterable Sets not supported")))((e=>"function"==typeof e.Set?(0,n.F2)(new e.Set([1,2])):(0,n.t$)("Sets not supported"))(e)),l=e=>(0,s.zG)((0,i.gz)(n.G5)(c(e),u(e),(e=>{const t=["QuotaExceededError","QUOTA_EXCEEDED_ERR","NS_ERROR_DOM_QUOTA_REACHED"];return(0,n.Y3)((()=>{const t="_permutive_ls_test";e.localStorage.setItem(t,t),e.localStorage.removeItem(t)}),(r=>e.localStorage&&0===e.localStorage.remainingSpace||t.some((e=>-1!==String(r).indexOf(e)))?"localStorage quota exceeded":"localStorage not supported"))})(e),(e=>e.Worker&&e.Blob?(0,n.F2)(null):(0,n.t$)("WebWorkers not supported"))(e)),(e=>(0,n.UI)(s.Q1)(e))),d=e=>{const t=(0,n.Y3)((()=>{const t="_permutive_ls_test";e.sessionStorage.setItem(t,t),e.sessionStorage.getItem(t),e.sessionStorage.removeItem(t)}),(e=>"sessionStorage not supported"));return(0,s.zG)(t,(0,n.g_)((()=>new o),(()=>new a)))}},1879:(e,t,r)=>{r.d(t,{Yj:()=>d,TZ:()=>l,MA:()=>m,WI:()=>g});var i=r(655),n=r(2688),s=r(3735),a=r(6567);var o=r(458),c=r(9437);const u=e=>(0,i.mG)(void 0,void 0,void 0,(function*(){yield e.identityPromise,yield function(e,t){return(0,o.Bt)("3a6b0682-f3e1-4576-a706-5eb4101b9cc3","3a6b0682-f3e1-4576-a706-5eb4101b9cc3",e.identities.getPrioritizedIdentities(e.identities.getIdentitiesMap()).map((e=>e.id)),window.location.hostname,e.userId.get())?t.reset():Promise.resolve()}(e,e.permutiveMethods);const t=yield function(e){const t=e.trace.startSpan("identify");0;return(e=>(0,i.mG)(void 0,void 0,void 0,(function*(){const{logger:t,network:r,api:n,userId:s,identities:a,metrics:o,identitiesIngestor:c,messages:u}=e,l=a.extractIdentifyFromQueue(e),d=a.getIdentitiesMap(),p=l.reduce(((e,t)=>{let{tag:r,id:i,priority:n,expiry:s}=t;return Object.assign(Object.assign({},e),{[r]:Object.assign(Object.assign({id:i},s?{expiry:s}:{}),void 0!==n?{priority:n}:{})})}),{}),m=Object.assign(Object.assign({},d),p);t.log("Starting identification... Identities are:",m);const g=a.getPrioritizedIdentities(m),h=yield n.identify(o,s,g).then((e=>(0,i.mG)(void 0,void 0,void 0,(function*(){const r=e.user_id;return s.isEqual(r)?{identityChanged:!1}:(t.log(`Got different user id from API: ${r}`),{identityChanged:!0,userId:r})})))).catch((e=>(0,i.mG)(void 0,void 0,void 0,(function*(){const t=s.get();return n.reportError(`Couldn't set identity for user ${t}. Got ${e}`,t),{identityChanged:!1}}))));return a.setIdentities(Object.entries(m).map((e=>{let[t,{id:r,priority:i,expiry:n}]=e;return Object.assign(Object.assign({tag:t,id:r},n?{expiry:n}:{}),void 0!==i?{priority:i}:{})}))),c.ingestIfEligible(g).catch((e=>n.reportError(`Couldn't ingest identities, got ${e}`,h.identityChanged?h.userId:s.get()))),u.emit("permutive:user:ready"),t.debug("<done> init identity ",h),h})))(e).catch((t=>(e.api.reportError(`Failed to identify. Got ${(0,n.w)(t)}`),{identityChanged:!1}))).then((e=>(t.finish(),e)))}(e);return t.identityChanged?(e.metrics.track({name:"sdk_identity_changed_total",value:1,labels:{}}),yield d(e,t.userId)):(e.metrics.track({name:"sdk_identity_remained_total",value:1,labels:{}}),e.logger.log("Identity has not changed"),yield g(e)),t})),l=e=>(0,i.mG)(void 0,void 0,void 0,(function*(){u(e),yield function(e,t,r,n,o,c,u){e.log("Assuming identity hasn't changed");const l=o.hasNewOrModifiedQueries,d=t.startSpan(`qm_bootstrap_${l}`),p=()=>l?c.all().then((e=>o.bootstrap(e))):o.bootstrap([]);return c.resetIfNeeded().then((e=>e?(u.track({name:"sdk_reset_hearst_count",value:1,labels:{}}),r.reset()):Promise.resolve())).then(p).then((()=>n.PageviewComplete.getIfPresent())).then((0,a.g_)((()=>e.log("No unprocessed PVC data detected")),(t=>(0,s.zG)(e.log("Unprocessed PVC data detected",t),(e=>{const{props:r}=t;return{props:r,unprocessedData:(0,i._T)(t,["props"])}}),(e=>{let{props:t,unprocessedData:i}=e;return r.track("PageviewComplete",t,{unprocessedData:i}).finally((()=>n.PageviewComplete.reset()))}))))).then((()=>d.finish()))}(e.logger,e.trace,e.permutiveMethods,e.unprocessedEvents,e.queryManager,e.eventsCache,e.metrics),p(e.global,e.clientContext)}));function d(e,t){return(0,i.mG)(this,void 0,void 0,(function*(){e.logger.log("Identity has changed"),yield e.reset.reset(),e.userId.set(t),p(e.global,e.clientContext),e.identities.setIdentities([]);const r=yield e.eventsCache.reset(c.m),i=e.trace.startSpan("ss_reset_sync");e.thirdParty.reset(),yield f(e,r),i.finish()}))}function p(e,t){return e.context=t.getContext()}function m(e){let{logger:t,queryManager:r,models:n,trace:s}=e;return(0,i.mG)(this,void 0,void 0,(function*(){const e=s.startSpan("lal_http"),i=yield n.getModels();e.finish(),t.debug("Updating lookalike models");const a=s.startSpan("update_env_lal");return yield r.updateLAL(i),a.finish(),i}))}function g(e){let{logger:t,queryManager:r,thirdParty:n,trace:s}=e;return(0,i.mG)(this,void 0,void 0,(function*(){const e=s.startSpan("tpd_http"),i=yield n.segments();e.finish(),t.log("Updating TPD segments");const a=s.startSpan("update_env_tpd");return yield r.updateTPD(i),a.finish(),i}))}function h(e){const t=e.trace.startSpan("tpd_models");return Promise.all([g(e),m(e)]).then((r=>{let[i,n]=r;e.logger.debug("Loaded TPD segments and lookalike models",i,n),t.finish()}))}const f=(e,t)=>(0,i.mG)(void 0,void 0,void 0,(function*(){yield Promise.all([h(e),e.stateSync.resetSync(),e.queryManager.bootstrap(t)])}))},5919:(e,t,r)=>{function i(e,t,r,i,n){n.debug("set SDK as ready"),e.setAsReady(),t.emit("permutive:api:ready"),r.track({name:"sdk_local_storage_byte_total",value:i.getStateSizeInBytes(),labels:{}}),r.track({name:"sdk_query_states_byte_total",value:e.getStateSizeInBytes(),labels:{}})}r.d(t,{R:()=>i})},8905:(e,t,r)=>{r.d(t,{$o:()=>m,je:()=>g});var i=r(70),n=r(3735),s=r(2122),a=r(3030);const o="__permutive.",c="__permutiveConfigQueryParams";const u={default:{windowKey:"permutive",environment:"default",apiHost:"api.permutive.com",apiKey:"",cdnBaseUrl:"cdn.permutive.com",pxidHost:"prmutv.co",apiVersion:"v2.0",sdkErrorsApiVersion:"v2",advertiserApiVersion:"v2",classificationModelsApiVersion:"v1",apiProtocol:"https",loggingEnabled:!1,tracingEnabled:!1,requestTimeout:5e3,cookieDomain:"."+(0,a._Y)(window.location.hostname),cookieName:"permutive-id",cookieExpiry:function(){const e=new Date;return e.setMonth(e.getMonth()+6),e.toUTCString()}(),eventsTTLInDays:null,permutiveDataMiscKey:"permutive-data-misc",permutiveDataModelsKey:"permutive-data-models",permutiveDataQueriesKey:"permutive-data-queries",permutiveDataTPDKey:"permutive-data-tpd",permutiveDataEnrichersKey:"permutive-data-enrichers",stateNamespace:"",sendClientErrors:!0,metricsSamplingPercentage:20,eventsCacheLimitBytes:25e5,segmentSyncApiHost:"3a6b0682-f3e1-4576-a706-5eb4101b9cc3.partner.permutive.app",consentRequired:!1,sdkType:"stable",viewId:null,localStorageDebouncedKeys:["internal_query_states"],localStorageWriteDelay:1e3,localStorageWriteMaxDelay:1500,watson:{enabled:!0}},production:{},development:{apiProtocol:"http",loggingEnabled:!0,tracingEnabled:!0,sendClientErrors:!1}},l=e=>{const t={consentRequired:!0,loggingEnabled:!0,sendClientErrors:!0,tracingEnabled:!0},r={eventsTTLInDays:!0,eventsCacheLimitBytes:!0,metricsSamplingPercentage:!0,requestTimeout:!0,localStorageWriteDelay:!0,localStorageWriteMaxDelay:!0};return Object.keys(e).reduce(((i,n)=>{if(t.hasOwnProperty(n)){const t="true"===e[n];return Object.assign(Object.assign({},i),{[n]:t})}if(r.hasOwnProperty(n)){const t=Number(e[n]);return isNaN(t)?i:Object.assign(Object.assign({},i),{[n]:t})}return Object.assign(Object.assign({},i),{[n]:e[n]})}),{})},d=e=>Object.entries(e).reduce(((e,t)=>{let[r,i]=t;if(!(0===r.indexOf(o)))return e;const n=r.replace(o,"");return[...e,[n,i]]}),[]),p=(e,t,r)=>{var i;const a=(0,n.zG)(t,d,(e=>(0,s.m8)(...e)),l),o=null!==(i=u[e.environment])&&void 0!==i?i:{};return(0,s.PM)(u.default,o,e,((e,t)=>{const r=t.getItem(c),i=(0,s.PM)(r,e);return t.setItem(c,i),i})(a,r))},m=e=>{var t,r;const s="3a6b0682-f3e1-4576-a706-5eb4101b9cc3",a=void 0!==(null===(t=e[s])||void 0===t?void 0:t.q)&&void 0!==(null===(r=e[s])||void 0===r?void 0:r.config)?s:"permutive";return(0,n.zG)(e[a],(0,i.ij)("Can't find permutive tag on the page"),(0,i.UI)((e=>({tag:e,key:a}))))},g=(e,t,r)=>{let{tag:i,key:n}=e;return Object.assign(Object.assign({},i),{config:p(Object.assign(Object.assign({},i.config),{windowKey:n}),t,r)})}},4207:(e,t,r)=>{r.d(t,{F:()=>s});var i=r(9705),n=r(1117);const s=(0,i.Y3)((()=>{const e=(0,n.e)();return e.postMessage({engine:"QLE",type:"noop",userId:null}),Promise.resolve(e)}),(e=>`Failed to start QueryWorker. Got ${e}`))},7078:(e,t,r)=>{r.d(t,{LA:()=>o});var i=r(5846),n=r(7209),s=r(2122);const a=(e,t,r)=>{let{api:i,state:n}=r;i.reportError(`Function "permutive.${t.functionName}" caused an error: ${e.message}`,n.userId.get())};function o(e,t,r,i,n,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:d;const u=c(e),l=s.startSpan("queued_methods"),p={api:n,state:t.state},m=e=>{if(e.functionName in r){r[e.functionName].apply(i,e.arguments)}else a(new Error("Does not exist."),e,p)},g=e=>!o.includes(e);u.forEach((e=>{try{g(e.functionName)&&m(e)}catch(t){const r=t instanceof Error?t:new Error("Unknown error.");a(r,e,p)}})),l.finish()}function c(e){const t=(0,i.uK)((e=>-1!==l.indexOf(e.functionName)))(e),r=t.right,a=t.left.filter((e=>"consent"!==e.functionName)),o=(0,n.Zt)(((e,t)=>u(e)&&u(t)?(0,s.lW)(p).compare(e.arguments[0],t.arguments[0]):(0,s.lW)(l).compare(e.functionName,t.functionName)));return(0,i.DY)(o)(r).concat(a)}const u=e=>"addon"===e.functionName,l=["identify","trigger","addon","track"],d=["identify"],p=["dfp","appnexus_adserver","web"]},4922:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>initialiseWebSDK,f:()=>initialisationSequence});var tslib__WEBPACK_IMPORTED_MODULE_31__=__webpack_require__(655),fp_ts_Either__WEBPACK_IMPORTED_MODULE_50__=__webpack_require__(70),fp_ts_function__WEBPACK_IMPORTED_MODULE_53__=__webpack_require__(3735),fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__=__webpack_require__(9705),_cost_analysis__WEBPACK_IMPORTED_MODULE_49__=__webpack_require__(4684),_identity_legacy_NeustarFabrickIdentitiesIngestor__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(6967),_identity_legacy_PermutiveIdentities__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(458),_identity_legacy_PermutiveIdentitiesIngestorNoOp__WEBPACK_IMPORTED_MODULE_40__=__webpack_require__(7658),_publisher_cohorts_legacy_models_PermutiveModelsWeb__WEBPACK_IMPORTED_MODULE_39__=__webpack_require__(2361),_core_activations_PermutiveActivationManagerWeb__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(4118),_core_activations_PermutiveAddons__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(9853),_core_context_PermutiveClientContextWeb__WEBPACK_IMPORTED_MODULE_37__=__webpack_require__(8671),_core_crypto_HashcodeDigest__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(6634),_core_events_EventsCacheWeb__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(525),_core_events_PermutiveEventCustomProps__WEBPACK_IMPORTED_MODULE_45__=__webpack_require__(6052),_core_events_PermutiveEventsBatch__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9114),_core_events_unprocessed_UnprocessedPageviewComplete__WEBPACK_IMPORTED_MODULE_43__=__webpack_require__(389),_core_events_unprocessed_UnprocessedPrebidAuctions__WEBPACK_IMPORTED_MODULE_44__=__webpack_require__(5865),_core_internals_CookiesWeb__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(8404),_core_internals_ExternalDataWeb__WEBPACK_IMPORTED_MODULE_36__=__webpack_require__(8076),_core_internals_PermutiveInternals__WEBPACK_IMPORTED_MODULE_42__=__webpack_require__(9849),_core_internals_PermutiveLogger__WEBPACK_IMPORTED_MODULE_55__=__webpack_require__(342),_core_internals_SDKMessages__WEBPACK_IMPORTED_MODULE_58__=__webpack_require__(8491),_core_metrics_MetricReporter__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(4666),_core_metrics_Metrics__WEBPACK_IMPORTED_MODULE_59__=__webpack_require__(4074),_core_queries_query_manager_QueryManagerWeb__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(1117),_core_session_SessionManager__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(8317),_core_state_PermutiveDataStoreWeb__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(8183),_core_state_PermutiveEventSourceId__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(7915),_core_state_PermutiveNamespace__WEBPACK_IMPORTED_MODULE_57__=__webpack_require__(569),_core_state_PermutiveRealtime__WEBPACK_IMPORTED_MODULE_41__=__webpack_require__(7575),_core_state_PermutiveReset__WEBPACK_IMPORTED_MODULE_46__=__webpack_require__(7332),_core_state_PermutiveStateSyncWeb__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(5875),_core_state_PermutiveStateWeb__WEBPACK_IMPORTED_MODULE_48__=__webpack_require__(7274),_core_state_PermutiveUserId__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(9117),_core_state_PermutiveViewId__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__(9880),_core_store_LocalStorageWeb__WEBPACK_IMPORTED_MODULE_35__=__webpack_require__(824),_core_tcf_TCF__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(2497),_core_third_party_ThirdPartyBase__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(1865),_dynamic_addons_LoadAddons__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(1970),_dynamic_enrichment_Enrichers_GlobalEnricher__WEBPACK_IMPORTED_MODULE_38__=__webpack_require__(176),_dynamic_enrichment_RegisterEnrichers__WEBPACK_IMPORTED_MODULE_51__=__webpack_require__(8219),_http_PermutiveApi__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(7423),_http_PermutiveNetwork__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(4586),_http_PermutiveUrls__WEBPACK_IMPORTED_MODULE_56__=__webpack_require__(310),_next_gen__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(3982),_utils_event_handler_PermutiveEventHandler__WEBPACK_IMPORTED_MODULE_34__=__webpack_require__(9379),_utils_PermutiveUtils__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(2122),_utils_task_queue_PermutiveTaskQueue__WEBPACK_IMPORTED_MODULE_47__=__webpack_require__(4996),_utils_Trace__WEBPACK_IMPORTED_MODULE_32__=__webpack_require__(6574),_utils_urls_UrlHelpers__WEBPACK_IMPORTED_MODULE_33__=__webpack_require__(3030),_Consent_Consent__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__(2163),_Consent_InitialisationCheckWeb__WEBPACK_IMPORTED_MODULE_24__=__webpack_require__(7708),_initialisation_browserFeatures__WEBPACK_IMPORTED_MODULE_54__=__webpack_require__(9087),_initialisation_identity__WEBPACK_IMPORTED_MODULE_25__=__webpack_require__(1879),_initialisation_initialisationLifecycle__WEBPACK_IMPORTED_MODULE_52__=__webpack_require__(5919),_initialisation_permutiveTag__WEBPACK_IMPORTED_MODULE_26__=__webpack_require__(8905),_initialisation_queryWorkerInit__WEBPACK_IMPORTED_MODULE_27__=__webpack_require__(4207),_initialisation_queuedMethods__WEBPACK_IMPORTED_MODULE_28__=__webpack_require__(7078),_PermutiveMethodsWeb__WEBPACK_IMPORTED_MODULE_29__=__webpack_require__(9807);const sdkInitTimestamp=window.performance.now(),initialiseWebSDK=_ref=>{let{consentModule,logger,messages,metrics,namespace,network,partialTagWithKey,permutiveData,queryWorker,tag,urls}=_ref;return(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.Y3)((()=>(0,tslib__WEBPACK_IMPORTED_MODULE_31__.mG)(void 0,void 0,void 0,(function*(){const windowKey=partialTagWithKey.key,permutiveGlobal=window[windowKey],config=tag.config,trace=new _utils_Trace__WEBPACK_IMPORTED_MODULE_32__.l(config),sdkReadySpan=trace.startSpan("sdk_ready"),{consentTracking,consentValidation}=consentModule;window[windowKey].consent=consentValidation;const context=(0,_utils_PermutiveUtils__WEBPACK_IMPORTED_MODULE_22__.PM)(tag.context||{},{path:window.location.pathname,url:(0,_utils_urls_UrlHelpers__WEBPACK_IMPORTED_MODULE_33__.bk)(window.location.href),referrer:(0,_utils_urls_UrlHelpers__WEBPACK_IMPORTED_MODULE_33__.bk)(document.referrer)}),createInternalsSpan=trace.startSpan("internals"),eventHandler=new _utils_event_handler_PermutiveEventHandler__WEBPACK_IMPORTED_MODULE_34__.b,cookieStore=(0,_core_internals_CookiesWeb__WEBPACK_IMPORTED_MODULE_7__.S)(namespace,config,logger,consentTracking),localStorage=(0,_core_store_LocalStorageWeb__WEBPACK_IMPORTED_MODULE_35__.S)(namespace,logger,consentTracking),externalData=(0,_core_internals_ExternalDataWeb__WEBPACK_IMPORTED_MODULE_36__.S)(namespace,logger,consentTracking),clientContext=new _core_context_PermutiveClientContextWeb__WEBPACK_IMPORTED_MODULE_37__.z(context),viewId=new _core_state_PermutiveViewId__WEBPACK_IMPORTED_MODULE_15__.W(clientContext,config),userId=new _core_state_PermutiveUserId__WEBPACK_IMPORTED_MODULE_14__.M(config,clientContext,cookieStore,externalData),eventSourceId=new _core_state_PermutiveEventSourceId__WEBPACK_IMPORTED_MODULE_12__.$(permutiveData),enrichers=new _dynamic_enrichment_Enrichers_GlobalEnricher__WEBPACK_IMPORTED_MODULE_38__.J,api=new _http_PermutiveApi__WEBPACK_IMPORTED_MODULE_19__.F(urls,config,network,metrics,logger);(0,_core_metrics_MetricReporter__WEBPACK_IMPORTED_MODULE_8__.p)({api,enrichers,logger,messages,metrics});const identityProviderEnv={permutive:permutiveGlobal,network,api,userId,metrics,permutiveData,messages,config,cookies:cookieStore,logger},identities=new _identity_legacy_PermutiveIdentities__WEBPACK_IMPORTED_MODULE_1__.lg(metrics,trace,permutiveData,identityProviderEnv,logger),identityPromise=identities.prepareThirdPartyIdentities(),models=new _publisher_cohorts_legacy_models_PermutiveModelsWeb__WEBPACK_IMPORTED_MODULE_39__.e(network,logger,api,metrics,permutiveData),identitiesIngestor=new _identity_legacy_PermutiveIdentitiesIngestorNoOp__WEBPACK_IMPORTED_MODULE_40__.z,permutiveRealtime=new _core_state_PermutiveRealtime__WEBPACK_IMPORTED_MODULE_41__.u(metrics,messages),sessionManager=yield _core_session_SessionManager__WEBPACK_IMPORTED_MODULE_10__.S.initialise(cookieStore,localStorage),_internals=new _core_internals_PermutiveInternals__WEBPACK_IMPORTED_MODULE_42__.P(logger,network,userId,viewId,messages,sessionManager,cookieStore,externalData,api);_internals.metrics=metrics,_internals.identities=identities;const eventsCache=new _core_events_EventsCacheWeb__WEBPACK_IMPORTED_MODULE_5__.K(config,namespace,logger,api,trace,metrics,userId,consentTracking),eventsBatch=new _core_events_PermutiveEventsBatch__WEBPACK_IMPORTED_MODULE_6__.c(eventHandler,api,metrics,userId,network,eventsCache),unprocessedArgs={consentTracking,logger,namespace},unprocessedEvents={PageviewComplete:new _core_events_unprocessed_UnprocessedPageviewComplete__WEBPACK_IMPORTED_MODULE_43__.p(unprocessedArgs),PrebidAuctions:new _core_events_unprocessed_UnprocessedPrebidAuctions__WEBPACK_IMPORTED_MODULE_44__.J(unprocessedArgs)},customProperties=new _core_events_PermutiveEventCustomProps__WEBPACK_IMPORTED_MODULE_45__.X,queryManagerTransitionDebounceTime=1e3,queryManagerTransitionMaxDebounceTime=1e4,queryManager=new _core_queries_query_manager_QueryManagerWeb__WEBPACK_IMPORTED_MODULE_9__.c({customProperties,externalData,logger,messages,api,permutive:permutiveGlobal,permutiveData,queryWorker,realtime:permutiveRealtime,sessionManager,transitionDebounceMaxTime:queryManagerTransitionMaxDebounceTime,transitionDebounceTime:queryManagerTransitionDebounceTime,userId,viewId,metrics});_internals.queryManager=queryManager;const permutiveReset=new _core_state_PermutiveReset__WEBPACK_IMPORTED_MODULE_46__.a(config,localStorage,logger,queryManager,permutiveData,eventSourceId,cookieStore,externalData),taskQueue=new _utils_task_queue_PermutiveTaskQueue__WEBPACK_IMPORTED_MODULE_47__.i(messages),stateSync=new _core_state_PermutiveStateSyncWeb__WEBPACK_IMPORTED_MODULE_13__.N(api,network,sessionManager,permutiveData,queryManager,metrics,userId,eventSourceId,(0,_core_state_PermutiveStateSyncWeb__WEBPACK_IMPORTED_MODULE_13__.e)()),thirdParty=new _core_third_party_ThirdPartyBase__WEBPACK_IMPORTED_MODULE_17__.U(network,logger,api,permutiveData,messages,sessionManager,metrics,identities,queryManager,permutiveGlobal,userId),activationManager=new _core_activations_PermutiveActivationManagerWeb__WEBPACK_IMPORTED_MODULE_2__.v(logger,permutiveGlobal,clientContext),state=new _core_state_PermutiveStateWeb__WEBPACK_IMPORTED_MODULE_48__.u(permutiveData,permutiveReset,userId,viewId,eventsCache);_internals.state=state;const nextGenOutput=(0,_next_gen__WEBPACK_IMPORTED_MODULE_21__.v)({api,config,consent:consentTracking.consentRef,logger,messages,metrics,namespace,network,realtime:permutiveRealtime,urls,userId,userSegments:queryManager.userSegments});(0,_cost_analysis__WEBPACK_IMPORTED_MODULE_49__.M)({messages,metrics,permutiveData});const permutiveMethods=(0,_PermutiveMethodsWeb__WEBPACK_IMPORTED_MODULE_29__.S)(namespace,logger,api,eventHandler,activationManager,sessionManager,metrics,viewId,userId,network,enrichers,clientContext,unprocessedEvents,eventsBatch,queryManager,stateSync,eventsCache,taskQueue,identities,permutiveReset,messages,_internals.addons,trace,permutiveRealtime,state,customProperties,config,permutiveData,externalData,cookieStore,thirdParty,models,identitiesIngestor,permutiveGlobal,consentTracking,nextGenOutput);createInternalsSpan.finish(),[].forEach((s=>{(0,fp_ts_Either__WEBPACK_IMPORTED_MODULE_50__.Y3)((()=>eval(s)),(e=>{api.reportError(Object.assign(Object.assign({},e),{message:`Error running custom script ${s}`}),userId.get())}))})),_internals.addBlocker("permutive:queries:initialised"),messages.on("permutive:user:ready",(()=>{permutiveGlobal.identify=permutiveMethods.identify.bind(permutiveMethods);const e=identities.extractIdentifyFromQueue({global:permutiveGlobal});e.length>0&&permutiveGlobal.identify(e)})),_internals.messages.on("permutive:blockers:empty",(()=>{permutiveGlobal.on=permutiveMethods.on.bind(permutiveMethods),permutiveGlobal.once=permutiveMethods.once.bind(permutiveMethods),permutiveGlobal.track=permutiveMethods.track.bind(permutiveMethods),permutiveGlobal.trigger=permutiveMethods.trigger.bind(permutiveMethods),permutiveGlobal.query=permutiveMethods.query.bind(permutiveMethods),permutiveGlobal.segment=permutiveMethods.segment.bind(permutiveMethods),permutiveGlobal.segments=permutiveMethods.segments.bind(permutiveMethods),permutiveGlobal.reset=permutiveMethods.reset.bind(permutiveMethods),permutiveGlobal.ready=permutiveMethods.ready.bind(permutiveMethods),permutiveGlobal.addon=permutiveMethods.addon.bind(permutiveMethods),permutiveGlobal.context=clientContext.getContext(),permutiveGlobal.addons=_internals.addons,permutiveGlobal.config=config,permutiveRealtime.setAsReady(),(0,_initialisation_queuedMethods__WEBPACK_IMPORTED_MODULE_28__.LA)(permutiveGlobal.q,_internals,permutiveGlobal,permutiveMethods,api,trace)}));const loadAddonsSpan=trace.startSpan("load_addons");(0,_dynamic_addons_LoadAddons__WEBPACK_IMPORTED_MODULE_18__.C)({_internals,logger,network,permutiveMethods,q:permutiveGlobal.q,clientContext}),loadAddonsSpan.finish();const loadEnrichersSpan=trace.startSpan("load_enrichers"),enricherEnv={api,config,clientContext,logger,permutiveData,metrics,sessionManager:_internals.sessionManager,enrichers,network},loadEnrichersPromise=(0,_dynamic_enrichment_RegisterEnrichers__WEBPACK_IMPORTED_MODULE_51__.H)(enricherEnv)();loadEnrichersPromise.then((()=>{loadEnrichersSpan.finish()})),yield(0,_initialisation_identity__WEBPACK_IMPORTED_MODULE_25__.TZ)({api,clientContext,eventsCache,externalData,global:permutiveGlobal,identities,identitiesIngestor,identityPromise,logger,messages,metrics,models,network,permutiveMethods,queryManager,reset:permutiveReset,stateSync,thirdParty,trace,unprocessedEvents,userId}),permutiveMethods.ready((()=>{(0,_initialisation_identity__WEBPACK_IMPORTED_MODULE_25__.MA)({logger,queryManager,models,trace})}),"realtime"),yield loadEnrichersPromise,(0,_initialisation_initialisationLifecycle__WEBPACK_IMPORTED_MODULE_52__.R)(queryManager,messages,metrics,state,logger),sdkReadySpan.finish()}))),(e=>`Exception during initialisation. Got ${e}`))},initialisationSequence=(0,fp_ts_function__WEBPACK_IMPORTED_MODULE_53__.zG)(fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.Do,(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.ak)("support",(()=>(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.Uo)((0,_initialisation_browserFeatures__WEBPACK_IMPORTED_MODULE_54__.Oc)(window)))),(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.ak)("queryWorker",(()=>_initialisation_queryWorkerInit__WEBPACK_IMPORTED_MODULE_27__.F)),(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.ak)("sessionStorage",(()=>(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.F2)((0,_initialisation_browserFeatures__WEBPACK_IMPORTED_MODULE_54__.l9)(window)))),(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.ak)("partialTagWithKey",(()=>(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.Uo)((0,_initialisation_permutiveTag__WEBPACK_IMPORTED_MODULE_26__.$o)(window)))),(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.ak)("queryParams",(()=>(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.F2)((0,_utils_urls_UrlHelpers__WEBPACK_IMPORTED_MODULE_33__.zM)()))),(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.ak)("tag",(e=>{let{partialTagWithKey:t,queryParams:r,sessionStorage:i}=e;return(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.F2)((0,_initialisation_permutiveTag__WEBPACK_IMPORTED_MODULE_26__.je)(t,r,i))})),(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.ak)("logger",(e=>{let{tag:t}=e;return(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.F2)((0,_core_internals_PermutiveLogger__WEBPACK_IMPORTED_MODULE_55__.SX)(t.config))})),(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.ak)("urls",(e=>{let{tag:t}=e;return(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.F2)(new _http_PermutiveUrls__WEBPACK_IMPORTED_MODULE_56__.s(t.config))})),(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.ak)("network",(()=>(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.F2)(new _http_PermutiveNetwork__WEBPACK_IMPORTED_MODULE_20__.E))),(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.ak)("namespace",(e=>{let{tag:t}=e;return(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.F2)(new _core_state_PermutiveNamespace__WEBPACK_IMPORTED_MODULE_57__.L(t.config))})),(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.ak)("messages",(e=>{let{logger:t}=e;return(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.F2)(new _core_internals_SDKMessages__WEBPACK_IMPORTED_MODULE_58__.Q(t))})),(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.ak)("consentModule",(e=>{let{tag:t,namespace:r,logger:i,messages:n}=e;return(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.fF)((()=>(0,_Consent_Consent__WEBPACK_IMPORTED_MODULE_23__.NY)(n,i,r,t.config)))})),(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.ak)("permutiveData",(e=>{let{tag:t,namespace:r,logger:i,consentModule:n}=e;return(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.F2)((0,_core_state_PermutiveDataStoreWeb__WEBPACK_IMPORTED_MODULE_11__.S)(t.config,r,i,n.consentTracking))})),(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.ak)("metrics",(e=>{let{tag:t,messages:r,logger:i,permutiveData:n}=e;return(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.F2)((0,_core_metrics_Metrics__WEBPACK_IMPORTED_MODULE_59__.g)(sdkInitTimestamp,t.config,n,r,i))})),(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.ak)("consent",(e=>(0,_Consent_InitialisationCheckWeb__WEBPACK_IMPORTED_MODULE_24__.D)(e))),(0,fp_ts_TaskEither__WEBPACK_IMPORTED_MODULE_30__.tS)((e=>initialiseWebSDK(e))))},2122:(e,t,r)=>{r.d(t,{cO:()=>L,a4:()=>w,PQ:()=>R,b2:()=>y,qh:()=>_,rB:()=>E,fl:()=>x,lW:()=>U,vp:()=>b,Kn:()=>f,G6:()=>A,Gz:()=>q,j5:()=>j,Z_:()=>B,b0:()=>O,PM:()=>v,Fi:()=>C,ke:()=>S,m8:()=>I,aq:()=>P,eu:()=>k,vg:()=>G,hk:()=>h,k$:()=>M});var i=r(4268),n=r(3735),s=r(6567),a=r(7209),o=r(6017),c=r(356);new Set;var u=function(e){return function(t){for(var r,i=t.values(),n=!1;!n&&!(r=i.next()).done;)n=e(r.value);return n}};function l(e){return(0,o.ff)(u((0,o.ff)(e)))}function d(e){var t=p(e);return function(r,i){if(void 0===i){var n=d(e);return function(e){return n(e,r)}}return l((function(e){return t(e,i)}))(r)}}function p(e){return function(t,r){if(void 0===r){var i=p(e);return function(e){return i(t,e)}}for(var n,s=r.values(),a=!1;!a&&!(n=s.next()).done;)a=e.equals(t,n.value);return a}}var m=function(e){var t=d(e);return(0,i.f7)((function(e,r){return t(e,r)&&t(r,e)}))};new Set;var g=r(2751);const h=(0,c.hX)((0,o.ff)(c.xb)),f=e=>"object"==typeof e&&!Array.isArray(e)&&null!==e,_=e=>Object.entries(e);function v(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return t.reduce(((e,t)=>Object.assign(Object.assign({},e),t)),{})}function b(e){let t=0;for(let r=0;r<e.length;r++)t=(t<<5)-t+e.charCodeAt(r),t&=t;return t}(0,o.ff)(g.xb);function y(){let e,t;return{promise:new Promise(((r,i)=>{e=r,t=i})),reject:t,resolve:e}}function w(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i={waitTimeInMs:50,exponentialBackOff:!1,maxAttempts:20},{waitTimeInMs:a,exponentialBackOff:o,maxAttempts:c}=v(i,r);let u=0;const l=r=>new Promise((i=>Promise.resolve(t()).then((t=>t?Promise.resolve(e()).then((e=>i((0,s.G)(e)))):(0,n.zG)(u++,(e=>e<c?setTimeout((()=>i(l(r*(o?2:1)))),r):i(s.YP)))))));return l(a)}function E(e){const t=m({equals:(t,r)=>t[0]===r[0]&&e.equals(t[1],r[1])});return(0,i.Uz)((e=>new Set(Object.entries(e))))(t)}function k(e,t){const r=Object.create(null);for(const i of t)r[i]=e[i];return r}function S(e){if("string"==typeof e){const t=+e;if(!isNaN(t))return t}return e}let D=[];function P(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:navigator.userAgent;if(D.unshift(e),D.length>1)return;const r=["beforeunload","pagehide"],i=r.concat(["visibilitychange"]),n=e=>{if(!s&&e){s=!0;const e=D;D=[],e.forEach((e=>{try{e()}catch(e){}}))}};let s=!1;i.forEach((e=>{window.addEventListener(e,(()=>{const r=("visibilitychange"!==e||document.hidden)&&T(t);n(r)}))})),r.forEach((e=>{window.addEventListener(e,(()=>n(!0)))}))}function M(){return([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(e=>(e^(window.crypto||window.msCrypto).getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16)))}function q(e){return 36===e.length&&/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i.test(e)}function O(e,t){const r=Object.keys(e),i=r.length,n={};for(let a=0;a<i;a++){const i=r[a],o=t(i,e[i]);(0,s.pC)(o)&&(n[i]=o.value)}return n}function I(){const e={},t=arguments.length;for(let r=0;r<t;r++){const[t,i]=r<0||arguments.length<=r?void 0:arguments[r];e[t]=i}return e}function x(e,t){return O(e,((e,r)=>t(e)?(0,s.G)(r):s.YP))}function T(e){return/Mobi|Android/i.test(e)}function A(e){return/^((?!chrome|android).)*safari/i.test(e)}function C(e){}function R(e,t){return new Promise((r=>{var i;setTimeout((()=>{Promise.resolve(e()).then(r)}),null!==(i=null==t?void 0:t.timeout)&&void 0!==i?i:0)}))}function L(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let r=0;r<e.length;++r)if(e[r]!==t[r])return!1;return!0}function U(e){return(0,a.Zt)(((t,r)=>{const i=e.indexOf(t),n=e.indexOf(r);switch(!0){case-1===i&&-1===n:return 0;case-1!==i&&-1===n:return-1;case-1===i&&-1!==n:return 1;default:return i<=n?-1:1}}))}function j(e){return e.reduce(((e,t)=>(e[t]=!0,e)),{})}function B(e,t,r){return function(){try{return r(...arguments)}catch(r){e.reportError(r,t.get())}}}function G(e){return t=>null!=t&&e in t?t[e]:void 0}},6574:(e,t,r)=>{r.d(t,{l:()=>i});class i{constructor(e){var t;this.config=e,this.shouldUsePerformanceMark=!1,this.placeholderSpan={spanId:null,finish:()=>({})},this.shouldUsePerformanceMark=(null===(t=null===window||void 0===window?void 0:window.performance)||void 0===t?void 0:t.mark)&&this.config.tracingEnabled}startSpan(e){var t;if(this.shouldUsePerformanceMark){const r=this.generateId(),i=`permutive_${e}`,n=`${i}${r}_start`;return null===(t=null===window||void 0===window?void 0:window.performance)||void 0===t||t.mark(n),{spanId:n,finish:()=>{var e,t;null===(t=null===(e=null===window||void 0===window?void 0:window.performance)||void 0===e?void 0:e.measure)||void 0===t||t.call(e,i,n)}}}return this.placeholderSpan}generateId(){return"_"+Math.random().toString(36).substr(2,9)}}},8771:(e,t,r)=>{r.d(t,{p:()=>n});var i=r(6567);const n=(e,t,r,n)=>new Promise(((s,a)=>{var o;const c=(0,i.Y3)(e);if((0,i.pC)(c))return s(c.value);r.once(t,(()=>(0,i.g_)((()=>a(new Error(`Error after waiting for event ${t}`))),s)((0,i.Y3)(e))));const u=null!==(o=null==n?void 0:n.timeout)&&void 0!==o?o:1e4;setTimeout((()=>a(new Error(`Event ${t} was not received within the timeout period ${u}ms`))),u)}))},9379:(e,t,r)=>{r.d(t,{b:()=>i});class i{constructor(){this.events=[],this.listeners=[]}newEvent(e,t){this.events.push([e,t]),[...this.listeners].forEach((r=>{this.handle(e,t,r)}))}addListener(e){this.listeners.push(e);const t={replay:()=>(this.replay(e),t),remove:()=>(this.remove(e),t)};return t}handle(e,t,r){const i="string"==typeof r.name&&e.name===r.name,n=r.name.test&&r.name.test(e.name),s=i||n;if(s)try{r.callback(e,t)}catch(e){window.console&&window.console.error&&window.console.error("callback error: ",e)}s&&r.once&&this.remove(r)}replay(e){let t=-1!==this.listeners.indexOf(e);for(let r=0;r<this.events.length&&t;r++)this.handle(this.events[r][0],this.events[r][1],e),t=-1!==this.listeners.indexOf(e)}remove(e){const t=this.listeners.indexOf(e);-1!==t&&this.listeners.splice(t,1)}}},4730:(e,t,r)=>{r.d(t,{b:()=>n});var i=r(2122);class n{constructor(e,t){this.timeoutDurationInMilliseconds=e,this.maxTimeOutDurationInMilliseconds=t}schedule(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.timeoutDurationInMilliseconds,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.maxTimeOutDurationInMilliseconds;return this.debounce(e,t,r)}scheduleAccumulated(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.timeoutDurationInMilliseconds,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.maxTimeOutDurationInMilliseconds;return this.debounce(e,r,i,t)}scheduleForPageUnload(e){return(0,i.aq)(e)}debounce(e,t,r,n){let s,a,o=null==n?void 0:n.empty,c=[];return u=>{n&&(o=n.concat(o,u));const l=(0,i.b2)();c.push(l);return s&&window.clearTimeout(s),s=window.setTimeout((()=>{window.clearTimeout(a),a=null;const t=e(n?o:u);c.forEach((e=>e.resolve(t))),o=null==n?void 0:n.empty,c=[]}),t),a||(a=window.setTimeout((()=>{window.clearTimeout(s),a=null;const t=e(n?o:u);c.forEach((e=>e.resolve(t))),o=null==n?void 0:n.empty,c=[]}),r)),l.promise}}}},4996:(e,t,r)=>{r.d(t,{i:()=>i});class i{constructor(e){this.messages=e,this.queue=[],this.nextNotify=null,e.on("permutive:taskQueue:update",(()=>{this.execute()}))}add(e){this.queue.push(e),this.notify()}notify(){const e=()=>{this.messages.emit("permutive:taskQueue:update")},t=(new Date).getTime();null===this.nextNotify||this.nextNotify<t-50?(this.nextNotify=t,e()):this.nextNotify<=t&&(this.nextNotify=t+50,window.setTimeout(e,50))}execute(){if(0===this.queue.length)return;let e=!1,t=!1,r=0;for(let i=0;i<this.queue.length;i++){const n=this.queue[i];if(n.complete)r+=1;else if(n.started)t=!0,e=e||n.blocks();else{if(n.waits()&&t)break;e||(t=!0,e=e||n.blocks(),n.execute((()=>{this.notify()})))}}this.queue.splice(0,r)}size(){return this.queue.length}}},3030:(e,t,r)=>{r.d(t,{_Y:()=>a,bk:()=>s,zM:()=>n});var i=r(3735);const n=()=>{var e,t;const r=null===(t=null===(e=window.location.href.split("?")[1])||void 0===e?void 0:e.split("#")[0])||void 0===t?void 0:t.split("&");return void 0===r?{}:r.reduce(((e,t)=>{const[r,i]=t.split("=");return Object.assign(Object.assign({},e),{[r]:i})}),{})},s=e=>{if(!e)return"";return(0,i.zG)(e,(e=>{const t=e.length-1;return"/"===e[t]?e.slice(0,t):e}))};function a(e){const t=e.match(/\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b/),r=e.match(/[a-z0-9][a-z0-9-]+\.[a-z.]{2,24}$/i),i=e.match(/localhost/);if((null==r?void 0:r.length)>0){const t=e.split(".").reverse();return t.length>=3&&t[1].match(/^(com|edu|gov|net|mil|org|nom|co|ac|name|info|biz)$/i)?t[2]+"."+t[1]+"."+t[0]:t[1]+"."+t[0]}return(null==t?void 0:t.length)>0?t[0]:(null==i?void 0:i.length)>0?"localhost":""}},2361:(e,t,r)=>{r.d(t,{e:()=>d});var i=r(655),n=r(6567);const s=(e,t,r,i)=>t+(r-t)*i/(Math.pow(2,e)-1),a=(e,t)=>{const r=(e,t)=>{const r=e.toString(16);return("0".repeat(t)+r).slice(Math.min(-t,-r.length))};return`${r(e.getUint32(t),8)}-${r(e.getUint16(t+4),4)}-${r(e.getUint16(t+6),4)}-${r(e.getUint16(t+8),4)}-${r(e.getUint32(t+10),8)}${r(e.getUint16(t+14),4)}`},o=e=>{const t=[1,2],r=e.getInt8(0);if(1===r)return c(e);if(2===r)return u(e);{const i=(0,n.Y3)((()=>a(e,1))),s=(0,n.g_)((()=>"Couldn't decode model id"),(e=>`Model id was ${e}`))(i);throw new Error(`Decoding only supported for version(s): ${t}; Supplied version was ${r}; ${s}`)}},c=e=>l(e,1),u=e=>l(e,2),l=(e,t)=>{const r=a(e,1),i=((e,t)=>{switch(String.fromCharCode(e.getInt8(t))){case"1":return"1p";case"3":return"3p"}})(e,17),n=e.getInt8(18),s=e.getFloat32(19),o=e.getFloat32(23),[c,u]=((e,t,r,i,n,s)=>{const a={};let o=0;do{let r=null;1===s?(o=e.getUint16(t),r=e.getUint16(t+2),t+=4):(o=e.getUint32(t),r=e.getUint16(t+4),t+=6),a[0===o?"const":o]=r.toString(36)}while(0!==o);return[a,t]})(e,27,0,0,0,t);return[{version:t,id:r,data_preference:i,weights:c,precision:n,min:s,max:o},u]};class d{constructor(e,t,r,n,a){this.network=e,this.logger=t,this.api=r,this.metrics=n,this.permutiveData=a,this.MODELS_LAST_UPDATED_KEY="models_last_updated",this.MODELS_DATA_KEY="models_data",this.MODELS_SYNC_TIMEOUT_IN_SECONDS=86400;const o=a.getData(this.MODELS_LAST_UPDATED_KEY),c=n.startTimer("sdk_load_lookalike_models_task_duration_seconds",{}),u=()=>this.fetchModels().then((e=>(this.permutiveData.setData(this.MODELS_DATA_KEY,e),this.permutiveData.setData(this.MODELS_LAST_UPDATED_KEY,(new Date).getTime()),e))).catch((e=>(this.api.reportError("Failed decoding binary models.\nError: "+e),{}))),l=()=>(0,i.mG)(this,void 0,void 0,(function*(){return this.permutiveData.getData(this.MODELS_DATA_KEY)}));this.models=(()=>(isNaN(o)||(new Date).getTime()>o+1e3*this.MODELS_SYNC_TIMEOUT_IN_SECONDS?u():l()).then((e=>(e=>{const t=Object.keys(e);return t.length>0&&e[t[0]].hasOwnProperty("precision")})(e)?(e=>{const t={},r=Object.keys(e),i=e=>{const t={"1p":{}},{precision:r,min:i,max:n}=e,a=e["1p"],o=Object.keys(a);for(let e=0;e<o.length;e++){const c=o[e],u=parseInt(a[c],36);t["1p"][c]=s(r,i,n,u)}return t};for(let n=0;n<r.length;n++){const s=r[n],a=e[s];t[s]=i(a)}return t})(e):e)))().then((e=>(this.metrics.stopTimer("sdk_load_lookalike_models_task_duration_seconds",c),e)))}getModels(){return this.models}extractModelsFromJsonArray(e,t){const r={};for(let i=0;i<e.length;i++){const n=e[i],{id:s,weights:a}=n;if(void 0===s||void 0===a)continue;const o=t(n);Object.keys(a).forEach((e=>{o["1p"][e]=a[e]})),r[s]=o}return r}fetchModels(){const e=()=>this.api.modelsJson(this.metrics).then((e=>this.extractModelsFromJsonArray(e.models,(()=>({"1p":{}}))))).catch((e=>(this.api.reportError("Failed fetching json models.\nError: "+e),{})));return(()=>this.api.modelsBinary(this.metrics).then((e=>this.extractModelsFromJsonArray(function(e){const t=[];let r=0;for(;r<e.byteLength;){const[i,n]=o(new DataView(e,r));t.push(i),r+=n}return t}(e),(e=>{let{precision:t,max:r,min:i}=e;return{"1p":{},precision:t,min:i,max:r}})))).catch((t=>(this.logger.log("Failed fetching binary models, reverting to JSON.\nError: "+t),this.metrics.track({name:"sdk_binary_models_missing_count",value:1,labels:{}}),e()))))()}}},1828:(e,t,r)=>{r.d(t,{ap:()=>s,gz:()=>u});var i=r(3735),n=r(9384);function s(e,t){return function(r){return function(i){return e.ap(e.map(i,(function(e){return function(r){return t.ap(e,r)}})),r)}}}function a(e,t,r){return function(i){for(var n=Array(r.length+1),s=0;s<r.length;s++)n[s]=r[s];return n[r.length]=i,0===t?e.apply(null,n):a(e,t-1,n)}}var o={1:function(e){return[e]},2:function(e){return function(t){return[e,t]}},3:function(e){return function(t){return function(r){return[e,t,r]}}},4:function(e){return function(t){return function(r){return function(i){return[e,t,r,i]}}}},5:function(e){return function(t){return function(r){return function(i){return function(n){return[e,t,r,i,n]}}}}}};function c(e){return n.e$.call(o,e)||(o[e]=a(i.bc,e-1,[])),o[e]}function u(e){return function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];for(var i=t.length,n=c(i),s=e.map(t[0],n),a=1;a<i;a++)s=e.ap(s,t[a]);return s}}},5846:(e,t,r)=>{r.d(t,{oA:()=>C,t9:()=>S,hX:()=>R,DZ:()=>A,Ew:()=>w,xH:()=>x,jV:()=>P,UI:()=>O,uK:()=>L,u4:()=>j,vP:()=>B,DY:()=>k,G0:()=>D});var i=r(3735),n=(r(7341),r(9384)),s=r(4814),a=function(e,t,r){if(r||2===arguments.length)for(var i,n=0,s=t.length;n<s;n++)!i&&n in t||(i||(i=Array.prototype.slice.call(t,0,n)),i[n]=t[n]);return e.concat(i||Array.prototype.slice.call(t))},o=function(e){return e.length>0},c=function(e){return function(t){return a(a([],t,!0),[e],!1)}},u=c,l=function(e){var t=function(e){return function(t){if(1===t.length)return m(t);for(var r=[h(t)],i=function(t){r.every((function(r){return!e.equals(r,t)}))&&r.push(t)},n=0,s=f(t);n<s.length;n++)i(s[n]);return r}}(e);return function(e){return function(r){return t((0,i.zG)(r,p(e)))}}},d=n.r1;function p(e,t){return t?e.concat(t):function(t){return t.concat(e)}}var m=d,g=function(e){return[e]};s.xP,s.Lx,s.u4,s.OE,s.nq,s.iw,s.YM,s.ZN,s.Eh,n.F4;var h=s.YM,f=function(e){return e.slice(1)};s.Z$,s.VV,s.Fp,s.j0;s.ur;var _=r(3328),v=r(4870),b=(r(5605),o),y=u;_.P5,_.YM,_.Z$;_.cx;function w(e){return _.Ew(e)}_.f2;_.JO,_.qr;var E=function(e){return e.slice()},k=function(e){return function(t){return t.length<=1?E(t):t.slice().sort(e.compare)}};var S=_.t9;function D(e){var t=l(e);return function(r,i){if(void 0===i){var n=D(e);return function(e){return n(e,r)}}return b(r)&&b(i)?t(i)(r):b(r)?E(r):E(i)}}function P(e){var t=S(e);return function(r,i){if(void 0===i){var n=P(e);return function(e){return n(e,r)}}return r.filter((function(e){return t(e,i)}))}}var M=function(e,t,r){return(0,i.zG)(e,j(t,r))},q=(_.kp,_.Eq,g),O=function(e){return function(t){return t.map((function(t){return e(t)}))}},I=function(e){return function(t){return(0,i.zG)(t,function(e){return function(t){for(var r=[],i=0;i<t.length;i++)r.push.apply(r,e(i,t[i]));return r}}((function(t,r){return e(r)})))}},x=I(i.yR),T=function(e){return function(t){for(var r=[],i=0;i<t.length;i++){var s=e(i,t[i]);n.pC(s)&&r.push(s.value)}return r}},A=function(e){return T((function(t,r){return e(r)}))},C=A(i.yR),R=function(e){return function(t){return t.filter(e)}},L=function(e){return U((function(t,r){return e(r)}))},U=function(e){return function(t){for(var r=[],i=[],n=0;n<t.length;n++){var s=t[n];e(n,s)?i.push(s):r.push(s)}return(0,v.s4)(r,i)}},j=(_.Lx,_.xP,_.u4),B=(_.OE,_.nq,_.iw,function(e){return function(t){return M(t,e.of([]),(function(t,r){return e.ap(e.map(t,(function(e){return function(t){return(0,i.zG)(e,y(t))}})),r)}))}});_.ZN,_.Eh,_.pR,_.pJ,_.oR,_.yW,_.j0,n.F4},70:(e,t,r)=>{r.d(t,{G5:()=>g,dO:()=>d,Pd:()=>_,tS:()=>f,g_:()=>k,ij:()=>P,fS:()=>S,nM:()=>b,tO:()=>y,t$:()=>s,UI:()=>l,Vn:()=>v,EQ:()=>E,F2:()=>a,LF:()=>D,i$:()=>q,Y3:()=>M});var i=r(3735),n=(r(7341),r(9384)),s=n.t$,a=n.F2,o=function(e,t){return(0,i.zG)(e,l(t))},c=function(e,t){return(0,i.zG)(e,m(t))},u="Either",l=function(e){return function(t){return b(t)?t:a(e(t.right))}},d={URI:u,map:o},p=a,m=function(e){return function(t){return b(t)?t:b(e)?e:a(t.right(e.right))}},g={URI:u,map:o,ap:c},h=function(e){return function(t){return b(t)?t:e(t.right)}},f=h,_=function(e,t){return function(r){return b(r)?s(e(r.left)):a(t(r.right))}},v=function(e){return function(t){return b(t)?s(e(t.left)):t}},b=(i.yR,n.nM),y=n.tO,w=function(e,t){return function(r){return b(r)?e(r.left):t(r.right)}},E=w,k=E,S=function(e){return function(t){return b(t)?e(t.left):t.right}},D=function(e){return b(e)?a(e.left):s(e.right)},P=function(e){return function(t){return null==t?s(e):a(t)}},M=function(e,t){try{return a(e())}catch(e){return s(t(e))}},q=w(i.yR,i.yR);n.F4,n.Xl},4268:(e,t,r)=>{r.d(t,{Uz:()=>n,f7:()=>i,w4:()=>s});r(3735);var i=function(e){return{equals:function(t,r){return t===r||e(t,r)}}},n=function(e){return function(t){return i((function(r,i){return t.equals(e(r),e(i))}))}},s={equals:function(e,t){return e===t}};s.equals},7341:(e,t,r)=>{function i(e,t){return function(r){return function(i){return e.map(i,(function(e){return t.map(e,r)}))}}}function n(e){return function(t,r){return function(i){return e.map(i,(function(e){var i;return Object.assign({},e,((i={})[t]=r(e),i))}))}}}r.d(t,{Hr:()=>n,UI:()=>i})},6567:(e,t,r)=>{r.d(t,{DT:()=>o,EQ:()=>f,G:()=>a,UI:()=>u,Uo:()=>p,Wi:()=>g,Y3:()=>y,YP:()=>s,fS:()=>v,g_:()=>_,ij:()=>b,pC:()=>m,tS:()=>d});var i=r(3735),n=(r(7341),r(9384)),s=(r(6017),r(4870),r(5605),n.YP),a=n.G;function o(e){return function(t){return e(t)?a(t):s}}var c=function(e){return"Left"===e._tag?s:a(e.right)},u=function(e){return function(t){return g(t)?s:a(e(t.value))}},l=a,d=function(e){return function(t){return g(t)?s:e(t.value)}},p=(i.yR,c),m=n.pC,g=function(e){return"None"===e._tag},h=function(e,t){return function(r){return g(r)?e():t(r.value)}},f=h,_=f,v=function(e){return function(t){return g(t)?e():t.value}},b=function(e){return null==e?s:a(e)},y=function(e){try{return a(e())}catch(e){return s}};n.F4,n.Xl},7209:(e,t,r)=>{r.d(t,{Fp:()=>c,VV:()=>o,Zt:()=>a,uZ:()=>u});var i=r(4268),n=r(3735),s=function(e){return function(t,r){return t===r||0===e(t,r)}},a=function(e){return{equals:s(e),compare:function(t,r){return t===r?0:e(t,r)}}},o=(n.W8,function(e){return function(t,r){return t===r||e.compare(t,r)<1?t:r}}),c=function(e){return function(t,r){return t===r||e.compare(t,r)>-1?t:r}},u=function(e){var t=o(e),r=c(e);return function(e,i){return function(n){return r(t(n,i),e)}}};i.w4.equals},6017:(e,t,r)=>{r.d(t,{ff:()=>i});r(3735);var i=function(e){return function(t){return!e(t)}}},3328:(e,t,r)=>{r.d(t,{Eh:()=>C,Eq:()=>k,Ew:()=>_,JO:()=>b,Lx:()=>O,OE:()=>I,P5:()=>m,YM:()=>g,Z$:()=>h,ZN:()=>A,cx:()=>f,f2:()=>v,iw:()=>T,j0:()=>B,kp:()=>E,nq:()=>x,oR:()=>U,pJ:()=>L,pR:()=>R,qr:()=>y,t9:()=>w,u4:()=>q,xP:()=>M,yW:()=>j});var i=r(4268),n=r(3735),s=(r(7341),r(9384)),a=r(4011),o=r(7209),c=r(4814),u=(r(4870),r(5605),function(e,t,r){if(r||2===arguments.length)for(var i,n=0,s=t.length;n<s;n++)!i&&n in t||(i||(i=Array.prototype.slice.call(t,0,n)),i[n]=t[n]);return e.concat(i||Array.prototype.slice.call(t))}),l=c.Od;c.Ce,c.ws,c.R3,c.Im;var d=function(e,t){return function(r){return l(r)?t(r):e()}},p=c.dC;function m(e,t){return void 0===t?function(t){return m(e,t)}:p(e,t)?s.YP:s.G(t[e])}var g=function(e){return l(e)?s.G(c.YM(e)):s.YP},h=function(e){return l(e)?s.G(c.Z$(e)):s.YP};var f=function(e){return function(t){for(var r=0;r<t.length;r++)if(e(t[r]))return s.G(r);return s.YP}};function _(e){return function(t){for(var r=0;r<t.length;r++)if(e(t[r]))return s.G(t[r]);return s.YP}}var v=function(e){return function(t){for(var r=0;r<t.length;r++){var i=e(t[r]);if(s.pC(i))return i}return s.YP}};var b=function(e){return function(t){for(var r=t.length-1;r>=0;r--){var i=e(t[r]);if(s.pC(i))return i}return s.YP}},y=function(e){return function(t){for(var r=t.length-1;r>=0;r--)if(e(t[r]))return s.G(r);return s.YP}};function w(e){return function(t,r){if(void 0===r){var i=w(e);return function(e){return i(t,e)}}for(var n,s=0;s<r.length;s++)if(n=r[s],e.equals(n,t))return!0;return!1}}var E=function(e,t){return(0,n.zG)(e,L(t))},k=function(e,t){return(0,n.zG)(e,U(t))},S=c.of,D=function(e){return function(t){for(var r=[],i=0;i<t.length;i++){var n=e(i,t[i]);s.pC(n)&&r.push(n.value)}return r}},P=function(e){return D((function(t,r){return e(r)}))},M=(n.yR,function(e){return function(t){return function(r){return r.reduce((function(r,i,n){return e.concat(r,t(n,i))}),e.empty)}}}),q=function(e,t){return I(e,(function(e,r,i){return t(r,i)}))},O=function(e){var t=M(e);return function(e){return t((function(t,r){return e(r)}))}},I=function(e,t){return function(r){for(var i=r.length,n=e,s=0;s<i;s++)n=t(s,n,r[s]);return n}},x=function(e,t){return T(e,(function(e,r,i){return t(r,i)}))},T=function(e,t){return function(r){return r.reduceRight((function(e,r,i){return t(i,r,e)}),e)}},A=function(e){return{show:function(t){return"[".concat(t.map(e.show).join(", "),"]")}}},C=function(e){return(0,i.f7)((function(t,r){return t.length===r.length&&t.every((function(t,i){return e.equals(t,r[i])}))}))},R=function(e){return(0,o.Zt)((function(t,r){for(var i=t.length,n=r.length,s=Math.min(i,n),o=0;o<s;o++){var c=e.compare(t[o],r[o]);if(0!==c)return c}return a.Df.compare(i,n)}))},L=function(e){return function(t){for(var r=u([],e(t),!0),i=[];r.length>0;){var n=r.shift();s.nM(n)?r.unshift.apply(r,e(n.left)):i.push(n.right)}return i}},U=function(e){return function(t){var r=e(t),i=[],n=[];function a(t){s.nM(t)?e(t.left).forEach((function(e){return i.push(e)})):n.push(t.right)}for(var o=0,c=r;o<c.length;o++){a(c[o])}for(;i.length>0;)a(i.shift());return n}};c.oo,c.cS;function j(e){return function(t){return t.every(e)}}var B=function(e){var t=c.j0(e);return function(r){return d((function(){return e.empty}),t(r))}};s.F4,c.w6,c.QI,c.Ss},4814:(e,t,r)=>{r.d(t,{R3:()=>_,Im:()=>f,ur:()=>j,QI:()=>G,cS:()=>d,Lx:()=>D,xP:()=>q,Eh:()=>T,ZN:()=>x,YM:()=>A,j0:()=>B,Od:()=>p,dC:()=>m,Z$:()=>R,Fp:()=>U,VV:()=>L,of:()=>k,Ce:()=>h,ws:()=>g,w6:()=>y,u4:()=>S,nq:()=>P,iw:()=>O,OE:()=>M,Ss:()=>N,oo:()=>v});var i,n=r(4268),s=r(3735),a=(r(7341),r(9384)),o=r(7209),c=function(e){return{concat:o.VV(e)}},u=function(e){return{concat:o.Fp(e)}};i=void 0;var l=function(e,t,r){if(r||2===arguments.length)for(var i,n=0,s=t.length;n<s;n++)!i&&n in t||(i||(i=Array.prototype.slice.call(t,0,n)),i[n]=t[n]);return e.concat(i||Array.prototype.slice.call(t))},d=a.Xl,p=a.Od,m=function(e,t){return e<0||e>=t.length},g=function(e){return function(t){return l([e],t,!0)}},h=g,f=function(e){return function(t){return l(l([],t,!0),[e],!1)}},_=f,v=function(e,t,r){if(p(r)){var i=a.r1(r);return i.splice(e,0,t),i}return[t]},b=function(e){return function(t){for(var r=Math.max(0,Math.floor(t)),i=[e(0)],n=1;n<r;n++)i.push(e(n));return i}},y=function(e,t){return e<=t?b((function(t){return e+t}))(t-e+1):[e]};function w(e,t){return t?e.concat(t):function(t){return t.concat(e)}}var E=function(e){return function(t){for(var r=[e,t[0]],i=1;i<t.length;i++)r.push(e,t[i]);return r}},k=a.ri,S=function(e,t){return M(e,(function(e,r,i){return t(r,i)}))},D=function(e){return function(t){return function(r){return r.slice(1).reduce((function(r,i){return e.concat(r,t(i))}),t(r[0]))}}},P=function(e,t){return O(e,(function(e,r,i){return t(r,i)}))},M=function(e,t){return function(r){return r.reduce((function(e,r,i){return t(i,e,r)}),e)}},q=function(e){return function(t){return function(r){return r.slice(1).reduce((function(r,i,n){return e.concat(r,t(n+1,i))}),t(0,r[0]))}}},O=function(e,t){return function(r){return r.reduceRight((function(e,r,i){return t(i,r,e)}),e)}},I=a.YM,x=function(e){return{show:function(t){return"[".concat(t.map(e.show).join(", "),"]")}}},T=function(e){return(0,n.f7)((function(t,r){return t.length===r.length&&t.every((function(t,i){return e.equals(t,r[i])}))}))},A=(a.F4,I),C=a.Gb,R=function(e){return e[e.length-1]},L=function(e){var t=c(e);return function(e){return e.reduce(t.concat)}},U=function(e){var t=u(e);return function(e){return e.reduce(t.concat)}},j=function(e){return function(t){return t.reduce(e.concat)}},B=function(e){var t=j(e);return function(e){return(0,s.ls)(function(e){return function(t){var r=C(t);return p(r)?(0,s.zG)(r,E(e),h(A(t))):t}}(e),t)}};function G(e,t){return void 0===t?h(e):(0,s.zG)(t,h(e))}var N=function(e,t){return(0,s.zG)(e,w([t]))}},356:(e,t,r)=>{r.d(t,{hX:()=>Q,jV:()=>B,xb:()=>C,XP:()=>L,dx:()=>U});r(4268);var i=r(3735),n=r(9384),s=(r(4870),r(2751)),a=(r(5605),function(e){for(var t in e)if(n.e$.call(e,t))return!1;return!0}),o=function(e){return function(t){return Object.keys(t).sort(e.compare)}};s.Df;var c=function(e,t){return function(r){if(n.e$.call(r,e)&&r[e]===t)return r;var i=Object.assign({},r);return i[e]=t,i}},u=function(e,t){return n.e$.call(t,e)};var l={};function d(e){return function(t){var r={};for(var i in t)n.e$.call(t,i)&&(r[i]=e(i,t[i]));return r}}function p(e){return d((function(t,r){return e(r)}))}function m(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(2===e.length)return m(s.Df).apply(void 0,e);var r=o(e[0]);return function(e,t){return function(i){for(var n=e,s=r(i),a=s.length,o=0;o<a;o++){var c=s[o];n=t(c,n,i[c])}return n}}}function g(e){if("compare"in e){var t=o(e);return function(e){return function(r){return function(i){for(var n=e.empty,s=t(i),a=s.length,o=0;o<a;o++){var c=s[o];n=e.concat(n,r(c,i[c]))}return n}}}}return g(s.Df)(e)}function h(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(2===e.length)return h(s.Df).apply(void 0,e);var r=o(e[0]);return function(e,t){return function(i){for(var n=e,s=r(i),a=s.length-1;a>=0;a--){var o=s[a];n=t(o,i[o],n)}return n}}}function f(e){return M(s.Df)(e)}function _(e){return function(t){var r={},i=!1;for(var s in t)if(n.e$.call(t,s)){var a=t[s];e(s,a)?r[s]=a:i=!0}return i?r:t}}var v=function(e){return function(t){return function(r){if(a(r)||a(t))return l;var i={};for(var n in r)u(n,t)&&(i[n]=e.concat(r[n],t[n]));return i}}},b=function(e,t){return(0,i.zG)(e,p(t))},y=function(e){var t=I(e);return function(e,r,n){return(0,i.zG)(e,t(r,n))}},w=function(e){return function(t){var r=x(e)(t);return function(e,t){return(0,i.zG)(e,r(t))}}},E=function(e){var t=T(e);return function(e,r,n){return(0,i.zG)(e,t(r,n))}},k=function(e){var t=m(e);return function(e,r,n){return(0,i.zG)(e,t(r,n))}},S=function(e){var t=g(e);return function(e){var r=t(e);return function(e,t){return(0,i.zG)(e,r(t))}}},D=function(e){var t=h(e);return function(e,r,n){return(0,i.zG)(e,t(r,n))}},P=function(e){var t=q(e);return function(e){var r=t(e);return function(e,t){return r(e,(0,i.ls)(i.SK,t))}}},M=function(e){var t=P(e);return function(e){var r=t(e);return function(e){return r(e,i.yR)}}},q=function(e){return function(t){var r=o(e);return function(e,i){var n=r(e);if(0===n.length)return t.of(l);for(var s=t.of({}),a=function(r){s=t.ap(t.map(s,(function(e){return function(t){var i;return Object.assign({},e,((i={})[r]=t,i))}})),i(r,e[r]))},o=0,c=n;o<c.length;o++){a(c[o])}return s}}},O=function(e){return _((function(t,r){return e(r)}))};function I(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(1===e.length){var r=m(e[0]);return function(e,t){return r(e,(function(e,r,i){return t(r,i)}))}}return I(s.Df).apply(void 0,e)}function x(e){if("compare"in e){var t=g(e);return function(e){var r=t(e);return function(e){return r((function(t,r){return e(r)}))}}}return x(s.Df)(e)}function T(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(1===e.length){var r=h(e[0]);return function(e,t){return r(e,(function(e,r,i){return t(r,i)}))}}return T(s.Df).apply(void 0,e)}var A="ReadonlyRecord";s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df;s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df;var C=a,R=function(e){return function(t){return Object.keys(t).sort(e.compare)}},L=R(s.Df);var U=c;function j(e){return f(e)}var B=function(e){return function(t){return function(r){return C(r)||C(t)?{}:v(e)(t)(r)}}},G=b,N=y,W=w,F=E,z=k,K=S,$=D,V=P,H=function(e){return function(t){var r=R(e);return function(e,i){var n=r(e);if(0===n.length)return t.of({});for(var s=t.of({}),a=function(r){s=t.ap(t.map(s,(function(e){return function(t){return e[r]=t,e}})),i(r,e[r]))},o=0,c=n;o<c.length;o++){a(c[o])}return s}}},Q=O;var Y="Record";s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df,s.Df},4870:(e,t,r)=>{r.d(t,{s4:()=>i});r(3735);var i=function(e,t){return{left:e,right:t}}},5151:(e,t,r)=>{r.d(t,{Hi:()=>f,PM:()=>h,RD:()=>E,UA:()=>_,UI:()=>u,dO:()=>g,oE:()=>S,of:()=>d,pE:()=>k,tD:()=>s,tS:()=>p});var i=r(3735),n=(r(7341),r(9384)),s=function(e){return function(){return Promise.resolve().then(e)}};var a=function(e,t){return(0,i.zG)(e,u(t))},o=function(e,t){return(0,i.zG)(e,l(t))},c=function(e,t){return(0,i.zG)(e,p(t))},u=function(e){return function(t){return function(){return Promise.resolve().then(t).then(e)}}},l=function(e){return function(t){return function(){return Promise.all([Promise.resolve().then(t),Promise.resolve().then(e)]).then((function(e){return(0,e[0])(e[1])}))}}},d=function(e){return function(){return Promise.resolve(e)}},p=function(e){return function(t){return function(){return Promise.resolve().then(t).then((function(t){return e(t)()}))}}},m="Task";var g={URI:m,map:a},h={URI:m,of:d},f={URI:m,map:a,ap:o},_={URI:m,map:a,of:d,ap:o,chain:c},v=i.yR,b=(n.F4,d(n.Xl)),y=function(e){var t=function(e){return function(t){return function(){return Promise.all(t.map((function(t,r){return Promise.resolve().then((function(){return e(r,t)()}))})))}}}(e);return function(e){return n.Od(e)?t(e):b}},w=function(e){var t=function(e){return function(t){return function(){return n.Gb(t).reduce((function(t,r,i){return t.then((function(t){return Promise.resolve().then(e(i+1,r)).then((function(e){return t.push(e),t}))}))}),Promise.resolve().then(e(0,n.YM(t))).then(n.ri))}}}(e);return function(e){return n.Od(e)?t(e):b}},E=function(e){return y((function(t,r){return e(r)}))}(i.yR),k=function(e){return w((function(t,r){return e(r)}))},S={URI:m,map:a,of:d,ap:o,chain:c,fromIO:s,fromTask:v}},9705:(e,t,r)=>{function i(e){return function(t,r){return function(i){return e.chain(i,(function(i){return e.map(r(i),(function(e){var r;return Object.assign({},i,((r={})[t]=e,r))}))}))}}}r.d(t,{Do:()=>J,ak:()=>X,tS:()=>V,g_:()=>G,Uo:()=>j,fF:()=>U,t$:()=>A,UI:()=>K,F2:()=>C,Y3:()=>N});var n=r(1828),s=r(70),a=r(3735),o=r(7341);function c(e){return(0,a.ls)(s.F2,e.of)}function u(e){return(0,a.ls)(s.t$,e.of)}function l(e){return function(t){return e.map(t,s.F2)}}function d(e){return function(t){return e.map(t,s.t$)}}function p(e){return function(t){return(0,a.ls)(s.ij(t),e.of)}}function m(e){var t=p(e);return function(e){var r=t(e);return function(e){return(0,a.ls)(e,r)}}}function g(e){var t=_(e),r=m(e);return function(e){var i=r(e);return function(e){return t(i(e))}}}function h(e){return(0,o.UI)(e,s.dO)}function f(e){return(0,n.ap)(e,s.G5)}function _(e){return function(t){return function(r){return e.chain(r,(function(r){return s.nM(r)?e.of(r):t(r.right)}))}}}function v(e){return function(t){return function(r){return e.chain(r,(function(r){return s.nM(r)?t():e.of(r)}))}}}function b(e){return function(t,r){return function(i){return e.map(i,s.Pd(t,r))}}}function y(e){return function(t){return function(r){return e.map(r,s.Vn(t))}}}function w(e){return function(t,r){return function(i){return e.map(i,s.EQ(t,r))}}}function E(e){return function(t,r){return function(i){return e.chain(i,s.EQ(t,r))}}}function k(e){return function(t){return function(r){return e.chain(r,s.EQ(t,e.of))}}}function S(e){return function(t){return function(r){return e.chain(r,(function(r){return s.nM(r)?t(r.left):e.of(r)}))}}}function D(e){var t=S(e);return function(r){return t((function(t){return e.map(r(t),(function(e){return s.nM(e)?e:s.t$(t)}))}))}}function P(e){return function(t){return function(r){return e.chain(r,s.EQ((function(r){return e.map(t(r),s.t$)}),(function(t){return e.of(s.F2(t))})))}}}function M(e){return function(t){return e.map(t,s.LF)}}function q(e){return function(t){return e.map(t,s.i$)}}var O=r(9384),I=r(5151),x=function(e,t,r,i){return new(r||(r=Promise))((function(n,s){function a(e){try{c(i.next(e))}catch(e){s(e)}}function o(e){try{c(i.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,o)}c((i=i.apply(e,t||[])).next())}))},T=function(e,t){var r,i,n,s,a={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,i&&(n=2&s[0]?i.return:s[0]?i.throw||((n=i.return)&&n.call(i),0):i.next)&&!(n=n.call(i,s[1])).done)return n;switch(i=0,n&&(s=[2&s[0],n.value]),s[0]){case 0:case 1:n=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,i=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!(n=a.trys,(n=n.length>0&&n[n.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!n||s[1]>n[0]&&s[1]<n[3])){a.label=s[1];break}if(6===s[0]&&a.label<n[1]){a.label=n[1],n=s;break}if(n&&a.label<n[2]){a.label=n[2],a.ops.push(s);break}n[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(e,a)}catch(e){s=[6,e],i=0}finally{r=n=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}},A=u(I.PM),C=c(I.PM),R=l(I.dO),L=d(I.dO),U=(I.tD,I.tD,R),j=I.of,B=(I.tD,I.dO,E(I.UA)),G=B,N=(I.UA,function(e,t){return function(){return x(void 0,void 0,void 0,(function(){var r;return T(this,(function(i){switch(i.label){case 0:return i.trys.push([0,2,,3]),[4,e().then(O.F2)];case 1:return[2,i.sent()];case 2:return r=i.sent(),[2,O.t$(t(r))];case 3:return[2]}}))}))}}),W=(I.dO,I.PM,I.PM,I.UA,I.UA,I.UA,I.UA,I.dO,function(e,t){return(0,a.zG)(e,K(t))}),F=function(e,t){return(0,a.zG)(e,$(t))},z=function(e,t){return(0,a.zG)(e,V(t))},K=h(I.dO),$=(I.dO,I.dO,f(I.Hi)),V=_(I.UA),H=(I.UA,C),Q="TaskEither";var Y={URI:Q,map:W,ap:F,chain:z};var J=H(O.F4),X=i(Y);O.Xl},5605:(e,t,r)=>{function i(e,t){return function(r){var i=e.traverse(r);return function(e,n){return r.map(i(e,n),t.separate)}}}function n(e,t){return function(r){var i=e.traverse(r);return function(e,n){return r.map(i(e,n),t.compact)}}}r.d(t,{BL:()=>n,Fj:()=>i})},3735:(e,t,r)=>{r.d(t,{MZ:()=>n,Q1:()=>c,SK:()=>p,W8:()=>a,a9:()=>s,bc:()=>l,gn:()=>o,ls:()=>u,yR:()=>i,zG:()=>d});function i(e){return e}var n=i;function s(e){return function(){return e}}var a=s(!0),o=s(null),c=s(void 0);function u(e,t,r,i,n,s,a,o,c){switch(arguments.length){case 1:return e;case 2:return function(){return t(e.apply(this,arguments))};case 3:return function(){return r(t(e.apply(this,arguments)))};case 4:return function(){return i(r(t(e.apply(this,arguments))))};case 5:return function(){return n(i(r(t(e.apply(this,arguments)))))};case 6:return function(){return s(n(i(r(t(e.apply(this,arguments))))))};case 7:return function(){return a(s(n(i(r(t(e.apply(this,arguments)))))))};case 8:return function(){return o(a(s(n(i(r(t(e.apply(this,arguments))))))))};case 9:return function(){return c(o(a(s(n(i(r(t(e.apply(this,arguments)))))))))}}}function l(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return e}function d(e,t,r,i,n,s,a,o,c){switch(arguments.length){case 1:return e;case 2:return t(e);case 3:return r(t(e));case 4:return i(r(t(e)));case 5:return n(i(r(t(e))));case 6:return s(n(i(r(t(e)))));case 7:return a(s(n(i(r(t(e))))));case 8:return o(a(s(n(i(r(t(e)))))));case 9:return c(o(a(s(n(i(r(t(e))))))));default:for(var u=arguments[0],l=1;l<arguments.length;l++)u=arguments[l](u);return u}}var p=function(e,t){return t}},9384:(e,t,r)=>{r.d(t,{F2:()=>l,F4:()=>f,G:()=>a,Gb:()=>g,Od:()=>p,Xl:()=>h,YM:()=>m,YP:()=>s,e$:()=>_,nM:()=>o,pC:()=>n,r1:()=>v,ri:()=>d,t$:()=>u,tO:()=>c});var i=function(e,t,r){if(r||2===arguments.length)for(var i,n=0,s=t.length;n<s;n++)!i&&n in t||(i||(i=Array.prototype.slice.call(t,0,n)),i[n]=t[n]);return e.concat(i||Array.prototype.slice.call(t))},n=function(e){return"Some"===e._tag},s={_tag:"None"},a=function(e){return{_tag:"Some",value:e}},o=function(e){return"Left"===e._tag},c=function(e){return"Right"===e._tag},u=function(e){return{_tag:"Left",left:e}},l=function(e){return{_tag:"Right",right:e}},d=function(e){return[e]},p=function(e){return e.length>0},m=function(e){return e[0]},g=function(e){return e.slice(1)},h=[],f={},_=Object.prototype.hasOwnProperty,v=function(e){return i([e[0]],e.slice(1),!0)}},4011:(e,t,r)=>{r.d(t,{Df:()=>n});var i={equals:function(e,t){return e===t}},n={equals:i.equals,compare:function(e,t){return e<t?-1:e>t?1:0}};n.compare},2751:(e,t,r)=>{r.d(t,{Df:()=>n,Eq:()=>i,pn:()=>a,xb:()=>s});var i={equals:function(e,t){return e===t}},n={equals:i.equals,compare:function(e,t){return e<t?-1:e>t?1:0}},s=function(e){return 0===e.length},a=function(e,t){return function(r){return r.endsWith(e,t)}}},655:(e,t,r)=>{r.d(t,{_T:()=>i,mG:()=>n});function i(e,t){var r={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(r[i]=e[i]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(i=Object.getOwnPropertySymbols(e);n<i.length;n++)t.indexOf(i[n])<0&&Object.prototype.propertyIsEnumerable.call(e,i[n])&&(r[i[n]]=e[i[n]])}return r}function n(e,t,r,i){return new(r||(r=Promise))((function(n,s){function a(e){try{c(i.next(e))}catch(e){s(e)}}function o(e){try{c(i.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,o)}c((i=i.apply(e,t||[])).next())}))}Object.create;Object.create},1045:(e,t,r)=>{r.d(t,{Z:()=>s});var i=r(477),n=r.n(i);function s(){return n()('/*! permutive-javascript-sdk v19.55.0 (web) (built 2023-01-25T13:06:47.830Z) */(()=>{"use strict";function e(e){return e instanceof Error?e:new Error("string"==typeof e?e:JSON.stringify(e))}const r=()=>({kind:"null",value:null}),t=e=>({kind:"string",value:e}),n=e=>({kind:"number",value:e}),i=e=>({kind:"array",value:e}),a=e=>({kind:"object",value:e}),o=e=>e,c=()=>({kind:"bottom"}),s=e=>({kind:"inner",a:e}),u=e=>({kind:"top",error:e}),l=e=>({kind:"unbounded",group:e}),p=(e,r)=>({kind:"windowed",key:r,group:e}),m=(e,r,t)=>({kind:"countLimit",n:t,limit:r,group:e}),f=(e,r,t)=>({kind:"uniqueLimit",n:t,limit:r,group:e}),d=e=>({kind:"numberGroup",group:e}),v=e=>({kind:"stringGroup",group:e}),g=e=>({kind:"tuple",tuple:e}),_=e=>({state:e}),h=(e,r)=>({commands:e,payload:r});function q(e){return e}function y(e,r,t,n,i,a,o,c,s){switch(arguments.length){case 1:return e;case 2:return r(e);case 3:return t(r(e));case 4:return n(t(r(e)));case 5:return i(n(t(r(e))));case 6:return a(i(n(t(r(e)))));case 7:return o(a(i(n(t(r(e))))));case 8:return c(o(a(i(n(t(r(e)))))));case 9:return s(c(o(a(i(n(t(r(e))))))));default:for(var u=arguments[0],l=1;l<arguments.length;l++)u=arguments[l](u);return u}}var b=function(e){return{equals:function(r,t){return r===t||e(r,t)}}},w=function(e){return b((function(r,t){for(var n in e)if(!e[n].equals(r[n],t[n]))return!1;return!0}))},S=function(e){return function(r,t){return r===t||0===e(r,t)}},x=function(e){return{equals:S(e),compare:function(r,t){return r===t?0:e(r,t)}}},A=function(e){return function(r){return x((function(t,n){return r.compare(e(t),e(n))}))}},k=function(e){return function(r,t){return-1===e.compare(r,t)}},E=function(e){return function(r,t){return 1===e.compare(r,t)}},T=function(e){return function(r,t){return r===t||e.compare(r,t)>-1?r:t}};var C={equals:function(e,r){return e===r}},I={equals:C.equals,compare:function(e,r){return e<r?-1:e>r?1:0}};const M=(e,r)=>{switch(e.kind){case"bottom":return{kind:"bottom"};case"inner":return s(r(e.a));case"top":return u(e.error)}},P=e=>x(((r,t)=>{if("bottom"===r.kind&&"bottom"===t.kind)return 0;if("bottom"===r.kind)return-1;if("bottom"===t.kind)return 1;if("top"===r.kind&&"top"===t.kind)return I.compare(r.error,t.error);if("top"===r.kind)return 1;if("top"===t.kind)return-1;if("inner"===r.kind&&"inner"===t.kind)return e.compare(r.a,t.a);throw new Error("Non exhaustive match in extendedAlgebraOrd")}));var D=function(e,r){for(var t=0,n=r.length,i=e.length;t<n;t++,i++)e[i]=r[t];return e},B=function(e){return"Some"===e._tag},L={_tag:"None"},F=function(e){return{_tag:"Some",value:e}},O=function(e){return"Left"===e._tag},H=(Object.prototype.hasOwnProperty,function(e){return D([e[0]],e.slice(1))});var R=L,V=F;function N(e){return function(r){return e(r)?V(r):R}}var j=function(e){return"Left"===e._tag?R:V(e.right)},z=function(e){return{equals:function(r,t){return r===t||(J(r)?J(t):!J(t)&&e.equals(r.value,t.value))}}},G=function(e){return{equals:z(e).equals,compare:function(r,t){return r===t?0:U(r)?U(t)?e.compare(r.value,t.value):1:-1}}},Q=function(e){return function(r){return J(r)?R:V(e(r.value))}},W=j,U=B,J=function(e){return"None"===e._tag},Y=function(e){return function(r){return J(r)?e():r.value}};var $;$=void 0;var K=function(e){return e[0]},X=K;var Z=function(e,r){for(var t=0,n=r.length,i=e.length;t<n;t++,i++)e[i]=r[t];return e},ee=function(e){return e.length>0},re=function(e,r){return e<0||e>=r.length},te=function(e){return function(r){return Z([e],r)}},ne=te,ie=function(e){return function(r){return Z(Z([],r),[e])}},ae=ie,oe=H,ce=function(e){return ee(e)?F(e):L},se=function(e){return function(r){for(var t=Math.max(0,Math.floor(r)),n=[e(0)],i=1;i<t;i++)n.push(e(i));return n}};var ue=oe;var le=function(e){return function(r){var t=Math.max(1,e);return t>=r.length?[ue(r),[]]:[y(r.slice(1,t),ne(me(r))),r.slice(t)]}},pe=function(e){return b((function(r,t){return r.length===t.length&&r.every((function(r,n){return e.equals(r,t[n])}))}))},me=X;var fe={equals:function(e,r){return e===r}},de={equals:fe.equals,compare:function(e,r){return e<r?-1:e>r?1:0}};var ve=function(e,r){return function(t){for(var n=t.length,i=e,a=0;a<n;a++)i=r(a,i,t[a]);return i}};var ge=function(e){return 0===e.length},_e=ee,he=ne,qe=ae,ye=function(e,r){return e<=0?[]:se(r)(e)};var be=re,we=function(e){return function(r){return be(e,r)?Ae(r):r.slice(0,e)}};var Se=function(e,r){for(var t=e.length,n=0;n<t&&r(e[n]);n++);return n};var xe=function(e){return function(r){return e<=0||ge(r)?Ae(r):e>=r.length?[]:r.slice(e,r.length)}};var Ae=function(e){return e.slice()},ke=function(e){return ge(e)?[]:e.slice().reverse()},Ee=function(e){return function(r){return r.length<=1?Ae(r):r.slice().sort(e.compare)}},Te=function(e,r,t){for(var n=[],i=Math.min(e.length,r.length),a=0;a<i;a++)n[a]=t(e[a],r[a]);return n};var Ce=function(e){return function(r){return e>=1&&_e(r)?le(e)(r):ge(r)?[Ae(r),[]]:[[],Ae(r)]}};var Ie=function(e){return function(r){return y(r,function(e){return function(r){for(var t=[],n=0;n<r.length;n++)t.push.apply(t,e(n,r[n]));return t}}((function(r,t){return e(t)})))}},Me=function(e){return function(r){for(var t=[],n=0;n<r.length;n++){var i=e(n,r[n]);B(i)&&t.push(i.value)}return t}},Pe=function(e){return Me((function(r,t){return e(t)}))},De=Pe(q),Be=ve,Le=function(e){var r=Fe(e);return function(e){return r((function(r,t){return e(t)}))}},Fe=function(e){return function(r){return Be(e.of([]),(function(t,n,i){return e.ap(e.map(n,(function(e){return function(r){return y(e,qe(r))}})),r(t,i))}))}},Oe=function(e){return x((function(r,t){for(var n=r.length,i=t.length,a=Math.min(n,i),o=0;o<a;o++){var c=e.compare(r[o],t[o]);if(0!==c)return c}return de.compare(n,i)}))},He=function(e){return{_tag:"Left",left:e}},Re=function(e){return{_tag:"Right",right:e}},Ve=function(e,r){return y(e,ze(r))},Ne=function(e,r){return y(e,Qe(r))},je="Either",ze=function(e){return function(r){return Ue(r)?r:Re(e(r.right))}},Ge=Re,Qe=function(e){return function(r){return Ue(r)?r:Ue(e)?e:Re(r.right(e.right))}},We={URI:je,map:Ve,ap:Ne,of:Ge},Ue=O;var Je=function(e){return-1===e?1:1===e?-1:0};function Ye(e,r){return De(e.map(r))}function $e(e,r,t,n){const i=(e,r)=>{if(0===e.length)return De(r.map((e=>V({1:e[1],2:t(R,V(e[2]))}))));if(0===r.length)return De(e.map((e=>V({1:e[1],2:t(V(e[2]),R)}))));if(e.length>0&&r.length>0&&k(n)(e[0][1],r[0][1])){const[n,...a]=e,o=n[1],c=n[2];return he({1:o,2:t(V(c),R)})(i(a,r))}if(e.length>0&&r.length>0&&E(n)(e[0][1],r[0][1])){const[n,...a]=r,o=n[1],c=n[2];return he({1:o,2:t(R,V(c))})(i(e,a))}if(e.length>0&&r.length>0){const[n,...a]=e,[o,...c]=r,s=n[1],u=n[2],l=o[2];return he({1:s,2:t(V(u),V(l))})(i(a,c))}throw new Error("Non exhaustive match in mapOption2")},a=A((e=>e[1]))(n),o=(e=>{const r=Ye(e,(e=>U(e[2])?V({1:e[1],2:e[2].value}):R));return 0===r.length?R:V(r)})(i(Ee(a)([...e].map((e=>({1:e[0],2:e[1]})))),Ee(a)([...r].map((e=>({1:e[0],2:e[1]}))))));return Q((e=>new Map(e.map((e=>[e[1],e[2]])))))(o)}function Ke(e,r,t,n){const i=A((e=>e[0]))(n),a=Ee(i)([...r]).reduceRight(((e,r)=>{if(Ue(e)){const n=t(r[1],e.left);return U(n)?He(n.value):Re(r[0])}return e}),He(e));return W(a)}function Xe(e,r){return new Map([...e].map(r))}function Ze(e,r){return new Map([...e].filter(r))}function er(e){return JSON.stringify(rr(e))}function rr(e){switch(e.kind){case"null":return ir.encode(e);case"string":return ar.encode(e);case"number":return or.encode(e);case"array":return cr.encode(e);case"object":return sr.encode(e)}}function tr(e){return null===e?ir.decode(e):"number"==typeof e?or.decode(e):"string"==typeof e?ar.decode(e):Array.isArray(e)?cr.decode(e):sr.decode(e)}const nr=(e,r)=>He(`Failed to decode. Input was ${JSON.stringify(e)}. Codec type was ${r}`),ir={encode:e=>null,decode:e=>null===e?Re({kind:"null",value:null}):nr(e,"SimpleNull")},ar={encode:e=>e.value,decode:e=>"string"==typeof e?Re(t(e)):nr(e,"SimpleString")},or={encode:e=>e.value,decode:e=>"number"==typeof e?Re(n(e)):nr(e,"SimpleNumber")},cr={encode:e=>e.value.map(rr),decode:e=>{if(Array.isArray(e)){const r=Le(We)(tr)(e);return ze(i)(r)}return nr(e,"SimpleArray")}},sr={encode:e=>{const r=[...e.value.entries()];return Object.assign({},...Array.from(r,(([e,r])=>({[e]:rr(r)}))))},decode:e=>{if(e&&e.constructor===Object){const r=Le(We)((([e,r])=>y(tr(r),ze((r=>function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];return e}(e,r))))))(Object.entries(e));return ze((e=>a(new Map([...e]))))(r)}return nr(e,"SimpleObject")}};function ur(e){return y(e,pr,Q(er),Y((()=>"<encode error>")))}function lr(e){return Q(_r)(function(e){switch(e.state.kind){case"top":return V(t(e.state.error));case"bottom":return R;case"inner":return pr(e.state.a)}}(e))}function pr(e){return function(e){switch(e.kind){case"numberGroup":case"stringGroup":return mr(e.group);case"tuple":return e.tuple.length>0}}(e.payload)?V(i(function(e,r){const t=Q((e=>he(e)(r)))(e);return Y((()=>r))(t)}(Q((e=>t(function(e){const r=e=>{switch(e){case"add":return"p";case"mul":return"m";case"max":return"v";case"min":return"n"}},t=e=>1===e[2]?r(e[1]):r(e[1])+JSON.stringify(e[2]);return e.map(t).join("")}(e))))(e.commands),function(e){const r=e=>{switch(e.kind){case"bottom":return{kind:"null",value:null};case"top":return t(e.error);case"inner":return n(e.a)}},i=e=>Ye([fr,dr,e=>y(e,gr,a,V)],(r=>r(e))),o=e=>Ye([fr,vr,e=>y(e,gr,(e=>Xe(e,(([e,r])=>[JSON.stringify(e),r]))),a,V)],(r=>r(e)));switch(e.kind){case"tuple":return e.tuple.map(r);case"stringGroup":return i(e.group);case"numberGroup":return o(e.group)}}(e.payload)))):R}function mr(e){switch(e.kind){case"unbounded":return e.group.size>0;case"windowed":return e.group.size>0||U(e.key);case"countLimit":case"uniqueLimit":return e.group.size>0||U(e.limit)}}function fr(e){switch(e.kind){case"unbounded":return R;case"windowed":return V(t("w"));case"countLimit":return V(t(1===e.n?"x":`x${e.n}`));case"uniqueLimit":return V(t(1===e.n?"u":`u${e.n}`))}}function dr(e){switch(e.kind){case"unbounded":return R;case"windowed":return V(t(U(e.key)?e.key.value:""));case"countLimit":case"uniqueLimit":return V(t(U(e.limit)?e.limit.value:""))}}function vr(e){switch(e.kind){case"unbounded":return R;case"windowed":return U(e.key)?V(n(e.key.value)):V({kind:"null",value:null});case"countLimit":case"uniqueLimit":return U(e.limit)?V(n(e.limit.value)):V({kind:"null",value:null})}}function gr(e){switch(e.kind){case"unbounded":case"windowed":case"countLimit":case"uniqueLimit":return e.group}}function _r(e){switch(e.kind){case"array":return 0===e.value.length?{kind:"null",value:null}:1===e.value.length?_r(e.value[0]):i(e.value.map(_r));case"object":return y(Ze(e.value,(([e,r])=>"null"!==r.kind)),(e=>Xe(e,(e=>[e[0],_r(e[1])]))),a);default:return e}}function hr(e){const r=e=>{if(0===e.length)return{kind:"bottom"};const r=(e=>{if(4!==e.length)return R;const[r,t,n,i]=e;if("string"===r.kind&&"string"===t.kind&&"object"===i.kind){const e=N((e=>qr(e[1].value)&&yr(e[2].value)))({1:r,2:t});return Q((e=>({prim:e[1].value,grp:e[2].value,cutoff:n,m:i.value})))(e)}return R})(e);if(U(r)){const{prim:e,grp:t,cutoff:n,m:i}=r.value,a=br(n,i,wr(t));return"string"==typeof a?u(a):s(h(Sr(e),a))}const t=(e=>{if(3!==e.length)return R;const[r,t,n]=e;if("string"===r.kind&&"object"===n.kind){const e=N((e=>yr(e.value)))(r);return Q((e=>({grp:e.value,cutoff:t,m:n.value})))(e)}return R})(e);if(U(t)){const{grp:e,cutoff:r,m:n}=t.value,i=br(r,n,wr(e));return"string"==typeof i?u(i):s(h(R,i))}const n=(e=>{if(2!==e.length)return R;const[r,t]=e;if("string"===r.kind&&"object"===t.kind){const e=N((e=>qr(e.value)))(r);return Q((e=>({prim:e.value,m:t.value})))(e)}return R})(e);if(U(n)){const{prim:e,m:r}=n.value;return s(h(Sr(e),v(l(r))))}const i=(e=>{if(1!==e.length)return R;const[r]=e;return"object"===r.kind?V({m:r.value}):R})(e);if(U(i)){const{m:e}=i.value;return s(h(R,v(l(e))))}const a=(e=>{if(e.length<1)return R;const[r,...t]=e;if("string"===r.kind){const e=N((e=>qr(e.value)))(r);return Q((e=>({prim:e.value,rest:t})))(e)}return R})(e);if(U(a)){const{prim:e,rest:r}=a.value;return s(h(Sr(e),Ar(r)))}return s(h(R,Ar(e)))},t=e=>"array"===e.kind?Ie(t)(e.value):[e];return"null"===e.kind?_({kind:"bottom"}):_(r(t(e)))}function qr(e){const r=e.split("");if(!0==(0===r.length))return!1;{const[e,...t]=r;return-1!=="pmvn".indexOf(e)&&t.every((e=>-1!=="pmvn0123456789".indexOf(e)))}}function yr(e){const r=e.split("");switch(!0){case 0===r.length:return!1;case"w"===r[0]&&void 0===r[1]:return!0;default:{const[e,...t]=r;return-1!=="ux".indexOf(e)&&-1===t.map((e=>!isNaN(parseInt(e)))).indexOf(!1)}}}function br(e,r,t){switch(e.kind){case"string":return v(t({1:V(e.value),2:r}));case"number":case"null":return d(t({1:"null"===e.kind?R:V(e.value),2:Ze(Xe(r,(([e,r])=>[Number(e),r])),(e=>!isNaN(e[0])))}));default:return"{bad cutoff}"}}function wr(e){const r=e=>r=>f(r[2],r[1],e),t=e=>r=>m(r[2],r[1],e),n=e.split("");switch(!0){case"w"===n[0]&&void 0===n[1]:return e=>p(e[2],e[1]);case"u"===n[0]&&void 0===n[1]:return r(1);case"u"===n[0]&&void 0!==n[1]:return r(parseInt(n.slice(1).join("")));case"x"===n[0]&&void 0===n[1]:return t(1);case"x"===n[0]&&void 0!==n[1]:return t(parseInt(n.slice(1).join("")));default:throw new Error("This should never happen if you use isGroupCommand")}}function Sr(e){return Q(o)(ce(xr(e,(e=>{const r=e.split("");if(0===r.length)return R;const[t,...n]=r,i=(e=>{switch(e){case"p":return V("add");case"m":return V("mul");case"v":return V("max");case"n":return V("min");default:return R}})(t);return Q((e=>{const{init:r,rest:t}=(i=e=>{return"number"==typeof(r=parseInt(e))&&isFinite(r)&&Math.floor(r)===r;var r},function(e){var r=Ce(Se(e,i))(e);return{init:r[0],rest:r[1]}})(n);var i;return{1:{1:e,2:0===r.length?1:parseInt(r.join(""))},2:t.join("")}}))(i)}))))}function xr(e,r){const t=r(e);return Y((()=>[]))(Q((e=>[e[1]].concat(xr(e[2],r))))(t))}function Ar(e){return g(e.map(kr))}function kr(e){switch(e.kind){case"number":return s(e.value);case"string":return u(e.value);case"null":return{kind:"bottom"};case"object":return u("{object}");case"array":return u("{array}")}}const Er={strategy:(e,r,t)=>n=>{if(J(t))return r;if("delta"===e&&J(r))return R;if(J(r))return t;if(U(r)&&U(t))return n(r.value,t.value);throw new Error("Non exhaustive match in combineCommand.strategy")},operation:(e,r,t,n,i,a)=>{const o=Oe(P(a));if("append"===e&&"add"===r)return Te(t,n,Lr("append",i.plus));if("append"===e&&"mul"===r)return Te(t,n,Lr("append",i.times));if("append"===e&&"max"===r)return T(o)(t,n);if("join"===e&&"add"===r)return Te(t,n,Lr("join",T(a)));if("join"===e&&"mul"===r)return Te(t,n,Lr("join",T(a)));if("join"===e&&"max"===r)return T(o)(t,n);if("min"===r)return Er.operation(e,"max",t,n,i,function(e){return x(((r,t)=>Je(e.compare(r,t))))}(a));if("delta"===e&&"max"===r)return E(o)(t,n)?t:n.map(c);if("delta"===e)return Te(t,n,((e,r)=>E(P(a))(e,r)?e:{kind:"bottom"}));throw new Error("Non exhaustive match in combineCommand.operation")},extend:(e,r,t,n)=>{if("delta"===e&&"top"===t.kind&&"top"===n.kind)return E(I)(t.error,n.error)?u(t.error):{kind:"bottom"};if("delta"===e&&"bottom"===n.kind)return t;if("delta"===e&&"bottom"===t.kind)return{kind:"bottom"};if("top"===t.kind&&"top"===n.kind)return u(T(I)(t.error,n.error));if("top"===t.kind)return t;if("top"===n.kind)return n;if("inner"===t.kind&&"inner"===n.kind)return r(t.a,n.a);if("bottom"===t.kind)return n;if("bottom"===n.kind)return t;throw new Error("Non exhaustive match in extend")}},Tr={plus:(e,r)=>e+r,times:(e,r)=>e*r};function Cr(e,r,t,n){if("unbounded"===e.kind&&"unbounded"===r.kind){const i=e.group,a=r.group;return Y(c)(Q((e=>s(l(e))))($e(i,a,t,n)))}if("windowed"===e.kind&&"windowed"===r.kind){const i=e.key,a=e.group,o=r.key,u=r.group,l=T(G(n))(i,o);return Y(c)(Q((e=>s(p(e,l))))($e(a,u,t,n)))}if("countLimit"===e.kind&&"countLimit"===r.kind){const i=e.n,a=r.n;if(i===a){const a=e.limit,o=e.group,u=r.limit,l=r.group,p=T(G(n))(a,u);return Y(c)(Q((e=>s(m(e,p,i))))($e(o,l,t,n)))}return u("Non matching counts")}if("uniqueLimit"===e.kind&&"uniqueLimit"===r.kind){const i=e.n,a=r.n;if(i===a){const a=e.limit,o=e.group,u=r.limit,l=r.group,p=T(G(n))(a,u);return Y(c)(Q((e=>s(f(e,p,i))))($e(o,l,t,n)))}return u("Non matching counts")}return u("Non matching group types")}function Ir(e,r,t,n,i,a){const o=(e,r)=>({1:we(e)(r).concat(ye(Math.max(0,e-r.length),c)),2:xe(e)(r)}),s=(r,t,n)=>{if(0===r.length)return Er.operation(e,"max",t,n,i,a);if(r.length>0){const[c,...u]=r,l=o(c[2],t),p=l[1],m=l[2],f=o(c[2],n),d=f[1],v=f[2];return Er.operation(e,c[1],p,d,i,a).concat(s(u,m,v))}throw new Error("Non exhaustive match in recurse")};return ke((u=e=>"bottom"===e.kind,function(e){return e.slice(Se(e,u))})(ke(s(r,t,n))));var u}function Mr(e,t,n){return Y(r)(Pr(e,R)(t,n))}function Pr(e,r){const t=r=>(t,n)=>Er.strategy(e,t,n)(Pr(e,r)),n=(n,i)=>{if(z(pe(w({1:C,2:fe}))).equals(n.commands,i.commands)){const a=((r,n,i)=>{if("stringGroup"===n.kind&&"stringGroup"===i.kind){const e=Cr(n.group,i.group,t(r),I);return M(e,(e=>v(Br(e,I))))}if("numberGroup"===n.kind&&"numberGroup"===i.kind){const e=Cr(n.group,i.group,t(r),de);return M(e,(e=>d(Br(e,de))))}if("tuple"===n.kind&&"tuple"===i.kind){const t=U(r)?r.value:[];return s(g(Ir(e,t,n.tuple,i.tuple,Tr,de)))}throw new Error(`Non matching payload. Got ${n.kind} and ${i.kind}`)})(J(n.commands)?r:n.commands,n.payload,i.payload);return M(a,(e=>h(n.commands,e)))}throw new Error(`Non matching primitive strings. Got ${ur(n)} and ${ur(i)}`)};return(r,t)=>lr(_(Er.extend(e,n,hr(r).state,hr(t).state)))}function Dr(e,r,t){const n=Q((r=>Ze(e,(([e,n])=>{return(i=t,function(e,r){return-1!==i.compare(e,r)})(e,r);var i}))))(r);return Y((()=>e))(n)}function Br(e,r){switch(e.kind){case"unbounded":return e;case"windowed":return J(e.key)?e:p(Dr(e.group,e.key,r),e.key);case"countLimit":{const t=e.limit,n=e.n,i=e.group,a=(e,r)=>r<=1?R:V(r-1),o=Ke(n,i,a,r),c=T(G(r))(t,o);return m(Dr(i,c,r),c,n)}case"uniqueLimit":{const t=e.limit,n=e.n,i=e.group,a=(e,r)=>{if("object"===e.kind){const t=[...e.value.keys(),...r.keys()],i=new Set(t);return i.size>=n?R:V(i)}return R},o=Ke(new Set,i,a,r),c=T(G(r))(t,o);return f(Dr(i,c,r),c,n)}}}function Lr(e,r){return(t,n)=>Er.extend(e,((e,t)=>s(r(e,t))),t,n)}function Fr(e,r){return Mr("append",e,r)}function Or(e){return function(){return e}}var Hr=Or(void 0);function Rr(e,r,t,n,i,a,o,c,s){switch(arguments.length){case 1:return e;case 2:return function(){return r(e.apply(this,arguments))};case 3:return function(){return t(r(e.apply(this,arguments)))};case 4:return function(){return n(t(r(e.apply(this,arguments))))};case 5:return function(){return i(n(t(r(e.apply(this,arguments)))))};case 6:return function(){return a(i(n(t(r(e.apply(this,arguments))))))};case 7:return function(){return o(a(i(n(t(r(e.apply(this,arguments)))))))};case 8:return function(){return c(o(a(i(n(t(r(e.apply(this,arguments))))))))};case 9:return function(){return s(c(o(a(i(n(t(r(e.apply(this,arguments)))))))))}}}function Vr(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];return e}function Nr(e,r,t,n,i,a,o,c,s){switch(arguments.length){case 1:return e;case 2:return r(e);case 3:return t(r(e));case 4:return n(t(r(e)));case 5:return i(n(t(r(e))));case 6:return a(i(n(t(r(e)))));case 7:return o(a(i(n(t(r(e))))));case 8:return c(o(a(i(n(t(r(e)))))));case 9:return s(c(o(a(i(n(t(r(e))))))));default:for(var u=arguments[0],l=1;l<arguments.length;l++)u=arguments[l](u);return u}}var jr=function(e){return"Some"===e._tag},zr={_tag:"None"},Gr=function(e){return{_tag:"Some",value:e}},Qr=function(e){return"Left"===e._tag},Wr=Object.prototype.hasOwnProperty;function Ur(e){return function(r,t){if(void 0===t){var n=Ur(e);return function(e){return n(r,e)}}for(var i,a=0;a<t.length;a++)if(i=t[a],e.equals(i,r))return!0;return!1}}var Jr=Ur;function Yr(e){var r=Jr(e);return function(t,n){if(void 0===n){var i=Yr(e);return function(e){return i(e,t)}}return t.filter((function(e){return!r(e,n)}))}}var $r=function(e){return{_tag:"Left",left:e}},Kr=function(e){return{_tag:"Right",right:e}},Xr=Qr,Zr=function(e){return function(r){return Xr(r)?e(r.left):r.right}},et=Zr,rt=function(e,r){try{return Kr(e())}catch(e){return $r(r(e))}};var tt=function(e){return function(r){return!e(r)}},nt=zr,it=Gr;var at=function(e){return function(r){return ct(r)?nt:it(e(r.value))}},ot=jr,ct=function(e){return"None"===e._tag},st=function(e,r){return function(t){return ct(t)?e():r(t.value)}},ut=st,lt=ut;var pt={equals:function(e,r){return e===r}},mt=function(e){for(var r in e)if(Wr.call(e,r))return!1;return!0};function ft(e){return function(r){var t={},n=!1;for(var i in r)if(Wr.call(r,i)){var a=r[i];e(i,a)?t[i]=a:n=!0}return n?t:r}}var dt=function(e){return ft((function(r,t){return e(t)}))};var vt=mt;var gt=dt;gt(tt(vt));function _t(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];return r.reduce(((e,r)=>Object.assign(Object.assign({},e),r)),{})}tt((function(e){return 0===e.length}));function ht(e,r){const t=Object.keys(e),n=t.length,i={};for(let a=0;a<n;a++){const n=t[a],o=r(n,e[n]);ot(o)&&(i[n]=o.value)}return i}function qt(e){var r;return["SegmentEntry","SegmentExit"].includes(e.name)&&void 0!==(null===(r=e.properties)||void 0===r?void 0:r.segment_number)}const yt="process";let bt=!1,wt=[],St=!1;const xt={};let At={getCurrentTime:()=>new Date,getCurrentSession:()=>"",getCurrentView:()=>"",getSegments:()=>({}),get1PSegments:()=>({}),get3PSegments:()=>({}),getSegmentsArray:()=>({}),getLookalikeModels:()=>({}),setSegmentActivation:()=>{}};const kt=e=>{const r=At.get1PSegments(),t={"1p":Object.assign(Object.assign({},r["1p"]),e["1p"])};At.get1PSegments=()=>t},Et=e=>{const r=Object.assign({},e);delete r["1p"],At.get3PSegments=()=>r},Tt=()=>{const e=Bt.concat(At.get1PSegments(),At.get3PSegments()),r=Dt(e);At.getSegments=()=>e,At.getSegmentsArray=()=>r};function Ct(e,r,t,n,i,a,o){bt=!1,wt=[],St=!1;const c=Dt(n.segments);At={getCurrentTime:()=>new Date,getCurrentSession:()=>n.sessionId,getCurrentView:()=>n.viewId,get1PSegments:()=>n.segments,get3PSegments:()=>({}),getSegments:()=>Bt.concat(At.get1PSegments(),At.get3PSegments()),getSegmentsArray:()=>c,getLookalikeModels:()=>n.lookalikeModels,setSegmentActivation:(e,r)=>{}};const s=ht(r,((r,t)=>{var n;return(null===(n=e[r])||void 0===n?void 0:n.checksum)===t?nt:it(((e,r)=>{const t=a[e].interpret(null,At);return Object.assign({checksum:r},!1===t.result?{}:{result:t})})(r,t))}));if(0===i.length)return{diff:Object.assign(Object.assign({},e),s),errors:[]};if(0===Object.keys(s).length)return{diff:e,errors:[]};{const n=It(s,r,t,i,"bootstrap",a,o);return{diff:Object.assign(Object.assign({},e),n.diff),errors:n.errors}}}function It(e,r,t,n,i,a,o){let c={diff:{},errors:[]};const s=n.length,u=()=>n.filter((e=>{return r=o["!UpdateLookalikeModels"]||[],qt(t=e)&&r.includes(t.properties.segment_number.toString());var r,t})).length===n.length?"lookalikeTransition":"transition",l=(e,r,t)=>"transition"===e?t===r-1?u():"event":e;for(let u=0;u<s;u++){const p=n[u],m=l(i,s,u),f=Mt(Object.assign(Object.assign({},e),c.diff),r,t,p,m,a,o);c={diff:Object.assign(Object.assign({},c.diff),f.diff),errors:c.errors.concat(f.errors)}}return c}function Mt(t,n,i,a,o,c,s){var u;"bootstrap"!==o&&(At.setSegmentActivation=Pt(t,n));const l=r,p=(r,t)=>{const n=c[r],o=n.lift(a,At),s=Rr(tr,et(l)),u=s(t.state||null),p=s(o),m=Nr(rt((()=>Fr(u,p)),e),Zr((r=>{throw e(`Failed to append lifted event ${er(p)} to internal state ${er(u)}. Got ${r}`)}))),f=Nr(i[r],(d=Boolean,function(e){return d(e)?it(e):nt}),at(s));var d;const[v,g]=Nr(f,lt((()=>Vr(m,!1)),(e=>Nr(rt((()=>Vr(Fr(m,e),!1)),Hr),et((()=>Vr(m,!0))))))),_=rr(m),h=n.interpret(rr(v),At),q=t.activations||{};return Object.assign(Object.assign(Object.assign(Object.assign({checksum:t.checksum},null===_?{}:{state:_}),!1===h.result?{}:{result:h}),0===Object.keys(q).length?{}:{activations:q}),!1===g?{}:{dropExternalState:g})},m={diff:{},errors:[]},f=function(e,r,t,n,i){switch(e){case"event":const e=(null==i?void 0:i[n.name])||[];if(bt)return e;{wt.push(n);const r=[...i["!UpdateSecondPartyData"]||[],...i["!UpdateThirdPartyData"]||[]];return Yr(pt)(e,r)}case"lookalikeTransition":return(null==i?void 0:i[n.name])||[];case"transition":const a=(null==i?void 0:i[n.name])||[];if(St){const e=i["!UpdateLookalikeModels"]||[];return a.concat(e)}return a;case"bootstrap":const o=((null==i?void 0:i[n.name])||[]).filter((e=>void 0!==r[e]));return Yr(pt)(o,[...bt?[]:(i["!UpdateSecondPartyData"]||[]).concat(i["!UpdateThirdPartyData"]||[]),...St?[]:i["!UpdateLookalikeModels"]||[]]);case"updateExternalState":return Object.keys(t);case"updateEnvironment":return[...i["!UpdateLookalikeModels"]||[],...i["!UpdateSecondPartyData"]||[],...i["!UpdateThirdPartyData"]||[]];case"updateLAL":return i["!UpdateLookalikeModels"]||[];case"updateTPD":return[...i["!UpdateSecondPartyData"]||[],...i["!UpdateThirdPartyData"]||[]]}}(o,t,i,a,s),d=f.length;!function(e){qt(e)&&(kt({"1p":{[e.properties.segment_number]:"SegmentEntry"===e.name}}),Tt())}(a);for(let e=0;e<d;e++){const r=f[e],i=t[r]||{checksum:n[r]};let a=i;try{a=p(r,i)}catch(e){m.errors.push(`Failed to interpret query ${r}. Got ${e}`)}a.dropExternalState&&(null!==(u=m.externalStateToDrop)&&void 0!==u||(m.externalStateToDrop={}),m.externalStateToDrop[r]=!0),m.diff[r]=a}return m}function Pt(e,r){return(t,n,i)=>{if(!(i in e)){const t=r[i];if(void 0===t)throw new Error("Checksum not in internalStateMap");e[i]={checksum:t}}"activations"in e[i]||(e[i].activations={});t in e[i].activations||(e[i].activations[t]=[]),e[i].activations[t]=[...e[i].activations[t],n]}}function Dt(e){return Object.keys(e).reduce(((r,t)=>{const n=Object.keys(e[t]),i=[];return n.forEach((r=>{!0===e[t][r]&&i.push(r)})),r[t]=i,r}),{})}const Bt={empty:{},concat:(e,r)=>{const t=Object.assign({},e);for(const[e,n]of Object.entries(r))t[e]?t[e]=_t(t[e],n):t[e]=n;return t}};const Lt=(e,r)=>{if("noop"===e.type)return{diff:{},errors:[]};const t=function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return[e.stateMap,...e.payload,...n,r.rawQueries,r.queriesByEvent]};return"bootstrap"===e.type?Ct(...t(e)):"updateEnvironment"===e.type?function(e,r,t,n,i,a){return n.segments&&(kt(n.segments),Et(n.segments),Tt(),At.setSegmentActivation=Pt(e,r)),n.lookalikeModels&&(St=!0),n.segments&&(e=>{const r=Object.keys(e).length,t="1p"in e;return t&&r>1||!t&&r>0})(n.segments)&&(bt=!0),At=Object.assign(Object.assign(Object.assign(Object.assign({},At),n.viewId?{getCurrentView:()=>n.viewId}:{}),n.sessionId?{getCurrentSession:()=>n.sessionId}:{}),n.lookalikeModels?{getLookalikeModels:()=>n.lookalikeModels}:{}),It(e,r,t,wt.length>0?wt:[xt],"updateEnvironment",i,a)}(...t(e)):"updateLAL"===e.type?function(e,r,t,n,i,a){return At.getLookalikeModels=()=>n,St=!0,Mt(e,r,t,xt,"updateLAL",i,a)}(...t(e)):"updateTPD"===e.type?function(e,r,t,n,i,a){Et(n),Tt(),At.setSegmentActivation=Pt(e,r),bt=!0;const o=It(e,r,t,wt.length>0?wt:[xt],"updateTPD",i,a);return wt=[],o}(...t(e)):"updateExternalState"===e.type?function(e,r,t,n,i){return Mt(e,r,t,xt,"updateExternalState",n,i)}(...t(e)):e.type===yt?It(...t(e,"event")):"processTransitions"===e.type?function(e,r,t,n,i,a){return It(e,r,t,n,"transition",i,a)}(...t(e)):void 0};const Ft=function(){var e=this&&this.__assign||function(){return e=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(e[i]=r[i]);return e},e.apply(this,arguments)},r=this&&this.__values||function(e){var r="function"==typeof Symbol&&Symbol.iterator,t=r&&e[r],n=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(r?"Object is not iterable.":"Symbol.iterator is not defined.")},t=this&&this.__read||function(e,r){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var n,i,a=t.call(e),o=[];try{for(;(void 0===r||r-- >0)&&!(n=a.next()).done;)o.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(t=a.return)&&t.call(a)}finally{if(i)throw i.error}}return o},n=this&&this.__spreadArray||function(e,r,t){if(t||2===arguments.length)for(var n,i=0,a=r.length;i<a;i++)!n&&i in r||(n||(n=Array.prototype.slice.call(r,0,i)),n[i]=r[i]);return e.concat(n||Array.prototype.slice.call(r))},i=function(){function i(e){return"number"==typeof e?a[e]:e}function p(e){return"number"==typeof e?o[e]:e}function m(e){return"number"==typeof e?c[e]:e}function f(e){switch(e.length){case 0:return null;case 1:return e[0];default:return e}}function d(e,r,t){void 0===t&&(t=_);var n=m(r).reduce((function(e,r){return e&&null!=e[r]?e[r]:null}),e);return null===n?null:t(n)}function v(e,r){var t=m(r).slice();return t.unshift(e),t}function g(e,r,t){return void 0===t&&(t=_),d(e,v("properties",r),t)}var _=function(e){return e},h=function(e){return!0};function q(e,r){return function(t){for(var n=0;n<e.length;n++){if((e[n](t)||!1)===r)return r}return!r}}var y=function(e){return function(r){return!e(r)}},b=function(e,r){return function(t){return t>=e&&t<=r}},w=function(e){return new Date(e).getTime()},S=function(e){return d(e,["time"],w)},x=function(e,r){return d(r,e,w)},A=function(e,r,t,n,i,a){return function(o){var c=d(o,e,(function(e){return e.filter(n).map((function(e){return d(e,r)})).reduce(i,a)}));return t(null===c?a:c)}};function k(e,t,n,i){var a,o;try{for(var c=r(e),s=c.next();!s.done;s=c.next()){var u=s.value;if(n(u)&&t(u)===i)return i}}catch(e){a={error:e}}finally{try{s&&!s.done&&(o=c.return)&&o.call(c)}finally{if(a)throw a.error}}return!i}var E=function(e){return function(r){return("string"==typeof e||"number"==typeof e)&&"string"==typeof r&&r.toLowerCase().indexOf(p(e).toLowerCase())>-1}},T=function(e){return function(r){return null!=r&&Array.isArray(r)&&r.indexOf(e)>=0}};function C(e,r,t,n,i){var a=d(e.getSegments(),[r,t])||!1;return i&&(n||a)&&e.setSegmentActivation(r,t,i),a}function I(e,r,t){return d(e.getSegments(),[r,t])||!1}function M(e,r,n){return void 0===n&&(n=18e5),function(i){return{a:{m:function(e,r){return[r[0],i.a.m(null!=e[0]&&e[0][0]===r[0][0]?e[1]:i.a.z,r[1])]},z:[[],i.a.z]},p:function(t,n){return[[e(t)],d(n,r)===e(t)?i.p(t,n):i.a.z]},r:function(r,t){return i.r(r,0!==t[0].length&&t[0][0]===e(r)?t[1]:i.a.z)},d:i.d.sq||{l:function(a,o){var c=d(a,r),s=e(o);if(c!==s)return null;var u=i.d.l(a,o);if(!(Array.isArray(u)&&u.length>1))return null;var l=t(u),p=l[0],m=l.slice(1),f=+(S(a)||o.getCurrentTime()),v=Math.floor(f/n),g={};return g[v]={},g[v][s]=1===m.length?m[0]:m,[p,"u",null,g]},i:function(r,t){if(!Array.isArray(r)||"object"!=typeof r[3])return[[],i.a.z];var n=e(t),a=r[3];return[[n],Object.keys(a).map((function(e){return a[e][n]})).filter((function(e){return e})).map((function(e){return i.d.i([r[0]].concat(e))})).reduce(i.a.m,i.a.z)]}}}}}var P=M((function(e){return e.getCurrentSession()}),["session_id"],18e5),D=M((function(e){return e.getCurrentView()}),["view_id"],3e5);function B(e,r,a,o){return void 0===o&&(o=1),{a:{m:function(e,r){return e.concat(r).slice(-a)},z:[]},p:function(t,n){return d(n,["name"])===i(r)?[e.p(t,n)]:[]},r:function(r,t){return e.r(r,t.reduce((function(r,t){return e.a.m(r,t)}),e.a.z))},d:e.d.ftn||{l:function(r,t){var n,i=e.d.l(r,t),c=d(r,["time"],w)*o;return i&&[i[0],"x"+a,null,(n={},n[c]=2==i.length?i[1]:i.slice(1),n)]},i:function(r,i){return r?Object.keys(r[3]||{}).sort().reverse().map((function(e){return Array.isArray(e)?n([r[0]],t(r[3][e]),!1):[r[0],r[3][e]]})).map((function(r){return e.d.i(r,i)})):[]}}}}var L=function(e,r){return null===e?null==r?null:{b:r}:null==r?{a:e}:{a:e,b:r}},F=function(e,r){return e&&r?e(r):null},O=function(e,r,t){if(t&&t.result&&Array.isArray(t.result)){var n=F(e.d&&e.d.m,{result:t.result[0]}),i=F(r.d&&r.d.m,{result:t.result[1]});return L(n,i)}return null};function H(e,r){var t=s[e];if(!r||!t)return!1;if(!t.length)return!0;for(var n=0,i=!1,a=function(e){for(var r=[],t=0;t<e.length;++t){var n=e.charCodeAt(t);if(n>=55296&&n<=56319){var i=e.charCodeAt(t+1);if(i>=56320&&i<=57343){r.push(e.slice(t,t+2)),++t;continue}}r.push(e.charAt(t))}return r}(r.toLowerCase()),o=0;o<a.length;o++){for(var c=a[o];n>0&&!t[n][c];)n=t[n].su?t[n].su:0;if(t[n][c]&&(i=!!t[n=t[n][c]].te))break}return i}return{q:function(e){return{lift:function(r,t){return e.d.l(r,t)},interpret:function(r,t){return function(r,t){return{result:e.r(r,t)}}(t,e.d.i(r,t))},migrate:function(r){return r&&e.d.m?e.d.m(r):null},m:e.a.m,z:e.a.z,p:e.p,r:e.r,i:e.d.i}},a:function(e){return q(e,!1)},acq:function(e,r){return{p:function(t,n){return[e.p(t,n),r.p(t,n)]},r:function(t,n){return e.r(t,n[0])&&r.r(t,n[1])},a:{z:[e.a.z,r.a.z],m:function(t,n){return[e.a.m(t[0],n[0]),r.a.m(t[1],n[1])]}},d:{l:function(t,n){return L(e.d.l(t,n),r.d.l(t,n))},i:function(t,n){return t?[e.d.i(t.a||null,n),r.d.i(t.b||null,n)]:[e.a.z,r.a.z]},m:function(t){return O(e,r,t)}}}},acs:H,acs_:function(e,r){return function(t){return H(r,d(t,e))}},af_i:function(e,r,t){return void 0===t&&(t=h),function(n){return d(n,e,(function(e){return k(e,r,t,!1)}))&&!0}},af_l:function(e,r,t){return void 0===t&&(t=h),function(n){var i=d(n,e,(function(e){return e.filter(t).length}));return r(null===i?0:i)}},af_m:function(e,r,t,n){return void 0===n&&(n=h),function(i){var a=d(i,e,(function(e){return e.filter(n)}));return null===a||0===a.length?t(0):t(a.map((function(e){return d(e,r)})).reduce((function(e,r){return e+r}),0)/a.length)}},af_n:function(e,r,t,n){return void 0===n&&(n=h),A(e,r,t,n,(function(e,r){return Math.min(e,r)}),Number.POSITIVE_INFINITY)},af_p:function(e,r,t,n){return void 0===n&&(n=h),A(e,r,t,n,(function(e,r){return e*r}),1)},af_s:function(e,r,t,n){return void 0===n&&(n=h),A(e,r,t,n,(function(e,r){return e+r}),0)},af_u:function(e,r,t){return void 0===t&&(t=h),function(n){return d(n,e,(function(e){return k(e,r,t,!0)}))||!1}},af_x:function(e,r,t,n){return void 0===n&&(n=h),A(e,r,t,n,(function(e,r){return Math.max(e,r)}),Number.NEGATIVE_INFINITY)},as:function(e,r,t){var n=v("properties",r);return function(r){for(var i=d(r,n),a=t.length,o=!0,c=0;c<a;c++){var s=t[c];if(!(o=e(s)(i)))break}return o}},c:T,c_:function(e,r){return function(t){return T(r)(d(t,e))}},cl_:function(e,r){return function(t){return T(p(r))(d(t,e))}},cx:function(e){return function(r){return T(p(e))(r)}},ctu:function(e,r,t,n){return{a:n?{m:function(e,r){return e.filter((function(e){return-1===r.indexOf(e)})).concat(r).slice(-n)},z:[]}:{m:function(e,r){return e.filter((function(e){return-1===r.indexOf(e)})).concat(r)},z:[]},p:function(n,a){return d(a,["name"])===i(e)&&r(a)?d(a,t):[]},r:function(e,r){return r},d:{l:function(){return null},i:function(){return[]}}}},ctv:function(r,t,n,a){function o(e,r){var t,n=function(e){return{k:e.k,c:1+e.c}},i={arr:[],add:{k:r,c:1}};return r?(t=e.reduce((function(e,r){return e.add.k===r.k?{arr:e.arr,add:n(r)}:{arr:e.arr.concat(r),add:e.add}}),i)).arr.concat(t.add):e}return{a:a?{m:function(e,r){return o(e,r).slice(-a)},z:[]}:{m:function(e,r){return o(e,r)},z:[]},p:function(e,a){return d(a,["name"])===i(r)&&t(a)?d(a,n):null},r:function(r,t){return t.reduce((function(r,t){var n;return e(e({},r),((n={})[t.k]=t.c,n))}),{})},d:{l:function(e){return null},i:function(e){return[]}}}},ctw:function(e,r,t,n){return{a:n?{m:function(e,r){return e.concat(r).slice(-n)},z:[]}:{m:function(e,r){return e.concat(r)},z:[]},p:function(n,a){return d(a,["name"])===i(e)&&r(a)?d(a,t):[]},r:function(e,r){return r},d:{l:function(){return null},i:function(){return[]}}}},cw:function(e,r,t){return void 0===t&&(t=_),{a:{m:function(e,r){return e+r},z:0},p:function(t,n){return d(n,["name"])===i(e)&&r(n)?1:0},r:function(e,r){return t(r)},d:{l:function(t){return d(t,["name"])===i(e)&&r(t)?["p",1]:null},i:function(e){return e?Array.isArray(e)?e.slice(-1)[0]:e:0},m:function(e){return e&&e.result?["p",e.result]:null}}}},e:function(e){return function(r){return r===e}},e_:function(e,r){return function(t){return d(t,e)===r}},fm:function(e,r){return{p:r.p,r:function(t,n){return e(r.r(t,n))},a:r.a,d:r.d}},ftn:function(e,r,t){return{a:{m:function(e,r){return e.concat(r.slice(0,t-e.length))},z:[]},p:function(t,n){return d(n,["name"])===i(r)?[e.p(t,n)]:[]},r:function(r,t){return e.r(r,t.reduce((function(r,t){return e.a.m(r,t)}),e.a.z))},d:B(e,r,t,-1).d}},fw:function(e,r,t,n){return void 0===n&&(n=_),{a:{m:function(e,r){return null===e?r:e},z:null},p:function(n,a){return d(a,["name"])===i(e)&&r(a)?d(a,t):null},r:function(e,r){return r},d:{l:function(t){return d(t,["name"])===i(e)&&r(t)?["p",1]:null},i:function(e){return e?Array.isArray(e)?e.slice(-1)[0]:e:0},m:function(e){return e&&e.result?["p",e.result]:null}}}},g:function(e){return function(r){return r>e}},g_:function(e,r){return function(t){return d(t,e)>r}},gb:function(e,r,t){return{a:{m:function(t,n){var i=Object.keys(t).concat(Object.keys(n)).filter((function(e,r,t){return t.indexOf(e)===r})).sort((function(e,r){return Math.max(d(t,[r,1]),d(n,[r,1]))-Math.max(d(t,[e,1]),d(n,[e,1]))})).slice(0,r).reduce((function(r,i){var a=e.a.m(d(t,[i,0])||e.a.z,d(n,[i,0])||e.a.z);return r[i]=[a,Math.max(d(t,[i,1]),d(n,[i,1]))],r}),{});return i},z:{}},p:function(r,n){var i,a,o=d(n,v("properties",t)),c=e.p(r,n);return null==o||(null==(a=c)||"object"==typeof a&&0===Object.keys(a).length||a===e.a.z)?{}:((i={})[o]=[c,d(n,["time"],w)],i)},r:function(r,t){var n={};return Object.keys(t).forEach((function(i){return n[i]=e.r(r,t[i][0])})),n},d:{l:function(){return null},i:function(){return{}}}}},ge:function(e){return function(r){return r>=e}},ge_:function(e,r){return function(t){return d(t,e)>=r}},i_:_,ifp:function(e){return{a:{m:function(e,r){return r},z:null},p:function(e){return null},r:function(r,t){return function(r){return I(r,"1p",e)}(r)},d:{l:function(e,r){return null},i:function(e){return null}}}},isp:function(e,r,t,n){return{a:{m:function(e,r){return r},z:!1},p:function(t,n){return I(t,e,r)},r:function(i,a){return C(i,e,r,t,n)},d:{l:function(e,r){return null},i:function(e){return Array.isArray(e)&&(!!+e[2]||!1)}}}},itp:function(e,r,t,n){return{a:{m:function(e,r){return r},z:!1},p:function(t,n){return I(t,e,r)},r:function(i,a){return C(i,e,r,t,n)},d:{l:function(e,r){return null},i:function(e){return Array.isArray(e)&&(!!+e[2]||!1)}}}},k:d,l:function(e){return function(r){return r<e}},l_:function(e,r){return function(t){var n=d(t,e);return null!==n&&n<r}},le:function(e){return function(r){return r<=e}},le_:function(e,r){return function(t){var n=d(t,e);return null!==n&&n<=r}},lm:function(e,r){var t=function(r){return function(e,r,t){if(void 0===r[t])return NaN;var n,i=e||{},a=r[t]||{},o=(a["1p"]||{}).const||0;return Object.keys(i).forEach((function(e){i[e].forEach((function(r){var t=(a[e]||{})[r]||0;o+=t}))})),n=o,1/(1+Math.pow(Math.E,-n))}(r.getSegmentsArray(),r.getLookalikeModels(),e)};return{a:{m:function(e,r){return r},z:null},p:function(e){return null},r:function(e,n){return r(t(e))},d:{l:function(e,r){return null},i:function(e){return null}}}},ltn:B,mnw:function(e,r,t,n){void 0===n&&(n=_);var a=Number.POSITIVE_INFINITY;return{a:{m:function(e,r){return e<r?e:r},z:a},p:function(n,o){return d(o,["name"])===i(e)&&r(o)?d(o,t):a},r:function(e,r){return n(r)},d:{l:function(n){return d(n,["name"])===i(e)&&r(n)?["n",d(n,t)]:null},i:function(e){return e?Array.isArray(e)?e.slice(-1)[0]:e:a}}}},mxw:function(e,r,t,n){void 0===n&&(n=_);var a=Number.NEGATIVE_INFINITY;return{a:{m:function(e,r){return e>r?e:r},z:a},p:function(n,o){return d(o,["name"])===i(e)&&r(o)?d(o,t):a},r:function(e,r){return n(r)},d:{l:function(n){return d(n,["name"])===i(e)&&r(n)?["v",d(n,t)]:null},i:function(e){return e?Array.isArray(e)?e.slice(-1)[0]:e:a}}}},n0:y(_),n:function(e){return function(r){return r!==e}},nt:y,n_:function(e,r){return function(t){return d(t,e)!==r}},o:function(e){return q(e,!0)},ocq:function(e,r){return{p:function(t,n){return[e.p(t,n),r.p(t,n)]},r:function(t,n){return e.r(t,n[0])||r.r(t,n[1])},a:{z:[e.a.z,r.a.z],m:function(t,n){return[e.a.m(t[0],n[0]),r.a.m(t[1],n[1])]}},d:{l:function(t,n){return L(e.d.l(t,n),r.d.l(t,n))},i:function(t,n){return t?[e.d.i(t.a||null,n),r.d.i(t.b||null,n)]:[e.a.z,r.a.z]},m:function(t){return O(e,r,t)}}}},oe:function(e){for(var r=Object.keys(e),t=r.length,n=new Array(t);t--;)n[t]=[r[t],e[r[t]]];return n},os:function(e,r,t){var n=v("properties",r);return function(r){for(var i=d(r,n),a=t.length,o=!1,c=0;c<a;c++){var s=t[c];if(o=e(s)(i))break}return o}},pacs:function(e,r){return function(t){return H(r,g(t,e))}},pb:function(e,r,t){return function(n){return b(r,t)(g(n,e))}},pc:function(e,r){return function(t){var n=g(t,e);return null!=n&&Array.isArray(n)&&n.indexOf(r)>=0}},pc_:function(e,r){return function(t){var n=g(t,e),i=p(r);return null!=n&&Array.isArray(n)&&n.indexOf(i)>=0}},pe:function(e,r){return function(t){return g(t,e)===r}},pg:function(e,r){return function(t){return g(t,e)>r}},pge:function(e,r){return function(t){return g(t,e)>=r}},pl:function(e,r){return function(t){var n=g(t,e);return null!==n&&n<r}},ple:function(e,r){return function(t){var n=g(t,e);return null!==n&&n<=r}},pn:function(e,r){return function(t){return g(t,e)!==r}},ps:function(e,r){return function(t){return E(r)(g(t,e))}},pw:function(e,r,t,n){return void 0===n&&(n=_),{a:{m:function(e,r){return e*r},z:1},p:function(n,a){return d(a,["name"])===i(e)&&r(a)?d(a,t):1},r:function(e,r){return n(r)},d:{l:function(n){return d(n,["name"])===i(e)&&r(n)?(a=d(n,t))>=1?["m2p",a]:a>0?["m2p",null,1/a]:0==a?["m2p",0]:a>-1?["m2p",null,1/a,1]:["m2p",a,null,1]:null;var a},i:function(e){return e?Array.isArray(e)?0===(r=e.slice(1))[0]?0:Math.pow(-1,r[2]||0)*(r[0]||1)/(r[1]||1):e:1;var r}}}},r:function(e){for(var r=[],i=1;i<arguments.length;i++)r[i-1]=arguments[i];return l[e].apply(l,n([],t(r),!1))},ref:function(e){return function(r){return u[e](r)}},s:E,s_:function(e,r){return function(t){return E(r)(d(t,e))}},scq:function(e,r,t){return void 0===t&&(t=_),{p:function(t,n){return[e.p(t,n),r.p(t,n)]},r:function(n,i){return t(e.r(n,i[0])+r.r(n,i[1]))},a:{z:[e.a.z,r.a.z],m:function(t,n){return[e.a.m(t[0],n[0]),r.a.m(t[1],n[1])]}},d:{l:function(t,n){return L(e.d.l(t,n),r.d.l(t,n))},i:function(t,n){return t?[e.d.i(t.a||null,n),r.d.i(t.b||null,n)]:[e.a.z,r.a.z]},m:function(t){return O(e,r,t)}}}},sq:P,sw:function(e,r,t,n){return void 0===n&&(n=_),{a:{m:function(e,r){return e+r},z:0},p:function(n,a){return d(a,["name"])===i(e)&&r(a)?d(a,t):0},r:function(e,r){return n(r)},d:{l:function(n){return function(t){return d(t,["name"])===i(e)&&r(t)}(n)?(a=d(n,t))<0?["p2",null,-a]:["p2",a]:null;var a},i:function(e){return e?Array.isArray(e)?((r="p2"===e[0]?e.slice(1):e)[0]||0)-(r[1]||0):e:0;var r}}}},t:h,tb:function(e,r){return function(t){return b(e,r)(S(t))}},te:function(e){return function(r){return S(r)===e}},te_:function(e,r){return function(t){return x(e,t)===r}},tg:function(e){return function(r){return S(r)>e}},tg_:function(e,r){return function(t){return x(e,t)>r}},tge:function(e){return function(r){return S(r)>=e}},tge_:function(e,r){return function(t){return x(e,t)>=r}},ti:w,tl:function(e){return function(r){return S(r)<e}},tl_:function(e,r){return function(t){return x(e,t)<r}},tle:function(e){return function(r){return S(r)<e}},tle_:function(e,r){return function(t){return x(e,t)<r}},tn:function(e){return function(r){return S(r)!==e}},tn_:function(e,r){return function(t){return x(e,t)!==r}},tw:function(e,r,i){var a=i||100,o=Math.ceil(r/a),c=function(e){return Math.floor(e/o)},s=function(e,t,n){var i;return[c(e-r),(i={},i[c(t)]=n,i)]},u=function(r,t){var n=Math.max(r[0],t[0]),i=Object.keys(r[1]).filter((function(e){return e>=n})).concat(Object.keys(t[1]).filter((function(e){return e>=n}))).filter((function(e,r,t){return t.indexOf(e)===r})).reduce((function(n,i){var a=e.a.m(r[1][i]||e.a.z,t[1][i]||e.a.z);return a!==e.a.z&&(n[i]=a),n}),{});return[n,i]},l=[Number.NEGATIVE_INFINITY,{}],p=function(e){var r=function(r){return r.map((function(r){var n=t(r,3),i=n[0],a=(n[1],n[2]);return s(e.t,a,i)})).reduce(u,l)};return u(r(e.in),r(e.out))},m=function(r){if(void 0!==r.result)return m(r.result);if(void 0!==r.w)return m(p(r));var n=t(r,2),i=(n[0],n[1]),a=null,o={};for(var c in i){var s=e.d.m({result:i[c]});s&&Array.isArray(s)&&(a=s[0],o[c]=f(s.slice(1)))}return a&&[a,"w",r[0],o]};return{a:{m:function(e,r){var t=e.w?p(e):e;return u(t,r)},z:l},p:function(r,t){return s(r.getCurrentTime(),d(t,["time"],w),e.p(r,t))},r:function(r,t){var n=(t.w?p(t):t)[1];return e.r(r,Object.keys(n).reduce((function(r,t){return e.a.m(r,n[t])}),e.a.z))},d:e.d.tw||{l:function(r,i){var a=e.d.l(r,i);return a&&n([a[0],"w"],t(s(i.getCurrentTime(),d(r,["time"],w),a.slice(1))),!1)},i:function(t,n){var i=Array.isArray(t)?t:[],a=n.getCurrentTime(),o=c(a-r);return[i[2]||null,Object.keys(i[3]||{}).map((function(r){var t;return(t={})[r]=e.d.i(i[3][r],n),t})).reduce((function(e,r){return Object.keys(r).filter((function(e){return parseInt(e)>=o})).forEach((function(t){return e[t]=r[t]})),e}),{})]},m:e.d.m&&m}}},vgw:function(e,r,t,n){void 0===n&&(n=_);var a={v:0,k:0};return{a:{m:function(e,r){var t=e.k+r.k;return{v:t?e.v+r.k*(r.v-e.v)/t:0,k:t}},z:a},p:function(n,o){return d(o,["name"])===i(e)&&r(o)?{v:d(o,t),k:1}:a},r:function(e,r){return n(r.v)},d:{l:function(n){return d(n,["name"])===i(e)&&r(n)?0==(a=d(n,t))?["p3",1]:a<0?["p3",1,null,-a]:["p3",1,a]:null;var a},i:function(e){return e?Array.isArray(e)?{v:(((r=e.slice(1))[1]||0)-(r[2]||0))/(r[0]||1),k:r[0]||0}:void 0:a;var r}}}},vq:D,w:function(e){return function(r){return r===p(e)}},x:function(e){return function(r){return r!==p(e)}},y:function(e,r){return function(t){return g(t,e)===o[r]}},y_:function(e,r){return function(t){return d(t,e)===o[r]}},z:function(e,r){return function(t){return g(t,e)!==o[r]}},z_:function(e,r){return function(t){return d(t,e)!==o[r]}}}}(),a=["Pageview","PageviewComplete","SegmentEntry","PageviewEngagement","SegmentExit","SlotClicked","VideoEvent","VideoPlay"],o=["Travel","/Travel","https://thehill.com","https://thehill.com/homenews/house","https://thehill.com/homenews/senate","/Finance/Insurance","/Travel/Air Travel","/Travel/Air Travel/Airport Parking & Transportation","/Travel/Hotels & Accommodations","/Travel/Hotels & Accommodations/Vacation Rentals & Short-Term Stays","/Travel/Tourist Destinations","/Travel/Tourist Destinations/Beaches & Islands","/Travel/Tourist Destinations/Theme Parks","Pets","article","/Finance","/Food & Drink/Restaurants/Fast Food","/Health","/Pets","/Travel/Bus & Rail","/Travel/Car Rental & Taxi Services","/Travel/Cruises & Charters","/Travel/Specialty Travel","/Travel/Tourist Destinations/Mountain & Ski Resorts","/Travel/Tourist Destinations/Regional Parks & Gardens","/Travel/Tourist Destinations/Zoos-Aquariums-Preserves","90210","92835","92840","Automotive","Beauty & Personal Care","Fashion Accessories","Health & Wellness","Local","Local 4 You","Local Elections","Local News","Local Politics","Local news","bestreviews.com","https://thehill.com/homenews/administration","local","local news",\'"Local\',\'"Local News\',"/Finance/Credit & Lending/Credit Cards","/Finance/Insurance/Health Insurance","/Jobs & Education","/Shoppingome","Local Government","Local News Today","Politics","Retail & Restaurants","Services","Shoes","iPhone","/Autos & Vehicles/Vehicle Shopping/Used Vehicles","/Finance/Accounting & Auditing","/Finance/Credit & Lending","/Finance/Credit & Lending/Loans","/Food & Drink","/Home & Garden","/Jobs & Education/Education","/Jobs & Education/Education/Colleges & Universities","/Jobs & Education/Education/Distance Learning","/Jobs & Education/Education/Homeschooling","/Jobs & Education/Education/Primary & Secondary Schooling (K-12)","/Jobs & Education/Education/Standardized & Admissions Tests","/Jobs & Education/Education/Teaching & Classroom Resources","/Jobs & Education/Education/Training & Certification","/Jobs & Education/Education/Vocational & Continuing Education","/Jobs & Education/Jobs","/Jobs & Education/Jobs/Career Resources & Planning","/Jobs & Education/Jobs/Job Listings","/Jobs & Education/Jobs/Resumes & Portfolios","/Law & Government","/News/Politics","/Politics","/Real Estate","/Real Estate/Real Estate Listings","/Real Estate/Real Estate Listings/Bank-Owned & Foreclosed Properties","/Real Estate/Real Estate Listings/Commercial Properties","/Real Estate/Real Estate Listings/Residential Rentals","/Real Estate/Real Estate Listings/Residential Sales","/Real Estate/Real Estate Services","/politics","Bed & Bath","Electronics","Entertainment","Health","Kitchen","Lawn & Garden","Patio","https://ktla.com","https://thehill.com/policy/finance",\'"Casino News\',"/Arts & Entertainment/Events & Listings","/Arts & Entertainment/Movies","/Arts & Entertainment/Music & Audio","/Arts & Entertainment/Online Media","/Arts & Entertainment/TV & Video","/Arts & Entertainment/TV & Video/Online Video","/Autos & Vehicles","/Autos & Vehicles/Bicycles & Accessories","/Autos & Vehicles/Boats & Watercraft","/Autos & Vehicles/Campers & RVs","/Autos & Vehicles/Classic Vehicles","/Autos & Vehicles/Commercial Vehicles/Cargo Trucks & Trailers","/Autos & Vehicles/Motor Vehicles (By Type)","/Autos & Vehicles/Motor Vehicles (By Type)/Hybrid & Alternative Vehicles","/Autos & Vehicles/Motor Vehicles (By Type)/Motorcycles","/Autos & Vehicles/Motor Vehicles (By Type)/Off-Road Vehicles","/Autos & Vehicles/Motor Vehicles (By Type)/Trucks & SUVs","/Autos & Vehicles/Vehicle Codes & Driving Laws","/Autos & Vehicles/Vehicle Codes & Driving Laws/Vehicle Licensing & Registration","/Autos & Vehicles/Vehicle Parts & Services","/Autos & Vehicles/Vehicle Parts & Services/Gas Prices & Vehicle Fueling","/Autos & Vehicles/Vehicle Parts & Services/Vehicle Parts & Accessories","/Autos & Vehicles/Vehicle Parts & Services/Vehicle Repair & Maintenance","/Autos & Vehicles/Vehicle Shopping","/Autos & Vehicles/Vehicle Shows","/Beauty & Fitness/Fashion & Style","/Business & Industrial/Aerospace & Defense/Space Technology","/Computers & Electronics","/Finance/Accounting & Auditing/Tax Preparation & Planning","/Finance/Banking","/Finance/Financial Planning & Management","/Finance/Investing","/Finance/Investing/Stocks & Bonds","/Food & Drink/Cooking & Recipes","/Food & Drink/Cooking & Recipes/BBQ & Grilling","/Food & Drink/Cooking & Recipes/Desserts","/Food & Drink/Cooking & Recipes/Soups & Stews","/Food & Drink/Restaurants","/Food & Drink/Restaurants/Pizzerias","/Food & Drink/Restaurants/Restaurant Reviews & Reservations","/Games/Gambling/Lottery","/Health/Mental Health","/Health/Mental Health/Depression","/Health/Nutrition","/Health/Pharmacy/Drugs & Medications","/Health/Public Health","/People & Society/Social Issues & Advocacy","/Pets & Animals","/Pets & Animals/Pets","/Pets & Animals/Pets/Cats","/Pets & Animals/Pets/Dogs","/Science/Engineering & Technology","/Shopping/Apparel","/Shopping/Apparel/Costumes","/Shopping/Apparel/Eyewear","/Shopping/Apparel/Footwear","/Shopping/Apparel/Formal Wear","/Sports","/Sports/Team Sports","/games/card games/poker & casino games","/games/gambling","/law & government","/law & government/public safety","/news/politics","/sports/fantasy sports","02859","03034","03071","03076","03243","03263","03576","03579","03582","03583","03592","03597","03605","03752","03809","03810","03814","03819","03830","03855","03872","03887","04024","04027","04049","04056","04068","04091","04095","04221","04224","04227","04236","04256","04258","04263","04270","04275","04280","04282","04290","04292","04363","04406","04408","04410","04413","04414","04415","04417","04418","04419","04422","04424","04426","04427","04428","04430","04434","04435","04438","04443","04448","04449","04450","04451","04453","04454","04455","04456","04457","04459","04460","04463","04464","04471","04475","04478","04479","04481","04485","04487","04488","04490","04491","04492","04493","04495","04497","04547","04606","04611","04622","04623","04626","04628","04630","04635","04643","04648","04649","04655","04657","04671","04680","04686","04694","04730","04732","04733","04734","04735","04740","04745","04747","04757","04758","04760","04761","04763","04764","04765","04766","04768","04776","04777","04780","04786","04787","04910","04911","04912","04920","04922","04923","04924","04927","04928","04929","04930","04932","04939","04942","04943","04945","04950","04953","04956","04957","04958","04961","04964","04965","04966","04969","04971","04983","05904","06027","06091","06332","06373","06377","06384","06387","06478","06712","06716","06778","06779","06782","06786","06787","06791","06795","07004","07066","07416","07418","07421","07422","07439","07460","07461","07462","07480","07722","07764","07822","07823","07825","07826","07827","07831","07832","07833","07844","07846","07848","07851","07863","07881","07936","08001","08005","08019","08023","08038","08050","08067","08070","08072","08087","08092","08217","08224","08230","08241","08245","08246","08260","08311","08314","08316","08317","08318","08319","08321","08322","08324","08327","08328","08340","08343","08345","08348","08349","08353","08510","08511","08514","08527","08533","08535","08641","08701","08721","08722","08723","08724","08730","08731","08733","08734","08735","08738","08751","08752","08753","08755","08757","08758","10306","10307","10308","10309","10311","10312","10532","10541","10594","10915","10933","10950","10952","10963","10965","10988","10998","11010","11024","11204","11219","11235","11516","11559","11598","11697","11714","11716","11730","11739","11752","11754","11758","11762","11764","11769","11780","11783","11787","11795","11941","11949","11973","12007","12022","12025","12031","12032","12035","12036","12040","12042","12046","12052","12053","12058","12064","12066","12068","12069","12070","12071","12072","12074","12076","12078","12082","12083","12087","12092","12093","12094","12095","12108","12117","12120","12121","12122","12131","12134","12137","12138","12139","12149","12150","12154","12155","12157","12160","12164","12166","12167","12175","12176","12177","12185","12187","12190","12192","12193","12194","12197","12405","12407","12413","12418","12422","12423","12431","12434","12435","12439","12451","12452","12454","12460","12468","12469","12470","12473","12482","12531","12566","12582","12721","12722","12729","12733","12740","12746","12750","12751","12759","12760","12765","12771","12779","12780","12785","12787","12788","12808","12809","12810","12815","12817","12819","12821","12822","12827","12832","12835","12837","12838","12841","12846","12849","12854","12855","12858","12860","12861","12863","12870","12872","12878","12883","12887","12916","12917","12923","12926","12928","12930","12933","12934","12935","12955","12957","12958","12959","12960","12961","12965","12966","12967","12969","12980","12985","12998","13020","13028","13032","13033","13036","13040","13042","13044","13051","13052","13054","13069","13072","13074","13076","13083","13101","13103","13111","13113","13114","13117","13118","13121","13123","13124","13131","13134","13136","13140","13142","13143","13144","13145","13146","13154","13155","13156","13157","13158","13162","13163","13165","13166","13167","13301","13302","13303","13304","13305","13308","13309","13312","13313","13314","13315","13316","13317","13318","13319","13322","13324","13325","13327","13328","13329","13331","13334","13335","13338","13339","13340","13342","13343","13345","13352","13353","13354","13357","13361","13363","13364","13365","13367","13368","13403","13404","13406","13407","13409","13410","13411","13415","13416","13418","13424","13425","13428","13431","13433","13435","13437","13438","13439","13440","13441","13452","13454","13455","13456","13457","13459","13460","13464","13469","13470","13471","13473","13475","13476","13477","13478","13480","13482","13483","13484","13485","13486","13488","13489","13490","13491","13493","13494","13495","13605","13606","13608","13611","13612","13613","13614","13619","13620","13622","13623","13626","13628","13630","13632","13633","13634","13635","13636","13637","13638","13642","13643","13645","13646","13648","13649","13650","13651","13652","13654","13656","13658","13659","13661","13664","13665","13669","13672","13673","13674","13675","13679","13680","13681","13682","13684","13691","13697","13730","13733","13734","13736","13738","13739","13743","13744","13746","13748","13750","13751","13754","13755","13756","13757","13774","13776","13777","13778","13780","13782","13783","13784","13786","13787","13795","13797","13801","13802","13803","13804","13809","13811","13812","13813","13814","13826","13830","13832","13833","13835","13839","13841","13842","13843","13844","13847","13849","13856","13859","13862","13863","13865","14001","14004","14005","14008","14009","14011","14012","14013","14024","14025","14027","14028","14029","14030","14034","14035","14036","14037","14039","14040","14041","14042","14054","14055","14056","14057","14058","14059","14060","14062","14065","14066","14067","14070","14080","14082","14083","14091","14098","14101","14102","14103","14105","14108","14109","14111","14113","14125","14126","14129","14130","14131","14132","14134","14135","14138","14141","14143","14145","14166","14167","14168","14169","14171","14172","14173","14411","14413","14415","14416","14418","14422","14423","14427","14433","14435","14437","14462","14463","14464","14466","14468","14470","14476","14477","14479","14481","14482","14486","14489","14505","14507","14511","14515","14516","14517","14519","14525","14529","14530","14533","14536","14537","14539","14542","14545","14549","14550","14551","14556","14557","14560","14561","14569","14571","14572","14589","14590","14591","14592","14706","14707","14708","14709","14710","14711","14712","14714","14715","14716","14717","14718","14719","14721","14722","14723","14724","14726","14727","14728","14729","14732","14733","14735","14736","14737","14738","14739","14740","14741","14742","14743","14744","14747","14748","14753","14754","14755","14756","14767","14769","14770","14772","14774","14775","14777","14781","14782","14783","14784","14785","14787","14788","14801","14804","14806","14807","14808","14809","14810","14812","14813","14815","14816","14819","14820","14821","14822","14823","14824","14825","14826","14827","14836","14837","14838","14839","14840","14842","14843","14846","14855","14856","14858","14859","14861","14864","14871","14872","14873","14877","14878","14879","14880","14884","14885","14889","14892","14893","14894","14895","14897","14898","15004","15006","15012","15018","15019","15020","15021","15026","15028","15037","15038","15042","15043","15047","15050","15052","15053","15054","15060","15063","15066","15067","15072","15076","15077","15078","15083","15084","15085","15087","15088","15089","15133","15135","15142","15310","15311","15312","15313","15314","15315","15316","15320","15322","15323","15325","15327","15329","15330","15332","15333","15334","15337","15338","15340","15341","15342","15344","15345","15346","15348","15349","15350","15351","15352","15353","15357","15359","15360","15361","15362","15364","15365","15366","15367","15370","15376","15377","15379","15380","15410","15411","15412","15413","15416","15421","15422","15423","15424","15425","15427","15428","15430","15431","15432","15434","15436","15437","15438","15440","15442","15443","15444","15445","15446","15447","15448","15449","15451","15454","15455","15456","15458","15459","15460","15461","15462","15463","15464","15465","15467","15469","15470","15472","15473","15474","15478","15479","15480","15482","15483","15486","15488","15489","15490","15492","15501","15502","15510","15520","15521","15522","15530","15531","15532","15533","15534","15535","15536","15537","15538","15539","15540","15541","15542","15544","15545","15546","15547","15550","15551","15552","15554","15555","15557","15558","15559","15560","15561","15562","15563","15564","15565","15601","15610","15611","15612","15613","15615","15616","15617","15618","15619","15620","15622","15623","15624","15625","15626","15627","15628","15631","15632","15633","15634","15635","15636","15637","15638","15639","15640","15641","15642","15644","15646","15647","15650","15656","15658","15660","15661","15662","15663","15665","15666","15670","15671","15672","15673","15674","15675","15676","15677","15678","15679","15680","15681","15682","15683","15684","15686","15687","15688","15689","15690","15691","15692","15693","15695","15696","15697","15698","15710","15711","15712","15713","15714","15715","15716","15717","15720","15721","15722","15723","15724","15725","15727","15728","15729","15730","15731","15732","15733","15734","15736","15737","15738","15739","15741","15742","15744","15745","15746","15747","15748","15750","15752","15753","15754","15756","15757","15759","15760","15761","15762","15763","15764","15765","15767","15770","15771","15772","15773","15774","15775","15776","15777","15778","15779","15780","15781","15783","15784","15801","15821","15823","15824","15825","15827","15828","15829","15831","15832","15834","15840","15841","15845","15846","15847","15848","15849","15851","15853","15856","15857","15860","15861","15863","15864","15865","15866","15868","15870","15904","15905","15906","15909","15920","15921","15922","15923","15924","15925","15926","15927","15928","15929","15930","15931","15934","15935","15936","15937","15938","15940","15942","15943","15944","15945","15946","15948","15949","15951","15952","15953","15954","15955","15956","15957","15958","15960","15961","15962","15963","16001","16002","16020","16022","16023","16024","16025","16027","16028","16029","16030","16033","16034","16035","16036","16037","16038","16040","16041","16046","16048","16049","16050","16051","16052","16053","16054","16055","16056","16057","16059","16061","16063","16101","16102","16105","16110","16111","16112","16113","16114","16115","16116","16117","16120","16123","16124","16125","16127","16130","16131","16132","16133","16134","16136","16137","16140","16141","16142","16143","16145","16151","16153","16154","16155","16156","16157","16159","16201","16210","16211","16212","16213","16214","16217","16218","16220","16222","16223","16224","16226","16228","16229","16230","16232","16233","16235","16236","16238","16239","16240","16242","16244","16245","16246","16248","16249","16250","16253","16254","16255","16256","16258","16259","16260","16262","16263","16301","16311","16312","16313","16314","16316","16317","16319","16321","16322","16323","16326","16327","16328","16329","16331","16332","16333","16334","16335","16340","16341","16342","16343","16344","16345","16346","16347","16350","16351","16352","16353","16354","16360","16361","16362","16364","16365","16370","16371","16372","16373","16374","16401","16402","16403","16404","16405","16406","16407","16410","16411","16416","16420","16422","16424","16426","16427","16428","16430","16433","16434","16435","16436","16438","16440","16441","16442","16443","16475","16601","16602","16611","16613","16616","16617","16619","16620","16621","16622","16623","16624","16625","16627","16630","16631","16633","16634","16635","16636","16637","16638","16639","16640","16641","16645","16646","16647","16648","16650","16651","16652","16654","16655","16656","16657","16659","16661","16662","16664","16665","16666","16667","16668","16669","16670","16671","16672","16673","16674","16675","16677","16678","16679","16680","16682","16683","16684","16685","16686","16689","16691","16692","16693","16694","16695","16699","16701","16720","16724","16725","16726","16727","16729","16730","16731","16732","16733","16734","16735","16738","16740","16743","16744","16745","16746","16748","16749","16750","16820","16821","16822","16825","16826","16829","16830","16832","16833","16834","16835","16836","16837","16838","16839","16840","16841","16843","16844","16845","16847","16848","16849","16852","16853","16854","16855","16856","16858","16859","16860","16861","16863","16864","16866","16871","16872","16874","16875","16876","16877","16878","16879","16881","16882","16901","16910","16911","16912","16914","16915","16917","16920","16921","16922","16923","16925","16926","16927","16928","16929","16930","16932","16933","16935","16936","16937","16938","16939","16940","16941","16942","16943","16946","16947","16948","16950","17002","17003","17004","17005","17006","17007","17009","17014","17015","17017","17018","17019","17020","17021","17022","17023","17024","17026","17028","17029","17030","17032","17035","17037","17038","17039","17040","17041","17042","17044","17045","17046","17047","17048","17049","17051","17052","17053","17054","17056","17058","17059","17060","17061","17062","17063","17065","17066","17067","17068","17069","17071","17073","17074","17075","17076","17077","17078","17080","17081","17082","17084","17086","17087","17088","17090","17094","17097","17098","17099","17202","17210","17211","17212","17213","17214","17215","17217","17219","17220","17221","17222","17223","17224","17225","17228","17229","17232","17233","17235","17236","17237","17238","17239","17240","17241","17243","17244","17246","17247","17249","17250","17251","17252","17253","17254","17255","17257","17260","17261","17262","17263","17264","17265","17266","17267","17268","17271","17301","17302","17303","17304","17306","17307","17309","17311","17313","17314","17315","17316","17317","17319","17320","17321","17322","17323","17324","17327","17329","17331","17339","17340","17342","17343","17344","17345","17347","17349","17350","17352","17353","17355","17356","17360","17361","17362","17363","17364","17365","17366","17368","17370","17371","17372","17406","17407","17408","17501","17502","17505","17506","17507","17508","17509","17516","17517","17518","17519","17522","17527","17529","17532","17534","17535","17536","17540","17545","17547","17550","17552","17555","17557","17560","17562","17563","17565","17566","17568","17569","17570","17572","17578","17579","17581","17582","17584","17702","17720","17721","17723","17724","17727","17728","17729","17730","17731","17737","17739","17740","17742","17744","17745","17747","17748","17749","17750","17751","17752","17754","17756","17758","17760","17762","17763","17764","17765","17768","17769","17771","17772","17774","17776","17777","17778","17779","17801","17810","17812","17813","17814","17820","17823","17824","17827","17829","17830","17832","17834","17835","17836","17840","17841","17842","17844","17845","17846","17847","17850","17851","17853","17855","17856","17857","17858","17859","17860","17861","17862","17864","17865","17866","17867","17870","17872","17876","17878","17880","17881","17885","17886","17887","17888","17889","17901","17920","17921","17922","17923","17925","17929","17930","17931","17933","17934","17935","17936","17938","17941","17943","17944","17945","17946","17948","17949","17951","17952","17953","17954","17957","17959","17960","17961","17963","17964","17965","17967","17968","17970","17972","17974","17976","17978","17979","17980","17981","17982","17983","17985","18012","18013","18014","18030","18035","18038","18053","18056","18058","18063","18065","18066","18070","18071","18072","18079","18080","18083","18085","18086","18088","18091","18092","18202","18211","18212","18214","18216","18218","18219","18220","18221","18222","18223","18224","18225","18229","18230","18231","18234","18235","18237","18239","18240","18241","18242","18244","18245","18246","18248","18249","18250","18252","18254","18255","18256","18328","18331","18333","18337","18340","18343","18351","18405","18413","18415","18417","18420","18421","18425","18426","18428","18431","18435","18436","18437","18438","18439","18441","18443","18445","18446","18451","18453","18454","18455","18456","18457","18458","18460","18461","18462","18463","18464","18465","18469","18470","18472","18473","18603","18612","18614","18615","18616","18618","18619","18621","18622","18623","18624","18626","18627","18628","18629","18630","18631","18632","18635","18636","18655","18656","18657","18660","18661","18707","18801","18810","18812","18814","18816","18817","18818","18820","18821","18822","18823","18824","18825","18826","18828","18829","18830","18831","18832","18833","18834","18837","18842","18843","18844","18845","18846","18847","18848","18850","18851","18853","18854","18927","19029","19112","19310","19344","19362","19472","19501","19503","19504","19505","19506","19507","19512","19516","19522","19523","19526","19529","19533","19534","19538","19539","19540","19541","19543","19544","19545","19547","19549","19550","19551","19554","19555","19559","19564","19567","19931","19933","19939","19940","19945","19950","19952","19953","19954","19955","19956","19964","19973","19975","19980","20106","20119","20187","20606","20609","20618","20621","20622","20624","20625","20626","20628","20632","20636","20645","20659","20660","20661","20664","20680","20687","21013","21028","21034","21047","21048","21050","21051","21052","21053","21056","21074","21082","21084","21087","21102","21105","21120","21122","21132","21154","21155","21156","21157","21158","21160","21161","21219","21240","21502","21520","21521","21523","21524","21529","21530","21531","21532","21536","21538","21539","21540","21541","21542","21545","21550","21555","21557","21560","21561","21562","21607","21617","21619","21622","21623","21625","21626","21627","21628","21629","21631","21632","21634","21635","21636","21638","21639","21640","21641","21644","21645","21648","21649","21650","21651","21655","21657","21658","21659","21660","21664","21666","21668","21669","21672","21675","21677","21679","21711","21713","21715","21719","21722","21727","21733","21750","21756","21757","21762","21766","21773","21776","21778","21779","21780","21781","21782","21783","21787","21788","21791","21795","21798","21810","21813","21817","21821","21824","21830","21835","21837","21838","21842","21849","21850","21861","21862","21866","21869","21871","21872","21874","21890","21901","21904","21911","21912","21913","21915","21917","21918","21919","21920","21930","22433","22437","22443","22454","22460","22472","22480","22485","22504","22514","22534","22539","22542","22548","22551","22567","22572","22602","22603","22610","22623","22624","22625","22630","22637","22641","22642","22644","22645","22650","22652","22654","22657","22660","22664","22709","22711","22713","22714","22715","22716","22718","22719","22720","22722","22723","22724","22725","22726","22727","22728","22731","22732","22733","22734","22735","22736","22737","22738","22741","22742","22743","22746","22810","22811","22812","22815","22820","22821","22824","22827","22830","22831","22832","22834","22835","22840","22841","22842","22843","22844","22845","22846","22847","22849","22850","22851","22853","22939","22952","22957","22960","22964","22967","22972","22973","22976","23002","23009","23011","23015","23021","23023","23024","23025","23027","23035","23038","23039","23043","23045","23047","23050","23056","23061","23062","23065","23066","23068","23069","23070","23071","23072","23076","23083","23085","23086","23089","23091","23102","23103","23106","23108","23109","23110","23111","23116","23117","23119","23120","23124","23128","23130","23138","23139","23141","23146","23149","23156","23160","23161","23163","23169","23176","23177","23181","23192","23302","23315","23322","23336","23337","23356","23395","23409","23423","23426","23427","23432","23433","23436","23437","23438","23440","23457","23480","23487","23662","23696","23830","23833","23838","23840","23842","23845","23850","23866","23872","23878","23884","23885","23891","23894","23898","23915","23919","23922","23923","23927","23934","23937","23938","23947","23955","23958","23959","23963","24053","24054","24055","24058","24064","24065","24066","24067","24069","24070","24072","24076","24077","24078","24079","24082","24083","24084","24085","24086","24087","24088","24089","24090","24091","24092","24093","24095","24101","24102","24104","24105","24120","24121","24122","24124","24127","24128","24129","24131","24132","24133","24134","24136","24137","24138","24139","24147","24148","24149","24150","24151","24153","24161","24162","24165","24167","24168","24171","24174","24175","24176","24179","24184","24185","24201","24202","24210","24211","24216","24217","24219","24220","24221","24224","24225","24226","24228","24230","24236","24237","24239","24243","24244","24245","24246","24248","24250","24251","24256","24258","24260","24263","24265","24266","24269","24270","24271","24272","24273","24277","24279","24280","24281","24282","24283","24290","24292","24293","24301","24311","24312","24313","24314","24315","24316","24317","24318","24319","24322","24323","24324","24325","24326","24327","24328","24330","24333","24340","24343","24347","24348","24350","24351","24352","24354","24360","24361","24363","24366","24368","24370","24374","24375","24377","24378","24380","24381","24382","24411","24412","24413","24415","24416","24421","24422","24426","24430","24431","24432","24433","24435","24437","24439","24440","24441","24442","24445","24448","24457","24458","24459","24460","24465","24467","24469","24471","24472","24473","24476","24477","24479","24482","24483","24484","24485","24486","24487","24502","24515","24517","24520","24521","24522","24523","24526","24528","24529","24530","24531","24536","24538","24539","24549","24550","24551","24553","24554","24555","24556","24557","24563","24566","24569","24570","24571","24572","24574","24578","24579","24580","24586","24588","24589","24593","24594","24595","24598","24601","24602","24603","24604","24605","24606","24607","24609","24612","24613","24614","24620","24622","24630","24631","24634","24635","24637","24639","24641","24646","24649","24651","24656","24657","27006","27007","27009","27011","27012","27013","27014","27016","27017","27018","27019","27020","27021","27022","27024","27025","27027","27028","27030","27041","27042","27043","27045","27046","27047","27048","27050","27052","27053","27054","27055","27201","27202","27203","27205","27207","27208","27213","27233","27235","27239","27242","27247","27248","27252","27256","27259","27263","27283","27284","27288","27291","27292","27295","27298","27299","27310","27311","27313","27314","27315","27316","27317","27320","27325","27326","27341","27343","27349","27350","27351","27355","27356","27357","27358","27360","27370","27371","27374","27376","27501","27504","27505","27506","27521","27524","27533","27541","27542","27555","27557","27568","27569","27572","27576","27581","27582","27583","27592","27596","27807","27808","27810","27813","27814","27817","27821","27824","27826","27829","27830","27837","27846","27851","27852","27860","27863","27865","27875","27878","27879","27880","27884","27885","27916","27917","27919","27920","27921","27923","27926","27928","27929","27935","27936","27939","27941","27943","27944","27946","27947","27950","27953","27956","27958","27964","27965","27966","27973","27974","27976","27978","27980","27981","27985","28001","28006","28009","28012","28016","28017","28018","28019","28020","28021","28023","28024","28032","28033","28034","28037","28040","28041","28042","28043","28056","28071","28072","28073","28074","28076","28077","28079","28080","28081","28086","28088","28089","28090","28092","28097","28098","28101","28103","28107","28108","28109","28110","28112","28114","28115","28117","28120","28124","28125","28127","28128","28129","28133","28135","28136","28137","28138","28139","28146","28147","28152","28163","28164","28166","28167","28168","28169","28173","28318","28320","28325","28326","28327","28330","28331","28332","28334","28338","28339","28342","28344","28350","28351","28355","28356","28357","28360","28365","28366","28367","28369","28372","28374","28382","28385","28386","28391","28394","28395","28420","28422","28424","28425","28430","28431","28432","28438","28442","28443","28445","28450","28452","28454","28455","28457","28460","28461","28462","28463","28465","28467","28468","28469","28470","28472","28478","28508","28509","28510","28511","28512","28516","28518","28519","28520","28521","28523","28524","28525","28526","28527","28528","28529","28531","28532","28533","28537","28539","28540","28542","28543","28547","28551","28552","28553","28555","28557","28570","28571","28572","28574","28575","28577","28578","28579","28581","28582","28584","28586","28589","28594","28601","28602","28606","28609","28610","28611","28612","28613","28615","28616","28617","28618","28619","28621","28622","28623","28624","28625","28626","28627","28628","28629","28630","28631","28634","28635","28636","28637","28638","28640","28641","28642","28643","28644","28645","28646","28649","28650","28651","28652","28653","28654","28655","28657","28658","28659","28660","28662","28663","28664","28665","28666","28667","28668","28669","28670","28671","28672","28673","28675","28676","28677","28678","28679","28681","28682","28683","28684","28685","28689","28690","28693","28694","28697","28698","28701","28702","28705","28707","28708","28709","28710","28713","28714","28716","28717","28721","28722","28726","28729","28731","28733","28734","28735","28736","28740","28741","28742","28743","28746","28747","28748","28749","28751","28752","28753","28754","28755","28756","28758","28759","28761","28762","28763","28766","28768","28771","28772","28773","28774","28775","28777","28781","28783","28790","28792","28901","28902","28904","28905","28906","28909","29006","29009","29032","29036","29037","29038","29053","29054","29058","29067","29070","29072","29073","29074","29075","29078","29081","29082","29101","29105","29122","29123","29126","29127","29138","29145","29160","29162","29164","29166","29170","29175","29177","29178","29307","29316","29321","29322","29323","29324","29329","29330","29331","29332","29334","29335","29338","29340","29341","29346","29349","29351","29353","29355","29356","29360","29364","29365","29368","29369","29370","29372","29373","29374","29375","29376","29379","29384","29385","29388","29410","29431","29434","29435","29437","29469","29475","29511","29518","29526","29527","29530","29543","29544","29545","29550","29555","29566","29568","29569","29570","29572","29575","29576","29579","29581","29582","29583","29584","29585","29588","29591","29613","29614","29620","29621","29625","29626","29627","29630","29635","29638","29639","29640","29642","29643","29644","29645","29649","29650","29651","29653","29654","29655","29657","29658","29659","29661","29664","29665","29666","29667","29669","29670","29671","29672","29673","29676","29678","29681","29682","29683","29684","29685","29686","29687","29689","29690","29691","29692","29693","29696","29697","29702","29704","29709","29710","29712","29714","29717","29718","29720","29724","29726","29727","29728","29729","29741","29742","29743","29745","29803","29805","29821","29828","29829","29831","29834","29838","29841","29843","29844","29849","29851","29856","29860","29915","29929","30011","30018","30025","30028","30040","30041","30054","30055","30056","30103","30104","30105","30107","30108","30110","30113","30114","30115","30116","30117","30120","30121","30124","30125","30132","30137","30139","30143","30145","30147","30148","30149","30153","30157","30161","30165","30170","30171","30173","30175","30176","30177","30178","30179","30180","30182","30183","30184","30185","30187","30188","30189","30204","30205","30206","30216","30217","30218","30220","30224","30229","30230","30233","30234","30240","30251","30256","30257","30258","30259","30263","30265","30269","30275","30276","30277","30284","30285","30286","30289","30292","30293","30295","30401","30410","30411","30412","30414","30415","30417","30420","30421","30423","30425","30427","30428","30429","30436","30439","30441","30442","30445","30446","30448","30449","30450","30451","30452","30453","30454","30455","30457","30461","30464","30470","30471","30473","30474","30504","30506","30510","30511","30512","30513","30516","30517","30520","30521","30522","30523","30525","30527","30528","30529","30530","30531","30533","30534","30535","30536","30537","30538","30539","30540","30541","30542","30543","30545","30546","30547","30548","30549","30552","30553","30554","30555","30557","30558","30559","30560","30562","30563","30564","30565","30566","30567","30568","30571","30572","30573","30575","30576","30577","30581","30582","30597","30598","30619","30620","30621","30622","30623","30624","30625","30627","30628","30629","30630","30633","30634","30635","30639","30641","30642","30643","30646","30648","30650","30655","30656","30660","30662","30663","30666","30667","30668","30677","30678","30680","30701","30705","30707","30708","30710","30711","30720","30721","30724","30725","30726","30728","30730","30731","30733","30734","30735","30736","30738","30739","30740","30741","30742","30746","30747","30750","30751","30752","30753","30755","30756","30757","30802","30803","30805","30808","30809","30810","30814","30817","30820","30822","30823","30907","31001","31002","31003","31004","31005","31008","31009","31011","31012","31014","31015","31017","31019","31022","31023","31024","31025","31027","31029","31031","31032","31033","31035","31036","31037","31038","31039","31046","31047","31049","31050","31052","31055","31058","31060","31064","31065","31066","31069","31070","31071","31072","31075","31077","31079","31081","31083","31084","31085","31096","31097","31216","31302","31303","31305","31307","31308","31309","31312","31316","31318","31321","31324","31326","31328","31329","31410","31411","31503","31510","31512","31513","31516","31518","31519","31522","31523","31524","31525","31532","31533","31535","31537","31539","31542","31543","31544","31545","31546","31548","31550","31551","31552","31553","31554","31555","31556","31557","31558","31560","31561","31562","31563","31564","31565","31566","31567","31568","31569","31599","31606","31620","31622","31623","31624","31625","31626","31627","31630","31631","31632","31634","31635","31636","31637","31638","31639","31641","31642","31645","31647","31648","31649","31650","31712","31716","31720","31722","31727","31733","31735","31738","31743","31744","31747","31749","31750","31753","31756","31757","31763","31764","31765","31768","31771","31772","31773","31774","31775","31778","31779","31781","31783","31784","31787","31788","31789","31790","31791","31793","31794","31795","31796","31798","31801","31804","31806","31807","31808","31811","31822","31823","31826","31830","31831","32003","32008","32009","32011","32013","32024","32025","32026","32033","32034","32038","32040","32043","32044","32052","32053","32054","32055","32058","32059","32060","32061","32062","32063","32066","32068","32071","32072","32073","32079","32081","32083","32086","32087","32091","32092","32094","32096","32102","32110","32112","32113","32118","32127","32128","32130","32131","32132","32133","32134","32136","32137","32139","32140","32141","32145","32147","32148","32157","32159","32162","32163","32168","32174","32177","32179","32180","32181","32182","32187","32189","32190","32192","32193","32195","32220","32223","32226","32234","32250","32259","32321","32322","32323","32327","32328","32334","32336","32346","32347","32348","32350","32355","32356","32358","32359","32360","32361","32403","32404","32405","32407","32408","32409","32410","32413","32420","32421","32423","32424","32425","32427","32428","32430","32431","32432","32433","32435","32437","32438","32439","32440","32442","32444","32445","32446","32448","32449","32455","32456","32459","32460","32461","32462","32463","32464","32465","32466","32506","32507","32509","32526","32530","32531","32533","32535","32536","32539","32541","32542","32544","32547","32548","32550","32561","32564","32565","32566","32567","32568","32569","32570","32571","32577","32578","32579","32580","32583","32617","32619","32621","32622","32625","32626","32628","32631","32639","32640","32643","32648","32656","32664","32666","32668","32680","32683","32692","32693","32694","32696","32697","32702","32709","32713","32732","32735","32736","32744","32754","32759","32764","32767","32775","32776","32778","32780","32784","32796","32899","32926","32927","32934","32948","32949","32950","32952","32953","32958","32959","32963","32966","32968","32976","33001","33010","33012","33013","33014","33016","33018","33031","33036","33037","33042","33050","33051","33070","33126","33144","33165","33174","33175","33182","33184","33185","33194","33455","33469","33471","33477","33478","33503","33513","33514","33521","33523","33525","33527","33530","33538","33540","33541","33542","33547","33565","33566","33567","33572","33576","33585","33597","33708","33767","33776","33785","33786","33809","33810","33811","33812","33813","33823","33825","33827","33830","33834","33839","33841","33843","33847","33848","33849","33852","33854","33855","33856","33857","33859","33860","33865","33867","33868","33870","33872","33873","33875","33876","33880","33884","33890","33898","33903","33904","33908","33909","33912","33913","33914","33917","33920","33921","33922","33928","33930","33931","33935","33944","33946","33947","33948","33950","33953","33955","33956","33960","33965","33981","33982","33991","33993","34101","34102","34103","34104","34105","34108","34109","34110","34114","34117","34119","34120","34134","34135","34137","34138","34139","34140","34141","34145","34211","34212","34215","34219","34222","34223","34224","34240","34241","34250","34251","34266","34267","34268","34269","34275","34286","34287","34288","34289","34291","34293","34420","34428","34429","34431","34432","34433","34434","34436","34442","34445","34446","34448","34449","34450","34452","34453","34461","34465","34470","34471","34476","34479","34480","34481","34484","34487","34488","34491","34498","34601","34602","34604","34606","34607","34608","34609","34610","34613","34614","34652","34654","34655","34661","34667","34669","34679","34688","34705","34729","34731","34737","34739","34756","34762","34771","34773","34785","34788","34797","34945","34949","34957","34972","34974","34997","35004","35006","35007","35010","35013","35016","35019","35023","35031","35033","35035","35036","35040","35042","35043","35044","35045","35046","35049","35051","35052","35053","35054","35055","35057","35058","35062","35063","35070","35071","35073","35074","35077","35078","35079","35080","35082","35083","35085","35087","35091","35094","35096","35097","35098","35111","35112","35114","35115","35116","35117","35118","35120","35121","35124","35125","35126","35128","35130","35131","35133","35135","35136","35143","35146","35147","35148","35149","35151","35171","35172","35173","35175","35176","35178","35179","35180","35183","35184","35185","35186","35188","35223","35242","35243","35406","35444","35446","35452","35453","35456","35457","35458","35461","35463","35466","35473","35474","35475","35480","35481","35490","35501","35503","35504","35540","35541","35542","35543","35544","35545","35546","35548","35549","35550","35552","35553","35554","35555","35559","35563","35564","35565","35570","35571","35572","35573","35574","35575","35576","35577","35578","35579","35580","35581","35582","35584","35585","35586","35587","35592","35593","35594","35603","35610","35611","35613","35614","35615","35616","35619","35620","35621","35622","35633","35634","35640","35643","35645","35646","35647","35648","35650","35651","35652","35653","35654","35661","35670","35672","35673","35674","35677","35739","35740","35741","35744","35745","35746","35747","35748","35750","35751","35752","35754","35755","35759","35760","35761","35763","35764","35765","35766","35768","35769","35771","35772","35773","35774","35775","35776","35802","35803","35808","35903","35904","35905","35906","35907","35950","35951","35952","35953","35954","35956","35957","35958","35959","35960","35961","35962","35963","35966","35967","35968","35971","35972","35973","35974","35975","35976","35978","35979","35980","35981","35983","35984","35986","35987","35988","35989","35990","36005","36006","36008","36009","36010","36013","36017","36022","36024","36025","36026","36028","36030","36034","36035","36038","36041","36042","36046","36049","36051","36052","36054","36066","36067","36071","36078","36079","36080","36082","36091","36092","36093","36203","36206","36207","36250","36251","36255","36256","36258","36260","36262","36263","36264","36265","36266","36267","36268","36269","36271","36272","36273","36274","36276","36277","36278","36279","36280","36301","36305","36310","36311","36312","36313","36314","36316","36317","36318","36319","36320","36321","36322","36323","36330","36340","36343","36344","36345","36346","36350","36351","36352","36353","36360","36362","36370","36371","36373","36374","36375","36376","36420","36421","36426","36432","36436","36439","36441","36442","36444","36445","36446","36451","36453","36454","36455","36456","36467","36473","36474","36475","36476","36477","36480","36483","36502","36503","36505","36507","36509","36511","36518","36521","36522","36523","36524","36525","36526","36527","36528","36529","36530","36532","36535","36538","36539","36541","36542","36543","36544","36547","36548","36549","36550","36551","36553","36555","36558","36559","36561","36562","36564","36567","36568","36569","36571","36572","36574","36575","36576","36578","36579","36580","36581","36582","36583","36584","36587","36619","36695","36750","36758","36763","36790","36792","36793","36851","36852","36853","36854","36855","36861","36870","36874","36877","36879","36904","36908","36915","36921","37010","37012","37014","37015","37016","37018","37019","37020","37022","37023","37025","37026","37028","37029","37030","37031","37032","37033","37034","37035","37036","37037","37043","37046","37047","37048","37049","37050","37051","37052","37055","37057","37058","37059","37060","37061","37062","37064","37066","37067","37073","37074","37075","37078","37079","37080","37082","37083","37085","37087","37090","37091","37095","37096","37097","37098","37101","37110","37118","37122","37129","37134","37137","37140","37141","37142","37143","37144","37145","37146","37148","37149","37150","37151","37153","37160","37165","37166","37171","37172","37174","37175","37178","37179","37180","37181","37183","37184","37185","37186","37187","37188","37190","37191","37301","37302","37303","37305","37306","37307","37308","37309","37310","37311","37312","37313","37315","37316","37317","37318","37321","37322","37323","37324","37325","37326","37327","37328","37329","37330","37331","37332","37333","37334","37335","37336","37337","37338","37339","37340","37341","37342","37343","37345","37347","37348","37350","37352","37353","37354","37355","37356","37357","37359","37360","37361","37362","37363","37365","37366","37367","37369","37370","37373","37374","37376","37379","37380","37381","37385","37387","37388","37391","37394","37396","37397","37398","37419","37601","37615","37616","37617","37618","37620","37640","37641","37642","37643","37645","37650","37656","37657","37658","37659","37660","37663","37664","37665","37680","37681","37682","37683","37686","37687","37688","37690","37691","37692","37694","37705","37708","37709","37710","37711","37713","37714","37715","37716","37719","37721","37722","37723","37724","37725","37726","37727","37729","37730","37731","37732","37733","37737","37738","37742","37743","37745","37748","37752","37753","37754","37755","37756","37757","37760","37762","37763","37764","37765","37766","37769","37770","37771","37772","37774","37777","37779","37801","37803","37804","37806","37807","37809","37810","37811","37813","37814","37818","37819","37820","37821","37825","37826","37829","37840","37841","37843","37845","37846","37847","37848","37849","37851","37852","37853","37854","37857","37860","37861","37862","37863","37865","37866","37869","37870","37871","37872","37873","37874","37876","37877","37878","37879","37880","37881","37882","37885","37886","37887","37888","37890","37891","37892","37918","37924","37931","37932","37934","37938","38001","38002","38004","38006","38007","38011","38015","38017","38019","38021","38023","38024","38028","38030","38034","38036","38037","38040","38042","38044","38047","38049","38050","38052","38058","38059","38060","38061","38066","38068","38070","38076","38077","38079","38080","38138","38139","38201","38220","38221","38222","38224","38225","38226","38229","38230","38231","38232","38233","38235","38236","38237","38240","38241","38242","38251","38253","38254","38255","38256","38257","38258","38259","38260","38261","38310","38311","38313","38315","38316","38317","38318","38320","38321","38326","38327","38328","38329","38330","38332","38333","38334","38337","38338","38339","38340","38341","38342","38343","38344","38345","38347","38348","38351","38352","38355","38356","38357","38358","38359","38361","38362","38363","38365","38366","38367","38368","38369","38370","38371","38372","38374","38375","38376","38379","38380","38381","38382","38387","38388","38389","38390","38392","38401","38425","38449","38450","38451","38452","38453","38454","38455","38456","38457","38459","38460","38461","38462","38463","38464","38468","38469","38471","38472","38473","38474","38475","38476","38477","38478","38481","38482","38483","38485","38486","38487","38488","38501","38503","38504","38506","38541","38542","38543","38544","38545","38547","38548","38549","38550","38551","38552","38553","38554","38555","38556","38558","38559","38560","38562","38563","38564","38565","38567","38568","38569","38570","38571","38572","38573","38574","38575","38577","38578","38579","38580","38581","38582","38583","38585","38587","38588","38589","38603","38610","38611","38618","38625","38627","38629","38632","38633","38641","38650","38651","38652","38658","38659","38663","38665","38668","38674","38683","38720","38723","38733","38767","38804","38821","38824","38826","38827","38828","38829","38833","38834","38838","38839","38841","38843","38844","38846","38847","38848","38849","38850","38852","38855","38856","38857","38858","38859","38862","38863","38864","38865","38866","38869","38870","38871","38873","38876","38878","38913","38915","38916","38917","38920","38925","38927","38940","38943","38947","38949","38952","38953","38965","39039","39040","39042","39044","39047","39057","39062","39067","39071","39073","39082","39088","39094","39108","39110","39111","39114","39116","39117","39145","39152","39153","39156","39162","39167","39173","39177","39191","39208","39218","39232","39305","39309","39320","39322","39323","39324","39325","39327","39330","39332","39335","39336","39337","39346","39350","39355","39359","39363","39365","39367","39402","39425","39426","39427","39429","39437","39443","39451","39452","39455","39456","39459","39461","39462","39464","39465","39466","39470","39475","39476","39477","39478","39479","39480","39481","39482","39483","39507","39520","39525","39529","39531","39532","39540","39556","39560","39561","39562","39564","39565","39567","39571","39572","39573","39574","39576","39577","39595","39601","39629","39641","39643","39645","39647","39653","39654","39657","39662","39664","39665","39666","39668","39735","39737","39740","39741","39744","39745","39746","39750","39751","39752","39753","39766","39767","39769","39771","39772","39824","39825","39827","39832","39834","39837","39845","39859","39861","39866","39885","39897","43001","43003","43005","43006","43007","43008","43009","43010","43011","43013","43014","43018","43019","43021","43025","43027","43028","43029","43030","43031","43032","43033","43036","43037","43040","43044","43045","43046","43047","43050","43055","43056","43060","43061","43062","43064","43066","43067","43070","43071","43072","43074","43076","43077","43078","43080","43084","43101","43102","43103","43105","43106","43107","43111","43112","43113","43115","43116","43117","43126","43127","43128","43130","43135","43136","43137","43138","43140","43142","43143","43144","43145","43146","43148","43149","43150","43151","43152","43153","43154","43155","43156","43157","43158","43160","43162","43164","43217","43302","43310","43311","43314","43315","43316","43317","43318","43319","43320","43321","43322","43323","43324","43325","43326","43330","43331","43332","43333","43334","43336","43337","43338","43340","43341","43342","43343","43344","43345","43346","43347","43348","43350","43351","43356","43357","43358","43359","43360","43406","43407","43408","43410","43412","43413","43414","43416","43430","43431","43432","43433","43435","43437","43438","43439","43440","43442","43443","43445","43449","43450","43451","43452","43457","43458","43462","43463","43464","43466","43467","43469","43501","43502","43504","43505","43506","43510","43511","43512","43515","43516","43517","43518","43519","43520","43521","43522","43523","43524","43525","43526","43527","43529","43530","43531","43532","43533","43534","43535","43536","43540","43541","43542","43543","43545","43547","43548","43549","43553","43554","43555","43556","43557","43558","43565","43567","43569","43570","43571","43701","43711","43713","43716","43717","43718","43719","43720","43721","43722","43723","43724","43725","43727","43728","43730","43731","43732","43733","43734","43735","43736","43738","43739","43740","43746","43747","43748","43749","43750","43754","43755","43756","43758","43759","43760","43761","43762","43764","43766","43767","43768","43771","43772","43773","43777","43778","43779","43780","43782","43783","43786","43787","43788","43791","43793","43802","43804","43805","43811","43812","43821","43822","43824","43830","43832","43836","43837","43840","43842","43843","43844","43845","43901","43902","43903","43905","43906","43907","43908","43909","43910","43912","43913","43914","43915","43917","43920","43925","43926","43928","43930","43931","43932","43933","43934","43935","43938","43939","43940","43942","43943","43944","43945","43946","43947","43950","43951","43952","43953","43961","43962","43963","43964","43967","43968","43971","43972","43973","43974","43976","43977","43981","43983","43985","43986","43988","44003","44010","44021","44024","44026","44028","44032","44041","44044","44045","44046","44047","44048","44049","44050","44057","44062","44064","44065","44068","44076","44080","44081","44082","44084","44085","44086","44090","44093","44099","44201","44214","44215","44216","44217","44230","44231","44233","44235","44251","44253","44254","44255","44256","44260","44270","44272","44273","44274","44275","44276","44280","44285","44287","44288","44401","44402","44403","44404","44406","44408","44410","44411","44412","44413","44415","44417","44418","44423","44424","44427","44428","44429","44430","44431","44432","44436","44439","44441","44442","44443","44444","44445","44449","44450","44451","44452","44454","44455","44460","44470","44473","44490","44491","44493","44601","44606","44607","44608","44609","44610","44611","44612","44613","44614","44615","44618","44619","44620","44621","44622","44624","44625","44626","44627","44628","44629","44632","44633","44634","44637","44638","44639","44640","44641","44643","44644","44645","44647","44651","44653","44654","44656","44657","44659","44660","44661","44662","44663","44665","44666","44667","44669","44670","44671","44672","44675","44676","44677","44678","44680","44681","44682","44683","44685","44687","44688","44689","44690","44691","44693","44695","44697","44699","44706","44721","44730","44802","44804","44805","44807","44809","44811","44813","44814","44815","44817","44818","44820","44822","44824","44825","44826","44827","44828","44830","44833","44836","44837","44838","44840","44841","44842","44843","44844","44846","44847","44849","44850","44851","44853","44854","44855","44856","44857","44859","44861","44864","44865","44866","44867","44874","44875","44878","44880","44881","44882","44883","44887","44889","44890","44901","44903","44904","44905","44906","44907","45001","45002","45003","45005","45011","45013","45015","45030","45032","45033","45034","45036","45039","45041","45042","45050","45051","45052","45053","45054","45055","45062","45064","45065","45066","45067","45068","45070","45101","45102","45103","45105","45106","45107","45112","45113","45115","45118","45119","45120","45121","45122","45123","45130","45131","45132","45133","45135","45142","45144","45146","45147","45148","45150","45152","45153","45154","45155","45156","45157","45158","45159","45160","45162","45164","45166","45167","45168","45169","45171","45172","45176","45177","45233","45245","45247","45248","45252","45301","45302","45303","45304","45305","45306","45307","45308","45309","45310","45311","45312","45314","45316","45317","45318","45319","45320","45321","45323","45325","45326","45327","45328","45330","45331","45332","45333","45334","45335","45336","45337","45338","45339","45340","45341","45342","45344","45345","45346","45347","45348","45349","45350","45351","45352","45353","45354","45356","45358","45359","45360","45361","45362","45363","45365","45368","45369","45370","45371","45372","45373","45377","45378","45380","45381","45382","45383","45385","45388","45389","45390","45414","45432","45434","45502","45601","45612","45613","45614","45616","45617","45618","45619","45620","45621","45622","45623","45624","45628","45629","45630","45631","45634","45636","45638","45640","45642","45644","45645","45646","45647","45648","45650","45651","45652","45653","45654","45656","45657","45658","45659","45660","45661","45662","45663","45669","45671","45672","45673","45674","45677","45678","45679","45680","45681","45682","45684","45685","45686","45688","45690","45692","45693","45694","45695","45696","45697","45698","45699","45710","45714","45715","45720","45721","45723","45724","45727","45729","45732","45734","45735","45739","45741","45742","45743","45744","45745","45746","45750","45760","45767","45768","45769","45770","45771","45772","45773","45775","45776","45779","45783","45784","45786","45788","45789","45801","45805","45806","45807","45808","45809","45810","45812","45813","45814","45815","45816","45817","45819","45820","45821","45822","45826","45827","45828","45830","45831","45832","45833","45835","45836","45838","45840","45841","45843","45844","45845","45846","45848","45849","45850","45851","45853","45854","45855","45856","45858","45859","45860","45861","45862","45863","45864","45865","45866","45867","45868","45869","45870","45871","45872","45873","45874","45875","45876","45877","45879","45880","45881","45882","45883","45884","45885","45886","45887","45888","45889","45890","45891","45893","45894","45895","45896","45897","45898","45899","46001","46017","46030","46031","46034","46035","46036","46039","46041","46044","46045","46047","46048","46049","46050","46051","46052","46056","46057","46058","46062","46063","46064","46065","46068","46069","46070","46071","46072","46076","46102","46103","46104","46105","46106","46110","46111","46113","46115","46117","46118","46120","46121","46122","46124","46125","46126","46127","46128","46130","46131","46133","46135","46140","46142","46143","46144","46146","46147","46148","46149","46150","46151","46154","46155","46156","46157","46158","46160","46161","46162","46163","46164","46165","46166","46167","46168","46170","46171","46172","46173","46175","46176","46180","46181","46182","46183","46184","46186","46221","46259","46302","46303","46310","46340","46341","46345","46347","46348","46349","46356","46365","46366","46371","46373","46374","46376","46377","46379","46381","46382","46390","46391","46392","46393","46501","46502","46504","46506","46507","46508","46510","46511","46513","46514","46517","46524","46528","46531","46532","46534","46536","46537","46538","46539","46540","46542","46543","46550","46552","46553","46554","46555","46561","46562","46563","46565","46567","46570","46571","46572","46573","46574","46580","46582","46590","46595","46701","46702","46703","46704","46705","46706","46710","46711","46714","46721","46723","46725","46730","46731","46732","46733","46737","46738","46740","46741","46742","46743","46745","46746","46747","46748","46750","46755","46759","46760","46761","46763","46764","46765","46766","46767","46770","46771","46772","46773","46774","46776","46777","46778","46779","46781","46783","46784","46785","46786","46787","46788","46789","46791","46792","46793","46794","46795","46796","46797","46798","46799","46818","46845","46901","46902","46910","46911","46913","46914","46915","46917","46919","46920","46922","46923","46926","46928","46929","46930","46931","46932","46933","46936","46937","46938","46939","46940","46941","46943","46945","46946","46947","46950","46951","46952","46953","46957","46958","46959","46960","46961","46962","46965","46967","46968","46970","46971","46974","46975","46978","46979","46980","46982","46984","46985","46986","46987","46988","46989","46990","46991","46992","46994","46996","46998","47001","47003","47006","47010","47011","47012","47016","47017","47018","47020","47021","47022","47023","47024","47025","47030","47031","47032","47033","47034","47035","47036","47037","47038","47040","47041","47042","47043","47060","47102","47104","47106","47108","47110","47111","47112","47114","47115","47116","47117","47118","47119","47120","47122","47123","47124","47125","47126","47135","47136","47137","47138","47140","47141","47142","47143","47145","47147","47160","47161","47162","47163","47164","47165","47166","47167","47170","47172","47174","47175","47177","47201","47203","47220","47223","47224","47225","47226","47227","47229","47230","47231","47232","47234","47235","47236","47240","47243","47244","47246","47247","47250","47260","47263","47264","47265","47270","47272","47273","47274","47280","47281","47282","47283","47320","47324","47325","47326","47327","47330","47331","47334","47335","47336","47337","47338","47339","47340","47341","47342","47344","47345","47346","47348","47351","47352","47353","47354","47355","47356","47357","47358","47359","47360","47361","47362","47366","47367","47368","47369","47370","47371","47373","47380","47381","47382","47383","47384","47385","47386","47387","47388","47390","47392","47393","47394","47396","47420","47421","47424","47427","47431","47432","47433","47435","47436","47437","47438","47441","47443","47445","47446","47448","47449","47451","47452","47453","47454","47455","47456","47457","47459","47460","47462","47464","47465","47467","47469","47470","47471","47501","47512","47513","47514","47515","47516","47519","47520","47521","47522","47523","47524","47525","47527","47528","47529","47531","47532","47535","47537","47541","47542","47546","47550","47551","47552","47553","47557","47558","47561","47562","47564","47567","47568","47573","47574","47575","47576","47577","47578","47579","47580","47581","47584","47585","47588","47590","47591","47596","47597","47598","47601","47610","47611","47612","47613","47615","47616","47619","47620","47630","47631","47633","47634","47635","47637","47638","47639","47640","47648","47649","47654","47660","47665","47666","47670","47683","47712","47720","47725","47805","47831","47832","47833","47834","47836","47837","47838","47840","47841","47842","47845","47846","47847","47848","47849","47850","47851","47853","47854","47855","47857","47858","47859","47860","47861","47862","47863","47865","47866","47868","47869","47870","47871","47872","47874","47875","47879","47880","47881","47882","47884","47885","47916","47917","47918","47920","47921","47922","47923","47924","47925","47926","47928","47929","47930","47932","47933","47940","47941","47942","47943","47944","47946","47948","47949","47950","47951","47952","47954","47955","47957","47958","47959","47960","47963","47964","47965","47966","47967","47968","47969","47970","47971","47974","47975","47977","47978","47980","47981","47982","47983","47986","47987","47989","47990","47991","47992","47993","47994","47995","47997","48001","48002","48003","48005","48006","48014","48022","48023","48027","48028","48032","48039","48040","48041","48042","48047","48049","48050","48054","48062","48063","48064","48065","48074","48079","48094","48095","48096","48097","48114","48117","48131","48133","48137","48140","48144","48145","48159","48164","48166","48177","48179","48182","48315","48316","48348","48350","48353","48356","48357","48363","48367","48370","48371","48380","48383","48401","48410","48411","48412","48413","48414","48415","48416","48417","48418","48419","48421","48422","48426","48427","48428","48429","48430","48432","48434","48435","48436","48438","48440","48441","48442","48444","48445","48446","48449","48450","48451","48453","48454","48455","48456","48457","48460","48461","48462","48464","48465","48466","48467","48468","48469","48470","48471","48472","48475","48476","48609","48610","48611","48612","48613","48614","48615","48617","48618","48619","48620","48621","48622","48623","48624","48625","48626","48627","48628","48629","48630","48631","48632","48633","48634","48635","48636","48637","48647","48649","48650","48651","48652","48653","48654","48655","48656","48657","48658","48659","48661","48662","48701","48703","48705","48710","48720","48721","48723","48725","48726","48727","48728","48729","48730","48731","48733","48734","48735","48737","48738","48739","48740","48741","48742","48743","48744","48745","48746","48747","48748","48749","48750","48754","48755","48756","48757","48759","48760","48761","48762","48763","48765","48766","48767","48768","48770","48806","48807","48809","48811","48813","48815","48816","48818","48819","48829","48831","48832","48834","48835","48836","48838","48841","48843","48845","48846","48847","48849","48850","48851","48852","48853","48855","48856","48857","48860","48861","48862","48865","48866","48870","48871","48872","48873","48874","48875","48877","48879","48880","48881","48883","48884","48885","48886","48888","48889","48890","48891","48892","48893","48894","48896","48897","49010","49011","49021","49026","49027","49028","49029","49030","49031","49032","49033","49034","49036","49038","49040","49042","49045","49046","49050","49051","49052","49055","49056","49057","49058","49061","49064","49066","49067","49070","49072","49073","49075","49076","49082","49084","49088","49089","49091","49092","49093","49094","49095","49096","49098","49099","49101","49102","49106","49107","49111","49112","49113","49119","49120","49126","49127","49130","49201","49220","49227","49228","49229","49230","49232","49233","49234","49235","49237","49238","49240","49241","49242","49245","49246","49247","49248","49249","49250","49251","49252","49253","49254","49255","49256","49258","49259","49261","49262","49263","49264","49265","49266","49267","49268","49269","49270","49271","49272","49274","49276","49277","49279","49282","49283","49284","49285","49287","49288","49289","49302","49303","49305","49309","49310","49312","49315","49316","49318","49319","49320","49322","49323","49325","49326","49327","49328","49329","49330","49332","49333","49335","49336","49337","49338","49339","49340","49342","49343","49344","49345","49346","49347","49348","49349","49401","49402","49403","49404","49405","49410","49411","49412","49415","49419","49420","49421","49425","49426","49428","49430","49435","49436","49446","49448","49451","49452","49454","49455","49457","49458","49459","49460","49464","49601","49611","49612","49614","49618","49619","49620","49622","49623","49625","49631","49632","49633","49637","49638","49639","49644","49645","49646","49649","49651","49655","49656","49657","49659","49663","49665","49667","49668","49676","49677","49679","49680","49683","49688","49689","49705","49706","49707","49709","49710","49713","49716","49717","49721","49724","49726","49727","49728","49729","49730","49733","49735","49736","49738","49743","49744","49745","49746","49747","49748","49749","49751","49752","49753","49755","49756","49759","49760","49762","49764","49765","49766","49768","49769","49774","49776","49779","49780","49784","49788","49791","49793","49795","49799","49801","49802","49805","49807","49812","49815","49817","49818","49820","49821","49827","49831","49833","49834","49835","49836","49837","49838","49840","49847","49848","49852","49853","49854","49863","49864","49868","49870","49872","49873","49874","49876","49877","49878","49880","49881","49883","49884","49886","49887","49892","49893","49894","49895","49896","49901","49902","49905","49910","49912","49913","49916","49917","49919","49922","49927","49929","49934","49935","49942","49945","49946","49947","49948","49952","49953","49958","49959","49960","49961","49962","49967","49968","49970","49971","50001","50002","50005","50006","50007","50008","50020","50022","50025","50026","50027","50028","50029","50031","50033","50034","50040","50041","50042","50044","50048","50049","50050","50051","50052","50055","50056","50057","50058","50060","50062","50063","50064","50065","50067","50068","50070","50071","50072","50073","50074","50075","50076","50078","50101","50102","50103","50104","50106","50107","50108","50109","50110","50115","50116","50117","50118","50119","50120","50122","50123","50126","50127","50128","50129","50130","50132","50133","50135","50136","50137","50138","50139","50141","50142","50143","50144","50145","50146","50147","50148","50149","50150","50151","50153","50154","50155","50157","50160","50161","50162","50163","50164","50165","50166","50167","50168","50169","50170","50171","50174","50206","50207","50210","50212","50213","50214","50216","50217","50218","50219","50222","50223","50225","50227","50228","50229","50230","50231","50232","50233","50234","50235","50237","50238","50239","50240","50241","50242","50246","50247","50249","50250","50251","50252","50254","50255","50256","50257","50258","50261","50262","50264","50268","50269","50271","50272","50273","50274","50275","50277","50278","50420","50421","50423","50424","50426","50427","50428","50430","50431","50432","50433","50434","50435","50436","50438","50439","50440","50441","50444","50446","50447","50448","50449","50450","50451","50452","50453","50454","50455","50457","50458","50459","50460","50461","50464","50465","50466","50467","50468","50469","50470","50471","50472","50473","50475","50476","50477","50478","50479","50480","50482","50483","50484","50510","50511","50514","50515","50516","50517","50518","50519","50520","50521","50522","50523","50524","50525","50527","50528","50529","50530","50531","50532","50533","50535","50536","50538","50539","50540","50541","50542","50543","50544","50545","50546","50548","50551","50552","50554","50556","50557","50558","50559","50560","50561","50562","50563","50565","50566","50567","50568","50569","50570","50571","50573","50574","50575","50576","50577","50578","50579","50581","50582","50583","50585","50586","50590","50591","50592","50593","50594","50597","50598","50599","50601","50602","50603","50604","50605","50606","50607","50608","50609","50611","50612","50619","50620","50621","50622","50623","50624","50625","50626","50627","50628","50629","50630","50631","50632","50633","50634","50635","50636","50638","50641","50642","50643","50645","50647","50648","50649","50650","50651","50652","50653","50654","50655","50657","50658","50659","50660","50664","50665","50666","50668","50669","50670","50671","50672","50673","50674","50675","50676","50680","50681","50682","50801","50830","50831","50833","50835","50836","50837","50839","50840","50841","50842","50843","50845","50846","50847","50848","50849","50851","50853","50854","50857","50858","50859","50860","50861","50862","50863","50864","51001","51002","51003","51004","51005","51006","51007","51008","51009","51010","51011","51012","51014","51015","51016","51018","51019","51020","51022","51023","51024","51025","51026","51027","51028","51029","51030","51031","51033","51034","51035","51036","51037","51038","51039","51040","51041","51044","51045","51046","51047","51048","51049","51050","51051","51052","51053","51054","51055","51056","51058","51060","51061","51062","51063","51111","51201","51230","51231","51232","51234","51235","51237","51238","51239","51240","51241","51242","51243","51244","51245","51246","51247","51248","51249","51250","51301","51331","51333","51334","51338","51340","51341","51342","51343","51345","51346","51347","51350","51351","51354","51355","51357","51358","51360","51363","51364","51365","51366","51401","51430","51431","51432","51433","51436","51439","51440","51441","51442","51443","51444","51445","51446","51447","51448","51449","51450","51451","51452","51453","51454","51455","51458","51459","51460","51461","51462","51463","51465","51466","51467","51520","51521","51523","51525","51526","51527","51528","51529","51530","51531","51532","51533","51534","51535","51536","51537","51540","51541","51542","51543","51544","51545","51546","51548","51549","51550","51551","51552","51553","51554","51555","51556","51557","51558","51559","51560","51561","51562","51563","51564","51565","51566","51570","51571","51572","51573","51575","51576","51577","51578","51579","51601","51630","51631","51632","51636","51637","51638","51639","51640","51645","51646","51647","51648","51649","51650","51651","51652","51653","51654","51656","52030","52031","52032","52033","52035","52036","52037","52038","52040","52041","52042","52044","52045","52046","52047","52048","52049","52050","52052","52053","52054","52056","52057","52064","52065","52069","52070","52071","52072","52073","52074","52075","52076","52078","52079","52132","52133","52134","52135","52136","52140","52141","52142","52144","52146","52147","52154","52155","52156","52157","52159","52160","52161","52162","52163","52164","52165","52166","52168","52169","52170","52171","52172","52175","52201","52202","52206","52207","52208","52209","52210","52211","52212","52215","52216","52217","52218","52220","52221","52222","52223","52224","52225","52229","52231","52232","52237","52248","52249","52251","52252","52254","52255","52257","52301","52305","52306","52308","52309","52310","52312","52313","52315","52316","52318","52321","52323","52325","52326","52329","52330","52332","52335","52336","52337","52341","52344","52345","52346","52347","52348","52349","52352","52354","52355","52356","52359","52361","52362","52530","52531","52533","52534","52535","52536","52537","52540","52542","52543","52544","52548","52549","52550","52551","52552","52553","52554","52555","52560","52561","52562","52563","52565","52566","52567","52568","52569","52570","52571","52572","52573","52574","52576","52577","52580","52581","52583","52584","52585","52586","52588","52590","52591","52593","52594","52595","52619","52620","52621","52623","52624","52625","52626","52630","52631","52635","52637","52638","52639","52640","52641","52644","52645","52646","52647","52649","52650","52651","52652","52653","52654","52656","52657","52658","52659","52660","52701","52720","52721","52726","52727","52728","52729","52731","52737","52739","52745","52746","52747","52749","52750","52751","52752","52754","52756","52757","52758","52759","52760","52765","52766","52767","52768","52769","52771","52773","52774","52777","52778","53001","53002","53003","53004","53006","53010","53011","53013","53014","53015","53016","53017","53018","53019","53020","53021","53022","53023","53027","53029","53031","53032","53033","53034","53035","53036","53037","53038","53039","53040","53042","53046","53047","53048","53049","53050","53057","53058","53059","53061","53063","53065","53066","53069","53070","53072","53073","53075","53076","53078","53079","53080","53085","53086","53088","53089","53090","53091","53093","53094","53095","53098","53099","53103","53104","53105","53108","53114","53118","53119","53120","53121","53126","53127","53128","53137","53139","53146","53149","53150","53153","53156","53157","53167","53168","53170","53176","53178","53179","53181","53182","53183","53184","53185","53189","53192","53195","53505","53522","53525","53541","53550","53557","53579","53585","53587","53801","53802","53804","53806","53809","53810","53812","53813","53816","53820","53825","53826","53827","53910","53919","53920","53922","53923","53926","53929","53930","53931","53933","53934","53935","53936","53937","53939","53941","53943","53944","53946","53947","53948","53949","53950","53952","53953","53956","53961","53962","53963","53964","53968","54001","54002","54003","54004","54005","54006","54007","54009","54011","54013","54014","54015","54017","54020","54023","54025","54026","54027","54028","54101","54102","54103","54104","54106","54107","54110","54111","54112","54114","54119","54120","54121","54123","54124","54125","54126","54127","54129","54137","54138","54139","54141","54143","54149","54151","54152","54153","54154","54156","54157","54159","54160","54161","54162","54165","54166","54170","54171","54173","54174","54175","54177","54180","54204","54205","54207","54208","54213","54214","54215","54216","54217","54227","54228","54229","54230","54232","54245","54247","54405","54408","54409","54410","54411","54412","54413","54414","54417","54418","54420","54421","54422","54423","54424","54425","54426","54427","54428","54430","54433","54435","54436","54437","54440","54441","54442","54443","54446","54447","54448","54450","54451","54452","54454","54455","54456","54457","54459","54460","54462","54463","54464","54465","54466","54470","54471","54473","54475","54479","54480","54484","54485","54486","54488","54489","54490","54491","54493","54498","54499","54511","54513","54514","54515","54519","54520","54521","54524","54526","54527","54529","54530","54536","54537","54540","54541","54542","54545","54547","54554","54555","54556","54558","54560","54561","54562","54563","54564","54566","54611","54612","54613","54618","54619","54622","54626","54635","54638","54643","54646","54648","54651","54653","54657","54660","54666","54670","54721","54722","54723","54724","54725","54726","54727","54728","54731","54732","54733","54734","54736","54737","54739","54740","54741","54745","54746","54747","54748","54749","54750","54755","54756","54757","54758","54761","54762","54763","54766","54767","54768","54771","54772","54801","54805","54810","54812","54813","54817","54819","54822","54824","54826","54829","54835","54837","54840","54841","54845","54848","54853","54855","54857","54858","54859","54862","54867","54870","54871","54872","54875","54888","54889","54893","54895","54896","54909","54921","54922","54923","54926","54927","54928","54929","54930","54931","54932","54933","54937","54940","54941","54942","54943","54944","54945","54947","54948","54949","54950","54960","54961","54962","54963","54964","54965","54966","54967","54968","54970","54974","54977","54978","54979","54980","54982","54983","54984","54986","55005","55006","55007","55008","55009","55011","55013","55017","55018","55020","55025","55027","55029","55030","55031","55032","55037","55040","55045","55046","55049","55051","55052","55053","55054","55056","55063","55065","55069","55070","55072","55074","55079","55080","55084","55085","55087","55088","55092","55301","55302","55304","55307","55308","55309","55310","55312","55313","55314","55319","55320","55321","55322","55324","55325","55328","55329","55330","55332","55333","55334","55335","55336","55338","55339","55341","55342","55349","55350","55352","55353","55354","55355","55357","55358","55360","55362","55363","55366","55367","55368","55370","55371","55373","55376","55381","55382","55385","55388","55389","55390","55395","55396","55397","55398","55601","55704","55706","55712","55716","55721","55725","55735","55742","55748","55760","55771","55784","55785","55786","55795","55796","55910","55917","55918","55921","55922","55923","55924","55925","55926","55927","55929","55931","55932","55933","55934","55935","55936","55939","55940","55943","55944","55945","55946","55950","55951","55952","55953","55955","55956","55957","55961","55962","55963","55964","55967","55969","55971","55972","55973","55975","55976","55977","55979","55982","55983","55985","55990","55991","55992","56009","56010","56011","56013","56014","56016","56017","56019","56021","56022","56023","56025","56026","56027","56028","56030","56031","56032","56033","56034","56035","56036","56037","56039","56041","56042","56043","56044","56045","56046","56048","56052","56054","56056","56057","56058","56060","56063","56065","56068","56069","56071","56072","56073","56074","56075","56078","56083","56085","56087","56088","56090","56091","56093","56096","56097","56098","56101","56110","56111","56113","56114","56115","56116","56117","56118","56119","56120","56121","56122","56123","56125","56127","56128","56129","56131","56132","56134","56136","56137","56138","56139","56140","56141","56142","56143","56144","56145","56146","56147","56149","56150","56151","56152","56153","56155","56156","56157","56158","56159","56160","56161","56162","56164","56165","56166","56167","56168","56169","56170","56171","56172","56173","56174","56175","56176","56178","56180","56181","56183","56185","56186","56207","56208","56209","56211","56212","56214","56215","56216","56218","56220","56221","56222","56223","56224","56225","56226","56228","56229","56230","56231","56235","56236","56237","56239","56240","56243","56244","56245","56248","56249","56251","56252","56253","56255","56256","56257","56260","56263","56264","56265","56266","56270","56271","56273","56274","56276","56277","56278","56279","56280","56281","56282","56283","56284","56285","56287","56288","56289","56291","56292","56293","56294","56295","56296","56297","56307","56308","56309","56310","56311","56312","56313","56314","56315","56316","56318","56319","56320","56323","56324","56325","56326","56327","56328","56329","56330","56331","56332","56335","56336","56338","56339","56340","56342","56343","56345","56347","56349","56350","56352","56353","56354","56355","56356","56357","56358","56360","56361","56362","56363","56364","56367","56368","56369","56371","56373","56375","56376","56378","56379","56381","56382","56384","56385","56386","56389","56401","56431","56433","56434","56435","56437","56438","56440","56441","56442","56443","56444","56446","56447","56448","56449","56450","56452","56453","56455","56458","56461","56464","56465","56466","56467","56468","56469","56470","56472","56473","56474","56475","56477","56479","56481","56482","56501","56510","56511","56515","56516","56517","56518","56520","56521","56522","56523","56524","56525","56527","56528","56531","56533","56534","56535","56536","56537","56540","56542","56543","56544","56546","56547","56549","56551","56553","56554","56556","56565","56567","56568","56570","56571","56573","56576","56578","56579","56580","56581","56583","56586","56587","56588","56590","56592","56594","56621","56623","56627","56629","56630","56634","56636","56644","56646","56647","56650","56651","56652","56653","56654","56655","56660","56661","56667","56669","56672","56673","56676","56678","56683","56684","56686","56688","56701","56710","56711","56713","56714","56715","56716","56720","56721","56722","56723","56724","56726","56727","56729","56731","56732","56735","56736","56737","56738","56742","56744","56748","56750","56751","56754","56755","56756","56757","56758","56759","56760","56761","56762","56763","57001","57002","57003","57004","57005","57012","57013","57014","57015","57016","57017","57018","57020","57021","57022","57024","57025","57026","57027","57029","57030","57032","57033","57034","57035","57036","57037","57038","57039","57040","57041","57042","57043","57045","57046","57047","57048","57049","57050","57051","57052","57053","57054","57055","57057","57058","57059","57061","57062","57063","57064","57065","57066","57067","57068","57070","57071","57072","57073","57075","57076","57077","57078","57201","57212","57213","57214","57216","57217","57218","57219","57220","57221","57223","57224","57225","57226","57227","57231","57232","57233","57234","57235","57236","57237","57238","57239","57241","57242","57243","57245","57246","57248","57249","57251","57252","57255","57256","57258","57259","57260","57261","57263","57264","57265","57266","57268","57269","57271","57272","57274","57276","57278","57279","57301","57311","57312","57313","57314","57315","57317","57319","57321","57322","57323","57324","57325","57328","57329","57330","57331","57332","57334","57335","57337","57340","57341","57342","57344","57345","57346","57348","57349","57350","57353","57354","57355","57358","57359","57362","57363","57364","57365","57366","57367","57368","57369","57370","57371","57373","57374","57375","57376","57379","57381","57382","57383","57384","57385","57386","57401","57420","57421","57422","57424","57427","57428","57429","57430","57434","57435","57436","57437","57438","57439","57440","57442","57445","57448","57450","57451","57452","57455","57456","57457","57460","57461","57465","57466","57467","57469","57470","57471","57472","57473","57475","57476","57477","57481","57501","57520","57521","57522","57523","57528","57529","57531","57532","57533","57534","57537","57538","57540","57541","57543","57544","57551","57552","57553","57559","57560","57562","57564","57567","57568","57569","57571","57574","57576","57580","57584","57585","57601","57620","57626","57630","57631","57632","57633","57634","57638","57640","57644","57645","57646","57648","57649","57650","57651","57656","57657","57659","57660","57702","57703","57706","57717","57718","57719","57720","57722","57724","57725","57730","57735","57737","57738","57741","57744","57745","57747","57751","57754","57755","57758","57759","57760","57761","57762","57763","57766","57767","57769","57773","57775","57776","57779","57782","57783","57785","57787","57788","57790","57791","57792","57793","57799","58001","58002","58004","58005","58006","58007","58008","58009","58011","58012","58013","58015","58016","58017","58018","58021","58029","58030","58031","58032","58033","58035","58036","58038","58040","58041","58042","58043","58045","58046","58048","58049","58051","58052","58053","58056","58057","58058","58059","58060","58061","58062","58063","58064","58065","58067","58068","58069","58071","58072","58074","58075","58076","58077","58079","58081","58204","58205","58210","58212","58214","58216","58218","58219","58220","58222","58223","58224","58225","58227","58228","58229","58230","58231","58233","58235","58236","58237","58238","58239","58240","58241","58243","58244","58249","58250","58251","58254","58255","58256","58258","58259","58260","58261","58262","58265","58266","58267","58269","58270","58271","58272","58273","58274","58275","58276","58277","58278","58281","58282","58301","58310","58311","58313","58317","58318","58321","58323","58324","58325","58327","58330","58331","58332","58338","58341","58343","58344","58345","58346","58348","58351","58352","58353","58355","58356","58361","58362","58368","58372","58374","58377","58380","58381","58382","58384","58385","58386","58401","58402","58405","58413","58415","58416","58418","58420","58421","58422","58423","58424","58425","58426","58428","58429","58430","58431","58433","58436","58438","58439","58440","58441","58442","58443","58444","58445","58448","58451","58452","58454","58455","58456","58458","58460","58461","58463","58464","58466","58467","58472","58474","58475","58476","58477","58478","58479","58480","58481","58482","58483","58484","58486","58487","58488","58490","58492","58494","58495","58496","58497","58501","58503","58504","58520","58521","58523","58524","58529","58530","58531","58532","58533","58535","58541","58542","58544","58545","58549","58552","58554","58558","58559","58560","58561","58562","58563","58564","58565","58566","58569","58570","58571","58572","58573","58575","58576","58577","58579","58580","58581","58601","58620","58621","58622","58623","58625","58626","58627","58630","58631","58632","58634","58636","58638","58639","58640","58641","58642","58643","58644","58645","58646","58647","58649","58650","58651","58652","58653","58654","58655","58656","58701","58703","58704","58705","58707","58710","58711","58712","58713","58716","58718","58721","58722","58723","58725","58727","58730","58731","58733","58734","58735","58736","58737","58740","58741","58744","58746","58748","58750","58752","58755","58756","58758","58759","58760","58761","58762","58765","58768","58769","58771","58772","58773","58775","58776","58778","58779","58781","58782","58783","58784","58785","58787","58788","58789","58790","58792","58793","58794","58795","58801","58830","58831","58833","58835","58838","58843","58844","58845","58847","58849","58852","58853","58854","58856","59001","59002","59006","59008","59010","59011","59012","59013","59014","59015","59018","59019","59024","59025","59026","59027","59028","59029","59032","59033","59036","59037","59038","59039","59041","59044","59046","59052","59053","59054","59055","59057","59058","59059","59061","59062","59063","59064","59065","59067","59069","59070","59071","59072","59074","59076","59077","59078","59079","59082","59083","59085","59086","59087","59088","59105","59106","59211","59212","59214","59215","59217","59218","59219","59221","59222","59223","59225","59226","59230","59231","59240","59241","59242","59243","59244","59247","59248","59250","59252","59253","59254","59256","59257","59258","59259","59260","59261","59262","59263","59270","59273","59274","59275","59276","59301","59311","59312","59313","59314","59315","59316","59317","59318","59319","59322","59323","59324","59326","59327","59330","59332","59333","59336","59337","59338","59339","59343","59344","59345","59347","59349","59351","59353","59354","59404","59410","59412","59416","59418","59419","59420","59421","59422","59424","59425","59430","59432","59433","59435","59436","59440","59441","59442","59443","59444","59446","59447","59450","59451","59452","59453","59454","59456","59457","59460","59461","59462","59463","59464","59465","59466","59467","59468","59469","59471","59472","59474","59477","59479","59480","59482","59483","59484","59485","59486","59487","59489","59501","59520","59522","59523","59524","59525","59528","59529","59530","59531","59532","59535","59537","59538","59540","59542","59544","59545","59546","59547","59602","59631","59632","59633","59634","59635","59638","59639","59640","59642","59643","59644","59645","59647","59648","59710","59713","59714","59720","59721","59722","59724","59725","59727","59728","59729","59731","59732","59733","59735","59736","59739","59740","59741","59743","59745","59746","59747","59748","59749","59751","59752","59754","59756","59759","59760","59761","59762","59820","59824","59825","59826","59827","59828","59829","59830","59832","59833","59834","59837","59840","59841","59842","59843","59844","59845","59846","59848","59853","59854","59856","59858","59859","59866","59867","59868","59870","59871","59872","59873","59874","59875","59901","59910","59911","59912","59913","59914","59915","59917","59918","59919","59920","59922","59923","59925","59926","59928","59929","59930","59931","59932","59933","59934","59935","60034","60072","60081","60109","60111","60113","60129","60144","60145","60146","60150","60152","60180","60184","60401","60407","60408","60410","60416","60420","60421","60424","60437","60442","60444","60450","60451","60460","60468","60470","60474","60479","60481","60491","60511","60518","60520","60530","60531","60536","60537","60541","60548","60549","60550","60551","60552","60553","60557","60911","60912","60913","60917","60918","60919","60920","60921","60922","60924","60926","60927","60928","60929","60930","60931","60932","60933","60934","60935","60936","60938","60939","60940","60941","60942","60945","60946","60948","60949","60950","60951","60952","60953","60954","60955","60956","60957","60959","60960","60961","60962","60963","60964","60966","60967","60968","60969","60970","60973","60974","61001","61006","61007","61010","61012","61013","61014","61015","61018","61019","61020","61024","61025","61027","61028","61030","61031","61037","61038","61039","61042","61043","61044","61046","61047","61048","61049","61050","61051","61052","61053","61054","61057","61059","61060","61061","61062","61063","61064","61067","61070","61077","61078","61079","61084","61085","61087","61088","61089","61091","61232","61233","61234","61235","61237","61238","61242","61243","61250","61251","61252","61254","61257","61258","61259","61260","61261","61262","61270","61272","61273","61274","61276","61277","61279","61281","61283","61284","61285","61310","61311","61313","61314","61315","61316","61318","61319","61321","61323","61324","61325","61327","61328","61330","61331","61332","61333","61334","61335","61336","61337","61338","61340","61341","61344","61345","61346","61349","61353","61356","61358","61359","61360","61361","61363","61364","61367","61368","61369","61370","61371","61372","61374","61375","61376","61377","61378","61379","61410","61411","61412","61413","61414","61415","61416","61417","61418","61419","61420","61421","61422","61423","61424","61425","61426","61427","61428","61431","61432","61433","61434","61435","61436","61438","61440","61441","61447","61448","61449","61450","61451","61452","61453","61454","61458","61459","61460","61465","61466","61467","61468","61469","61470","61471","61472","61473","61474","61475","61476","61477","61478","61479","61480","61482","61483","61484","61485","61486","61488","61489","61490","61491","61501","61516","61517","61523","61526","61530","61531","61532","61533","61534","61535","61536","61537","61539","61540","61541","61542","61543","61544","61545","61546","61547","61548","61550","61552","61559","61561","61562","61564","61565","61567","61568","61569","61570","61571","61572","61610","61720","61721","61722","61723","61724","61725","61726","61727","61728","61729","61730","61731","61732","61733","61734","61735","61736","61737","61738","61739","61740","61741","61742","61743","61744","61745","61747","61749","61750","61751","61752","61753","61754","61755","61756","61759","61760","61764","61769","61770","61771","61772","61773","61774","61775","61777","61778","61810","61811","61812","61813","61814","61815","61816","61817","61818","61830","61831","61833","61834","61839","61840","61841","61842","61843","61844","61845","61846","61847","61848","61849","61850","61851","61852","61853","61854","61855","61857","61858","61859","61862","61863","61864","61865","61870","61871","61872","61873","61875","61876","61877","61878","61880","61882","61883","61884","61910","61911","61912","61913","61914","61917","61919","61924","61925","61928","61929","61930","61931","61932","61933","61936","61937","61938","61940","61941","61942","61943","61944","61949","61951","61953","61955","61956","61957","62001","62006","62009","62010","62011","62012","62013","62014","62015","62016","62017","62018","62019","62021","62022","62023","62024","62027","62030","62031","62032","62033","62035","62036","62037","62044","62045","62046","62047","62048","62049","62050","62051","62052","62053","62054","62056","62058","62061","62063","62067","62069","62074","62075","62076","62077","62078","62079","62080","62081","62082","62083","62084","62085","62086","62087","62088","62089","62091","62092","62093","62094","62095","62097","62098","62214","62215","62216","62217","62218","62219","62230","62231","62233","62236","62237","62238","62240","62241","62242","62243","62244","62245","62246","62248","62249","62250","62253","62255","62256","62257","62258","62260","62261","62262","62263","62264","62265","62266","62268","62271","62272","62273","62274","62275","62277","62278","62279","62280","62281","62282","62284","62285","62286","62288","62289","62292","62293","62294","62295","62297","62298","62301","62305","62311","62312","62313","62314","62316","62319","62320","62321","62323","62324","62325","62326","62330","62334","62336","62338","62339","62340","62341","62343","62344","62345","62346","62347","62348","62349","62351","62352","62353","62354","62355","62356","62357","62358","62359","62360","62361","62362","62363","62365","62366","62367","62370","62373","62374","62375","62376","62378","62379","62380","62401","62410","62411","62413","62414","62417","62418","62419","62420","62421","62422","62423","62424","62425","62426","62427","62428","62431","62432","62433","62434","62436","62438","62439","62440","62441","62442","62443","62444","62445","62446","62447","62448","62449","62450","62451","62452","62454","62458","62459","62460","62461","62462","62463","62464","62465","62466","62467","62468","62469","62471","62473","62474","62475","62476","62477","62478","62479","62480","62481","62501","62510","62512","62513","62514","62515","62517","62518","62519","62520","62530","62531","62532","62533","62534","62535","62536","62537","62538","62539","62540","62541","62543","62544","62545","62546","62547","62548","62549","62550","62551","62553","62554","62555","62556","62557","62558","62560","62561","62563","62565","62567","62568","62570","62571","62572","62573","62601","62610","62611","62612","62613","62615","62617","62618","62621","62622","62624","62625","62626","62627","62628","62630","62631","62633","62634","62635","62638","62639","62640","62642","62643","62644","62649","62650","62655","62656","62661","62663","62664","62665","62666","62667","62668","62670","62671","62672","62673","62674","62675","62677","62681","62682","62684","62685","62688","62689","62690","62691","62692","62693","62694","62695","62707","62801","62803","62806","62807","62808","62809","62810","62811","62812","62814","62815","62816","62817","62818","62819","62820","62821","62822","62823","62824","62825","62827","62828","62829","62830","62831","62832","62833","62835","62836","62837","62838","62839","62841","62842","62843","62844","62846","62848","62849","62850","62851","62852","62853","62854","62856","62858","62859","62860","62861","62862","62863","62864","62865","62867","62868","62869","62870","62871","62872","62874","62875","62876","62877","62878","62879","62880","62881","62882","62883","62884","62885","62886","62887","62888","62889","62890","62891","62892","62893","62894","62895","62896","62897","62898","62899","62906","62907","62908","62910","62912","62915","62916","62917","62918","62919","62920","62922","62923","62924","62926","62927","62928","62930","62931","62932","62933","62934","62935","62938","62939","62940","62941","62942","62943","62946","62947","62948","62949","62950","62951","62952","62953","62954","62956","62957","62959","62960","62961","62962","62965","62966","62967","62969","62970","62972","62974","62975","62977","62979","62982","62983","62984","62985","62987","62988","62990","62992","62994","62995","62996","62997","62998","62999","63010","63012","63013","63014","63015","63016","63019","63020","63023","63025","63028","63030","63036","63037","63038","63039","63041","63047","63048","63049","63050","63051","63052","63053","63055","63056","63060","63061","63068","63069","63070","63071","63072","63073","63077","63079","63080","63084","63087","63089","63090","63091","63330","63332","63333","63334","63336","63339","63341","63343","63344","63345","63347","63348","63349","63350","63351","63352","63353","63357","63359","63361","63362","63363","63365","63366","63367","63369","63373","63377","63379","63380","63381","63382","63383","63384","63385","63386","63387","63388","63389","63390","63401","63430","63431","63432","63433","63434","63435","63436","63437","63438","63439","63440","63441","63443","63445","63446","63447","63448","63450","63451","63452","63453","63454","63456","63457","63458","63459","63460","63461","63462","63463","63465","63466","63467","63468","63469","63471","63472","63473","63474","63530","63531","63532","63533","63534","63535","63536","63537","63538","63539","63540","63541","63543","63544","63545","63546","63547","63548","63549","63551","63552","63555","63556","63557","63558","63559","63560","63561","63563","63565","63566","63567","63601","63620","63621","63622","63623","63624","63625","63626","63627","63628","63629","63630","63631","63633","63636","63637","63638","63640","63645","63648","63650","63653","63654","63655","63656","63660","63662","63663","63664","63665","63670","63673","63674","63675","63701","63730","63732","63735","63736","63738","63739","63740","63742","63743","63744","63745","63746","63747","63748","63750","63751","63755","63758","63760","63763","63764","63766","63767","63769","63770","63771","63774","63775","63780","63781","63782","63783","63784","63785","63787","63801","63820","63821","63822","63823","63824","63825","63826","63827","63828","63829","63830","63833","63834","63837","63839","63840","63841","63845","63846","63847","63848","63849","63850","63852","63853","63855","63857","63860","63862","63863","63866","63867","63868","63869","63870","63873","63874","63876","63877","63878","63879","63880","63882","63901","63932","63933","63934","63935","63936","63937","63939","63940","63941","63942","63943","63944","63945","63950","63951","63952","63953","63954","63955","63956","63957","63960","63961","63962","63964","63965","63966","63967","64001","64011","64016","64017","64018","64019","64020","64021","64022","64024","64028","64029","64034","64035","64036","64037","64040","64048","64058","64060","64061","64062","64066","64067","64070","64071","64072","64074","64075","64076","64077","64078","64079","64080","64084","64085","64088","64089","64090","64092","64093","64096","64097","64098","64163","64164","64401","64402","64420","64421","64422","64423","64424","64426","64427","64428","64429","64430","64431","64432","64433","64434","64436","64437","64438","64439","64440","64441","64442","64443","64444","64445","64446","64448","64449","64451","64453","64454","64455","64456","64457","64458","64459","64461","64463","64465","64466","64467","64468","64469","64470","64471","64473","64474","64475","64476","64477","64479","64480","64481","64482","64483","64484","64485","64486","64487","64489","64490","64491","64492","64493","64494","64496","64497","64498","64499","64504","64505","64506","64507","64601","64620","64622","64623","64624","64625","64628","64630","64631","64632","64633","64635","64636","64637","64638","64639","64640","64641","64642","64643","64644","64645","64646","64647","64648","64649","64650","64651","64652","64653","64654","64655","64656","64657","64658","64659","64660","64661","64664","64667","64668","64670","64671","64672","64673","64674","64676","64679","64681","64682","64683","64686","64688","64689","64701","64720","64722","64723","64724","64725","64726","64728","64730","64733","64734","64735","64738","64739","64740","64741","64742","64743","64744","64745","64746","64747","64748","64750","64752","64755","64756","64759","64761","64762","64763","64765","64767","64769","64770","64771","64772","64776","64778","64779","64780","64781","64783","64784","64788","64790","64801","64804","64830","64831","64832","64833","64834","64835","64836","64840","64841","64842","64843","64844","64847","64848","64849","64850","64854","64855","64856","64857","64858","64859","64861","64862","64863","64865","64866","64867","64868","64870","64873","64874","65001","65010","65011","65013","65014","65016","65017","65018","65020","65023","65024","65025","65026","65032","65034","65035","65037","65039","65040","65041","65043","65046","65047","65048","65049","65050","65051","65052","65053","65054","65058","65059","65061","65062","65063","65064","65065","65066","65067","65068","65069","65072","65074","65075","65076","65077","65078","65079","65080","65081","65082","65083","65084","65085","65101","65109","65230","65231","65232","65233","65236","65237","65239","65240","65243","65244","65246","65247","65248","65250","65251","65254","65255","65256","65257","65258","65259","65260","65261","65262","65263","65264","65265","65270","65274","65275","65276","65278","65279","65280","65281","65282","65283","65284","65285","65286","65287","65301","65305","65320","65321","65322","65323","65324","65325","65326","65327","65329","65330","65332","65333","65334","65335","65336","65337","65338","65339","65340","65344","65345","65347","65348","65349","65350","65351","65354","65355","65360","65401","65409","65436","65438","65439","65440","65441","65443","65444","65446","65449","65452","65453","65456","65457","65459","65461","65462","65463","65464","65466","65468","65470","65473","65479","65483","65484","65486","65501","65529","65534","65535","65536","65541","65542","65543","65548","65550","65552","65555","65556","65557","65559","65560","65564","65565","65566","65567","65570","65571","65580","65582","65583","65584","65586","65588","65589","65590","65591","65601","65603","65604","65605","65606","65608","65609","65610","65611","65612","65613","65614","65616","65617","65618","65619","65620","65622","65623","65624","65625","65626","65627","65629","65630","65631","65632","65633","65634","65635","65637","65638","65640","65641","65644","65646","65647","65648","65649","65650","65652","65653","65654","65655","65656","65657","65658","65660","65661","65662","65663","65664","65666","65667","65668","65669","65672","65674","65675","65676","65679","65680","65681","65682","65685","65686","65688","65689","65690","65692","65702","65704","65705","65706","65707","65708","65710","65711","65712","65713","65714","65715","65717","65720","65721","65722","65723","65724","65725","65726","65727","65728","65729","65730","65731","65732","65733","65734","65735","65737","65738","65739","65740","65741","65742","65744","65745","65746","65747","65752","65753","65754","65755","65756","65757","65759","65760","65761","65762","65764","65766","65767","65768","65769","65770","65771","65772","65773","65774","65775","65777","65778","65779","65781","65783","65784","65785","65786","65787","65788","65789","65790","65791","65793","65803","65809","65810","66002","66007","66008","66010","66013","66014","66015","66016","66017","66020","66021","66023","66024","66026","66030","66031","66032","66033","66035","66039","66040","66041","66042","66052","66053","66054","66056","66058","66060","66064","66066","66067","66070","66071","66072","66073","66075","66076","66078","66079","66080","66083","66086","66087","66088","66090","66091","66092","66093","66094","66095","66097","66401","66402","66403","66404","66406","66407","66408","66409","66411","66412","66413","66414","66415","66416","66417","66418","66419","66422","66423","66424","66425","66427","66428","66429","66431","66432","66434","66436","66438","66439","66440","66449","66451","66501","66507","66508","66509","66510","66512","66514","66515","66516","66517","66518","66520","66521","66522","66523","66524","66526","66528","66531","66532","66533","66534","66535","66536","66537","66538","66539","66540","66541","66543","66544","66546","66547","66548","66549","66550","66552","66554","66617","66618","66701","66710","66711","66712","66713","66714","66716","66717","66720","66724","66725","66732","66733","66734","66735","66736","66738","66739","66740","66741","66742","66743","66746","66748","66749","66751","66753","66754","66755","66756","66757","66758","66760","66761","66767","66769","66770","66771","66772","66773","66775","66776","66777","66778","66779","66780","66781","66782","66783","66830","66833","66834","66835","66838","66839","66840","66842","66843","66845","66846","66849","66850","66851","66852","66853","66854","66856","66857","66858","66859","66860","66861","66862","66863","66864","66865","66866","66868","66869","66870","66871","66872","66873","66901","66930","66932","66933","66935","66936","66937","66938","66939","66940","66941","66942","66943","66944","66945","66946","66948","66949","66951","66952","66953","66955","66956","66958","66959","66960","66961","66962","66963","66964","66966","66967","66968","66970","67001","67002","67003","67004","67005","67008","67009","67010","67012","67013","67016","67017","67018","67019","67020","67021","67022","67023","67024","67025","67026","67028","67029","67030","67031","67035","67036","67037","67038","67039","67041","67042","67045","67047","67049","67050","67051","67052","67053","67054","67055","67056","67057","67058","67059","67060","67061","67062","67063","67065","67066","67067","67068","67070","67071","67072","67073","67074","67101","67102","67103","67104","67105","67106","67107","67108","67109","67110","67111","67112","67118","67119","67120","67122","67123","67124","67127","67131","67132","67133","67134","67135","67137","67138","67140","67142","67143","67144","67146","67147","67149","67150","67151","67152","67154","67155","67156","67159","67205","67209","67215","67223","67227","67228","67230","67232","67235","67301","67330","67332","67333","67334","67335","67336","67337","67340","67341","67342","67344","67345","67346","67347","67349","67351","67352","67353","67354","67355","67356","67360","67361","67363","67364","67401","67410","67416","67417","67418","67420","67422","67423","67425","67427","67428","67430","67431","67432","67436","67437","67438","67439","67441","67442","67443","67444","67445","67446","67447","67448","67449","67450","67451","67452","67454","67455","67456","67457","67458","67459","67460","67464","67466","67467","67468","67470","67473","67474","67475","67476","67478","67480","67481","67482","67483","67484","67485","67487","67490","67491","67492","67501","67502","67505","67510","67511","67512","67513","67514","67515","67516","67518","67519","67520","67521","67522","67523","67524","67525","67526","67529","67530","67543","67544","67545","67546","67547","67548","67550","67552","67553","67554","67556","67557","67559","67560","67561","67563","67564","67565","67566","67567","67568","67570","67572","67573","67574","67575","67576","67578","67579","67581","67583","67584","67601","67621","67622","67623","67625","67626","67627","67628","67629","67631","67632","67634","67635","67637","67638","67639","67640","67642","67643","67644","67645","67646","67647","67648","67649","67650","67651","67653","67654","67656","67657","67658","67659","67660","67661","67663","67664","67665","67667","67669","67671","67672","67673","67674","67675","67701","67730","67731","67732","67733","67734","67735","67736","67737","67738","67739","67740","67741","67743","67744","67745","67747","67748","67749","67751","67752","67753","67756","67757","67758","67761","67762","67764","67801","67831","67834","67835","67836","67837","67838","67839","67840","67841","67842","67843","67844","67846","67849","67850","67851","67853","67854","67855","67857","67859","67860","67861","67862","67863","67864","67865","67867","67868","67869","67870","67871","67876","67877","67878","67879","67880","67882","67901","67950","67951","67952","67953","67954","68001","68002","68003","68004","68008","68014","68015","68016","68017","68018","68019","68022","68023","68025","68028","68029","68030","68031","68033","68034","68036","68037","68038","68040","68041","68042","68044","68045","68047","68048","68050","68055","68057","68058","68059","68061","68062","68063","68064","68065","68066","68068","68069","68070","68072","68073","68301","68303","68304","68305","68307","68309","68310","68313","68314","68315","68316","68317","68318","68319","68320","68321","68322","68323","68324","68325","68326","68327","68328","68329","68330","68331","68332","68335","68336","68337","68338","68339","68340","68341","68342","68343","68344","68345","68346","68347","68348","68349","68350","68351","68352","68354","68355","68357","68358","68359","68360","68361","68362","68364","68365","68366","68367","68368","68370","68371","68372","68375","68376","68377","68378","68379","68380","68381","68382","68401","68402","68403","68404","68405","68406","68407","68409","68410","68413","68414","68415","68416","68417","68418","68419","68420","68421","68422","68423","68424","68428","68429","68430","68431","68433","68434","68436","68437","68438","68439","68440","68441","68442","68443","68444","68445","68446","68447","68448","68450","68452","68453","68454","68455","68456","68457","68458","68460","68461","68462","68463","68464","68465","68466","68467","68532","68601","68620","68621","68622","68623","68624","68626","68627","68628","68629","68631","68632","68633","68634","68635","68636","68637","68638","68640","68641","68642","68643","68644","68647","68648","68649","68651","68652","68653","68654","68655","68658","68659","68660","68661","68662","68663","68664","68665","68666","68667","68669","68701","68710","68711","68713","68714","68715","68716","68717","68718","68719","68720","68722","68723","68724","68725","68726","68727","68728","68729","68730","68731","68732","68733","68734","68735","68736","68739","68740","68741","68742","68743","68745","68746","68747","68748","68749","68751","68752","68753","68755","68756","68757","68758","68759","68760","68761","68763","68764","68765","68766","68767","68768","68769","68770","68771","68773","68774","68777","68778","68779","68780","68781","68783","68784","68785","68786","68787","68788","68789","68790","68791","68792","68801","68803","68810","68812","68813","68814","68815","68816","68817","68818","68820","68821","68822","68823","68824","68825","68826","68827","68828","68831","68832","68833","68834","68835","68836","68837","68838","68840","68841","68842","68843","68844","68845","68846","68847","68852","68853","68854","68855","68856","68858","68859","68860","68861","68862","68863","68864","68865","68866","68869","68870","68871","68872","68873","68874","68875","68876","68878","68879","68881","68882","68883","68901","68920","68922","68923","68924","68925","68926","68927","68928","68929","68930","68932","68933","68934","68935","68936","68937","68938","68939","68940","68941","68942","68943","68944","68945","68946","68947","68948","68949","68950","68952","68954","68955","68956","68957","68958","68959","68960","68961","68964","68966","68967","68970","68971","68972","68973","68974","68975","68976","68977","68978","68979","68980","68981","68982","69001","69020","69021","69022","69023","69024","69025","69026","69027","69028","69029","69030","69032","69033","69034","69036","69037","69038","69039","69040","69041","69042","69043","69044","69045","69046","69101","69120","69121","69122","69123","69125","69127","69128","69129","69130","69131","69132","69133","69134","69135","69138","69140","69141","69142","69143","69144","69145","69146","69147","69148","69149","69150","69151","69152","69153","69154","69155","69156","69157","69161","69162","69163","69165","69166","69167","69168","69169","69170","69171","69201","69210","69211","69212","69214","69216","69217","69218","69219","69220","69221","69301","69331","69333","69334","69335","69336","69337","69339","69340","69341","69343","69345","69346","69347","69348","69350","69351","69352","69353","69354","69355","69356","69357","69358","69360","69361","69365","69366","69367","70001","70002","70003","70005","70006","70030","70032","70036","70037","70038","70041","70043","70047","70050","70067","70070","70075","70079","70080","70085","70123","70301","70310","70339","70340","70342","70343","70344","70345","70352","70353","70354","70355","70357","70358","70359","70360","70363","70364","70372","70373","70374","70377","70380","70392","70394","70395","70397","70402","70403","70420","70426","70427","70431","70433","70435","70437","70438","70442","70443","70444","70445","70446","70447","70448","70449","70450","70451","70452","70454","70455","70457","70458","70461","70462","70463","70464","70466","70471","70503","70506","70508","70510","70512","70513","70515","70516","70517","70518","70519","70520","70522","70523","70525","70526","70528","70529","70531","70532","70533","70534","70535","70537","70542","70543","70546","70548","70549","70552","70554","70555","70556","70558","70559","70560","70563","70575","70576","70577","70578","70580","70581","70582","70583","70584","70585","70586","70589","70591","70592","70605","70611","70630","70631","70632","70633","70634","70637","70638","70639","70643","70644","70645","70646","70647","70648","70650","70651","70652","70653","70654","70656","70657","70658","70659","70660","70661","70662","70663","70665","70668","70669","70706","70710","70711","70712","70726","70729","70732","70733","70734","70736","70737","70739","70740","70743","70744","70749","70750","70752","70753","70754","70755","70756","70762","70763","70769","70770","70773","70774","70775","70777","70778","70782","70783","70785","70786","70809","70817","70818","70836","71002","71003","71004","71006","71007","71009","71016","71018","71019","71023","71024","71027","71029","71031","71032","71033","71034","71037","71039","71043","71044","71045","71046","71047","71049","71051","71060","71061","71064","71065","71067","71069","71070","71071","71072","71073","71078","71079","71082","71105","71111","71112","71115","71218","71219","71225","71226","71227","71229","71230","71233","71234","71235","71237","71238","71241","71242","71243","71250","71251","71253","71259","71260","71261","71263","71264","71266","71268","71269","71276","71277","71279","71280","71291","71292","71295","71303","71316","71320","71323","71327","71328","71330","71331","71333","71336","71339","71340","71341","71342","71343","71345","71346","71350","71351","71353","71354","71355","71356","71359","71360","71362","71367","71371","71373","71378","71401","71403","71404","71405","71406","71407","71409","71410","71416","71417","71418","71419","71422","71423","71424","71425","71426","71427","71428","71429","71430","71432","71433","71434","71435","71438","71439","71441","71446","71447","71449","71450","71452","71454","71455","71462","71463","71465","71466","71467","71468","71469","71472","71473","71474","71475","71479","71480","71483","71485","71486","71602","71631","71635","71642","71646","71647","71651","71652","71655","71660","71663","71665","71666","71667","71671","71675","71720","71721","71724","71725","71728","71730","71740","71743","71744","71745","71748","71749","71751","71753","71758","71759","71762","71763","71764","71765","71766","71772","71801","71820","71822","71823","71825","71826","71827","71832","71833","71834","71835","71836","71837","71839","71841","71842","71846","71847","71852","71854","71857","71858","71859","71860","71861","71862","71864","71865","71866","71901","71909","71913","71921","71929","71933","71935","71937","71940","71941","71942","71943","71944","71945","71949","71950","71952","71953","71956","71957","71958","71959","71960","71961","71962","71964","71965","71968","71969","71970","71971","71972","71973","72001","72002","72003","72005","72007","72010","72011","72012","72013","72014","72015","72016","72017","72019","72020","72022","72023","72024","72025","72026","72027","72028","72029","72030","72031","72038","72039","72040","72041","72042","72044","72045","72047","72048","72051","72052","72055","72057","72058","72059","72060","72061","72063","72064","72065","72066","72067","72068","72070","72072","72073","72074","72075","72079","72080","72081","72082","72083","72084","72085","72086","72087","72088","72101","72102","72104","72106","72108","72110","72111","72112","72119","72121","72122","72123","72125","72126","72127","72128","72129","72130","72131","72132","72133","72134","72135","72136","72137","72139","72140","72141","72143","72150","72153","72156","72157","72160","72165","72166","72167","72169","72170","72173","72176","72178","72179","72181","72182","72199","72313","72320","72322","72324","72325","72326","72327","72328","72329","72330","72340","72341","72347","72350","72351","72352","72354","72365","72367","72368","72372","72373","72377","72383","72386","72387","72391","72392","72395","72396","72404","72405","72410","72411","72412","72413","72414","72415","72416","72417","72419","72421","72422","72424","72425","72426","72427","72428","72429","72430","72431","72432","72433","72434","72435","72436","72437","72438","72440","72441","72442","72443","72444","72445","72447","72449","72450","72453","72454","72455","72456","72457","72458","72459","72460","72461","72462","72464","72466","72469","72470","72471","72472","72473","72476","72478","72479","72482","72501","72512","72513","72515","72517","72519","72520","72521","72522","72523","72524","72526","72527","72528","72529","72530","72531","72532","72533","72534","72536","72537","72538","72539","72540","72542","72543","72544","72546","72550","72553","72554","72555","72556","72560","72561","72562","72564","72565","72566","72567","72568","72569","72571","72572","72573","72576","72577","72578","72579","72581","72583","72584","72585","72587","72601","72611","72615","72616","72617","72619","72623","72624","72626","72628","72629","72630","72633","72634","72635","72636","72638","72639","72640","72641","72642","72644","72645","72648","72650","72651","72653","72655","72658","72660","72661","72662","72663","72666","72668","72669","72670","72672","72675","72677","72679","72680","72682","72683","72685","72686","72687","72714","72715","72717","72718","72719","72721","72722","72727","72729","72730","72732","72734","72736","72738","72739","72740","72742","72744","72745","72747","72749","72751","72752","72753","72760","72761","72762","72768","72769","72773","72774","72776","72801","72802","72821","72823","72824","72826","72827","72828","72829","72830","72832","72833","72834","72835","72837","72838","72839","72840","72841","72842","72843","72845","72846","72847","72851","72852","72853","72854","72855","72856","72857","72858","72860","72863","72865","72903","72905","72908","72916","72921","72923","72926","72927","72928","72930","72932","72933","72934","72935","72936","72937","72938","72940","72941","72943","72944","72945","72946","72947","72948","72949","72950","72951","72952","72955","72956","72958","72959","73001","73002","73004","73006","73007","73008","73009","73010","73011","73012","73013","73014","73015","73016","73017","73018","73020","73021","73022","73024","73025","73026","73027","73028","73029","73030","73031","73032","73033","73034","73036","73038","73040","73041","73042","73043","73044","73045","73047","73048","73049","73051","73052","73053","73054","73055","73056","73057","73058","73059","73061","73062","73063","73064","73065","73066","73067","73068","73073","73074","73075","73077","73078","73079","73080","73082","73086","73089","73090","73092","73093","73095","73096","73097","73098","73099","73128","73150","73151","73160","73165","73169","73170","73173","73179","73401","73425","73430","73432","73433","73434","73435","73436","73437","73438","73439","73440","73441","73442","73443","73444","73446","73447","73448","73449","73450","73453","73455","73456","73458","73459","73460","73461","73463","73481","73487","73488","73491","73503","73520","73521","73523","73526","73527","73528","73529","73530","73531","73532","73533","73537","73538","73539","73540","73541","73542","73543","73544","73546","73547","73548","73549","73550","73551","73552","73553","73554","73555","73556","73557","73559","73560","73562","73564","73565","73566","73567","73568","73569","73570","73571","73572","73573","73601","73620","73622","73624","73625","73626","73627","73628","73632","73638","73639","73641","73642","73644","73645","73646","73647","73650","73651","73654","73655","73658","73659","73660","73661","73662","73663","73664","73666","73667","73668","73669","73673","73701","73703","73705","73716","73717","73718","73719","73720","73722","73724","73726","73727","73728","73729","73730","73731","73733","73734","73735","73736","73737","73738","73739","73741","73742","73743","73744","73746","73747","73749","73750","73753","73754","73755","73756","73757","73758","73759","73760","73761","73762","73763","73764","73766","73768","73770","73771","73772","73773","73801","73832","73834","73835","73838","73840","73841","73842","73843","73844","73848","73851","73852","73853","73855","73857","73858","73859","73860","73901","73931","73932","73933","73937","73938","73939","73942","73944","73945","73946","73947","73949","73950","73951","73960","74001","74002","74003","74006","74008","74010","74011","74012","74014","74015","74016","74017","74019","74020","74021","74022","74023","74026","74027","74028","74029","74030","74032","74033","74034","74035","74036","74037","74038","74039","74041","74042","74044","74045","74046","74047","74048","74050","74051","74052","74053","74054","74055","74056","74058","74059","74060","74061","74062","74063","74066","74068","74070","74071","74072","74073","74079","74080","74081","74082","74083","74084","74085","74107","74108","74116","74131","74132","74137","74171","74301","74330","74331","74332","74333","74337","74338","74339","74340","74342","74343","74344","74346","74347","74349","74350","74352","74354","74358","74359","74360","74361","74363","74364","74365","74366","74367","74368","74369","74370","74403","74421","74422","74423","74425","74426","74427","74428","74429","74430","74431","74432","74434","74435","74436","74437","74438","74441","74442","74445","74446","74447","74450","74451","74452","74454","74455","74456","74457","74458","74459","74460","74462","74467","74468","74469","74470","74471","74472","74477","74501","74521","74522","74523","74525","74528","74530","74531","74533","74534","74535","74536","74538","74540","74543","74546","74547","74549","74552","74553","74554","74555","74556","74557","74558","74560","74561","74562","74563","74565","74567","74569","74570","74571","74572","74574","74576","74577","74578","74601","74604","74630","74631","74632","74633","74636","74637","74640","74641","74643","74644","74646","74647","74650","74651","74652","74653","74701","74720","74721","74722","74723","74724","74726","74727","74728","74729","74730","74731","74733","74734","74735","74736","74737","74738","74740","74741","74743","74745","74747","74748","74750","74753","74754","74755","74756","74759","74760","74761","74764","74766","74801","74804","74820","74824","74825","74826","74827","74830","74831","74832","74833","74834","74836","74837","74839","74840","74842","74843","74844","74845","74848","74849","74850","74851","74852","74854","74855","74856","74857","74859","74860","74864","74865","74866","74867","74868","74869","74871","74872","74873","74875","74878","74880","74881","74883","74884","74901","74902","74930","74931","74932","74935","74936","74937","74939","74940","74941","74942","74943","74944","74945","74946","74947","74948","74949","74951","74953","74954","74955","74956","74957","74959","74960","74962","74963","74964","74965","74966","75009","75020","75021","75032","75058","75065","75076","75078","75087","75090","75092","75101","75102","75103","75105","75109","75110","75114","75117","75119","75124","75127","75132","75135","75140","75142","75143","75144","75147","75148","75152","75153","75155","75156","75157","75158","75160","75161","75163","75164","75165","75166","75167","75169","75173","75182","75189","75225","75401","75402","75407","75409","75410","75411","75412","75413","75414","75415","75416","75417","75418","75420","75421","75422","75423","75424","75426","75429","75431","75432","75433","75434","75435","75436","75437","75438","75439","75440","75441","75442","75446","75447","75448","75449","75450","75451","75452","75453","75454","75455","75457","75459","75460","75462","75468","75469","75470","75471","75472","75473","75474","75475","75476","75477","75478","75479","75480","75481","75482","75486","75487","75488","75489","75490","75491","75492","75493","75494","75495","75496","75497","75501","75503","75550","75551","75554","75555","75556","75558","75559","75560","75561","75562","75563","75564","75565","75566","75567","75568","75569","75570","75571","75572","75573","75574","75601","75604","75605","75630","75631","75633","75638","75639","75640","75641","75642","75643","75644","75645","75647","75650","75651","75652","75654","75656","75657","75658","75659","75661","75662","75667","75668","75669","75671","75672","75680","75681","75682","75683","75684","75686","75687","75689","75691","75692","75693","75694","75701","75703","75704","75706","75707","75708","75750","75751","75752","75754","75755","75756","75757","75758","75759","75760","75762","75763","75764","75765","75766","75770","75771","75773","75778","75779","75780","75782","75783","75784","75785","75788","75789","75790","75791","75792","75801","75803","75831","75833","75835","75838","75839","75840","75844","75845","75846","75847","75848","75849","75850","75851","75852","75853","75855","75856","75858","75859","75860","75861","75862","75865","75884","75886","75901","75904","75925","75926","75928","75929","75930","75931","75932","75933","75934","75935","75936","75937","75938","75939","75941","75942","75943","75944","75946","75948","75949","75951","75954","75956","75959","75960","75961","75964","75965","75966","75968","75969","75972","75973","75974","75975","75976","75977","75979","75980","76008","76009","76020","76023","76028","76031","76033","76034","76035","76041","76043","76044","76048","76049","76050","76052","76054","76055","76058","76059","76060","76061","76064","76065","76066","76067","76070","76071","76073","76077","76078","76082","76084","76085","76086","76087","76088","76092","76093","76108","76126","76127","76135","76148","76179","76180","76182","76225","76226","76228","76230","76233","76234","76238","76239","76240","76241","76245","76247","76248","76249","76250","76251","76252","76253","76255","76258","76259","76261","76262","76263","76264","76265","76266","76267","76268","76270","76271","76272","76273","76302","76305","76308","76309","76310","76351","76354","76357","76360","76363","76364","76365","76366","76367","76370","76371","76372","76373","76374","76377","76379","76380","76384","76388","76389","76401","76402","76424","76426","76427","76429","76430","76431","76432","76433","76435","76436","76437","76439","76442","76443","76444","76445","76446","76448","76449","76450","76452","76453","76454","76455","76457","76458","76459","76460","76462","76463","76464","76466","76469","76470","76471","76472","76474","76475","76476","76481","76483","76484","76486","76487","76490","76491","76502","76511","76513","76518","76519","76520","76523","76524","76525","76527","76528","76530","76531","76534","76537","76538","76539","76550","76554","76556","76557","76559","76561","76565","76566","76567","76569","76570","76571","76573","76577","76578","76579","76596","76597","76598","76599","76621","76622","76623","76624","76626","76627","76628","76629","76630","76631","76632","76633","76634","76635","76636","76637","76638","76639","76640","76641","76642","76643","76645","76648","76649","76650","76651","76652","76653","76654","76655","76656","76657","76660","76664","76665","76666","76667","76670","76671","76673","76676","76678","76679","76680","76681","76682","76685","76686","76687","76689","76690","76691","76692","76693","76712","76801","76802","76820","76821","76823","76824","76825","76827","76828","76831","76832","76834","76836","76837","76841","76842","76844","76845","76848","76849","76852","76853","76854","76856","76857","76858","76859","76861","76862","76864","76865","76866","76869","76870","76871","76872","76873","76874","76875","76877","76878","76880","76882","76884","76885","76887","76888","76890","76901","76902","76903","76904","76905","76908","76909","76930","76932","76933","76934","76935","76936","76937","76939","76940","76941","76943","76945","76950","76951","76953","76955","76957","76958","77301","77302","77303","77304","77306","77316","77318","77320","77326","77327","77328","77331","77334","77335","77336","77339","77340","77345","77350","77351","77354","77355","77356","77357","77358","77359","77360","77362","77363","77364","77365","77367","77368","77369","77371","77372","77374","77375","77376","77377","77378","77379","77381","77382","77384","77385","77386","77389","77412","77414","77415","77418","77419","77420","77422","77423","77426","77428","77429","77430","77431","77435","77437","77440","77441","77442","77444","77447","77453","77454","77455","77456","77457","77458","77460","77461","77464","77465","77466","77467","77468","77470","77473","77474","77475","77476","77480","77481","77482","77483","77484","77485","77486","77488","77505","77507","77510","77511","77514","77515","77517","77518","77519","77523","77531","77532","77533","77534","77535","77536","77538","77539","77541","77546","77560","77561","77562","77563","77564","77565","77566","77571","77573","77575","77577","77580","77581","77585","77586","77597","77611","77612","77613","77614","77615","77616","77617","77619","77622","77623","77624","77625","77627","77629","77630","77632","77650","77651","77655","77656","77657","77659","77660","77661","77662","77663","77664","77665","77802","77808","77830","77831","77833","77835","77836","77845","77852","77853","77855","77856","77857","77861","77863","77864","77865","77866","77868","77871","77872","77873","77875","77876","77878","77879","77880","77882","77904","77905","77950","77954","77957","77960","77961","77962","77963","77964","77968","77969","77970","77971","77973","77974","77975","77976","77978","77979","77982","77983","77984","77986","77987","77988","77990","77991","77993","77994","77995","78003","78004","78005","78006","78007","78008","78009","78010","78011","78012","78013","78015","78016","78021","78022","78024","78025","78026","78027","78028","78029","78039","78050","78052","78055","78056","78057","78058","78059","78062","78063","78064","78066","78070","78071","78072","78074","78075","78101","78102","78104","78107","78111","78113","78114","78116","78117","78118","78119","78121","78122","78123","78124","78125","78130","78132","78133","78140","78141","78142","78143","78144","78145","78146","78147","78151","78152","78155","78159","78160","78161","78162","78163","78164","78260","78263","78266","78336","78338","78340","78347","78357","78358","78362","78372","78373","78374","78377","78379","78382","78383","78385","78389","78390","78391","78393","78402","78410","78418","78419","78563","78598","78605","78606","78607","78608","78609","78611","78614","78615","78618","78623","78624","78628","78629","78631","78632","78633","78635","78636","78638","78639","78642","78643","78645","78648","78650","78654","78657","78658","78659","78662","78663","78669","78670","78671","78672","78674","78675","78677","78828","78832","78833","78837","78838","78841","78842","78843","78850","78851","78861","78870","78871","78873","78877","78879","78880","78881","78883","78884","78885","78886","78931","78932","78933","78934","78935","78938","78940","78941","78942","78943","78944","78945","78946","78947","78948","78949","78950","78951","78953","78954","78956","78957","78959","78962","78963","79001","79002","79003","79005","79007","79008","79009","79010","79011","79012","79014","79015","79016","79018","79019","79021","79022","79024","79025","79027","79029","79031","79032","79033","79034","79035","79036","79039","79040","79041","79042","79043","79044","79045","79046","79051","79052","79053","79054","79056","79057","79058","79059","79061","79062","79063","79064","79065","79066","79068","79070","79072","79073","79078","79079","79080","79081","79082","79083","79084","79085","79086","79087","79088","79091","79092","79093","79094","79095","79096","79097","79098","79101","79102","79103","79106","79108","79109","79110","79111","79118","79119","79121","79124","79201","79220","79223","79225","79226","79227","79229","79230","79231","79233","79234","79235","79236","79237","79239","79240","79241","79243","79244","79245","79247","79248","79250","79251","79252","79255","79256","79257","79258","79259","79261","79311","79312","79313","79314","79316","79322","79323","79324","79325","79326","79329","79330","79331","79336","79339","79342","79343","79344","79345","79346","79347","79350","79351","79353","79355","79356","79357","79358","79359","79360","79363","79364","79366","79367","79369","79370","79371","79372","79373","79376","79377","79378","79379","79380","79381","79382","79383","79407","79413","79416","79423","79424","79501","79502","79503","79504","79505","79506","79508","79510","79511","79512","79517","79518","79519","79520","79521","79525","79526","79527","79528","79529","79530","79532","79533","79534","79535","79536","79537","79538","79539","79540","79541","79543","79544","79545","79546","79547","79548","79549","79553","79556","79560","79561","79562","79563","79565","79566","79567","79601","79602","79603","79605","79606","79699","79701","79703","79705","79706","79707","79713","79714","79718","79720","79721","79730","79731","79733","79734","79735","79738","79739","79741","79742","79743","79744","79745","79748","79749","79752","79754","79755","79756","79758","79759","79761","79762","79763","79764","79765","79766","79769","79770","79772","79776","79777","79778","79781","79782","79783","79785","79788","79789","79837","79847","79848","79851","80101","80102","80103","80104","80105","80106","80107","80116","80117","80118","80132","80135","80136","80137","80430","80434","80448","80449","80456","80459","80463","80473","80475","80479","80480","80483","80534","80542","80543","80546","80550","80610","80611","80612","80615","80622","80623","80624","80642","80643","80644","80645","80646","80648","80649","80650","80651","80652","80653","80654","80701","80705","80720","80721","80722","80723","80726","80727","80728","80729","80731","80732","80733","80734","80735","80736","80737","80740","80741","80742","80743","80744","80745","80746","80747","80749","80750","80751","80754","80755","80757","80758","80759","808 Entertainmentntertainment","Arts & Entertainment","Arts And Entertainment","At the Movies Blog","Auto","Baby & Kids","CW Entertainment","California Cooking","California Cooking podcast","Camping & Outdoors","Casino News","Christmas Cookies","College During COVID-19","Columbus Housing Market","Cookin Louisiane","Cooking","Cooking Tips","Cooking Today","Cooking with Chef Nino","Cooking with Kyle","Cooking with Olivia","Dean Cooks","Dean Richards’ Entertainment Report","Dining","ENTERTAINMENT","Eating Local in the CSRA","Economic and Housing Update","Education","Education Essentials","Education Matters","Education News","Educator of the Week","Entertainment - Hello Iowa","Entertainment News","Entertainment and Music","Excellent Educators","FOX8 Foodie","Financial Expert","Financial Fitness","Financial Services","Firekeepers Casino","Food","Food & Drink","Food And Drink","Food and Cooking","Food and Drink","Food with LETN","Foodie Favorites","Foodie Finds","Foodie Friday","Fox Food","HEALTH","Health Beats","Health Check","Health Hacks","Health Smart","Health Tips","HealthBeat","Healthbeat","Healthcast","Healthwatch","Healthy Body","Healthy Eats","Healthy U","Healthy You","Healthy vibez","High School","Higher education","Holiday Shopping","Home & Garden","Home And Garden","Home Furnishing","Home Hacks","Home Improvement","Home Solutions","Home Sweet Home","Home and Family","HomeImprovementPros","Homelife","Homeschooling","Housing","Housing & Furniture","Housing and Real Estate","Insurance","Jobs, Money & Travel","Let\'s Cook El Paso","Lets Get Cooking","Local Entertainment","MUSIC","Money & Investing","Movie Reviews","Movies","Mr. Food","Music","Music Lounge","My Wellness Network","PETS","Personal Finance","Pet Adoption","Pet Connection","Pet Connection Tips","Pet Of The Week","Pet Saver","Pet of the Day","Pet of the Week","Pet of the week","Pets & Wildlife","Pets and Animals","Petsavers","Quick Bites","Real Estate","Real Estate Minute","Real Estate Redefined","RealEstatePros","Restaurant Directory","Restaurant Ratings","Restaurant Report","Restaurant Report Card","Restaurant Reviews","Restaurant Road Trip","Restaurant Week Hawaii","Restaurants","Retail","Saving Money","Saving You Money","School Closings","School Closings & Delays","School Closures","School Watch","Schools","Seafood & Vegetarian","Shopping","Small Travel Bags","State of Education","Stay Well","TRAVEL","TV & Video","TV Guide","TV Schedule","Tim\'s Travels","Tools","Travel Essentials","Travel Girl","Travel News","Travel Smart","Travel Tuesdays","Troy\'s Terrific Travels","U.S. & World Entertainment","Utah Housing Crunch","Wellness","Wellness & Nutrition","Wellness Network","Wellness Wednesday","Zen Wellness","category","http://m.facebook.com","https://lm.facebook.com","https://t.co","https://thehill.com/business-a-lobbying","https://thehill.com/homenews/campaign","https://thehill.com/homenews/state-watch","https://thehill.com/news","https://thehill.com/opinion/technology","https://thehill.com/policy/healthcare","https://thehill.com/policy/technology","https://www.facebook.com","lottery","restaurants","school"],c=[["content","nlpCategories2"],["commerce","productCategory"],["content","categoryList"],["content","nlpCategories1"],["client","referrer"],["content","nlpSentimentScore"],["client","url"],["segment_number"],["client","domain"],["client","user_agent"],["content","pageType"],["geo_info","postal_code"],["commerce","productSubcategory"],["content","nlpCategories3"],["geo_info","province"],["aggregations","PageviewEngagement","engaged_time"],["isp_info","isp"],["isp_info","organization"]],s=[],u=[i.os(i.cx,2,[26020,26074,26087,26134,26135,26133,26136,26137,26176,26043,26141,26075,26036,26039,26037,26038,26035]),i.o([i.y(1,13),i.os(i.w,0,[7789,7790,7788,7787])]),i.os(i.w,0,[46,5]),i.os(i.s,11,[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1eeeeee3,6001,6002,6003,6004,6005,6006,6007,6008,6009,6010,6011,6012,6013,6014,6015,6016,6017,6018,6019,6020,6021,6022,6023,6024,6025,6026,6027,6028,6029,6030,6031,6032,6033,6034,6035,6036,6037,6038,6039,6040,6041,6042,6043,6044,6045,6046,6047,6048,6049,6050,6051,6052,6053,6054,6055,6056,6057,6058,6059,6060,6061,6062,6063,6064,6065,6066,6067,6068,6069,6070,6071,6072,6073,6074,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084,6085,6086,6087,6088,6089,6090,6091,6092,6093,6094,6095,6096,6097,6098,6099,6100,6101,6102,6103,6104,6105,6106,6107,6108,6109,6110,6111,6112,6113,6114,6115,6116,6117,6118,6119,6120,6121,6122,6123,6124,6125,6126,6127,6128,6129,6130,6131,6132,6133,6134,6135,6136,6137,6138,6139,6140,6141,6142,6143,6144,6145,6146,6147,6148,6149,6150,6151,6152,6153,6154,6155,6156,6157,6158,6159,6160,6161,6162,6163,6164,6165,6166,6167,6168,6169,6170,6171,6172,6173,6174,6175,6176,6177,6178,6179,6180,6181,6182,6183,6184,6185,6186,6187,6188,6189,6190,6191,6192,6193,6194,6195,6196,6197,6198,6199,6200,6201,6202,6203,6204,6205,6206,6207,6208,6209,6210,6211,6212,6213,6214,6215,6216,6217,6218,6219,6220,6221,6222,6223,6224,6225,6226,6227,6228,6229,6230,6231,6232,6233,6234,6235,6236,6237,6238,6239,6240,6241,6242,6243,6244,6245,6246,6247,6248,6249,6250,6251,6252,6253,6254,6255,6256,6257,6258,6259,6260,6261,6262,6263,6264,6265,6266,6267,6268,6269,6270,6271,6272,6273,6274,6275,6276,6277,6278,6279,6280,6281,6282,6283,6284,6285,6286,6287,6288,6289,6290,6291,6292,6293,6294,6295,6296,6297,6298,6299,6300,6301,6302,6303,6304,6305,6306,6307,6308,6309,6310,6311,6312,6313,6314,6315,6316,6317,6318,6319,6320,6321,6322,6323,6324,6325,6326,6327,6328,6329,6330,6331,6332,6333,6334,6335,6336,6337,6338,6339,6340,6341,6342,6343,6344,6345,6346,6347,6348,6349,6350,6351,6352,6353,6354,6355,6356,6357,6358,6359,6360,6361,6362,6363,6364,6365,6366,6367,6368,6369,6370,6371,6372,6373,6374,6375,6376,6377,6378,6379,6380,6381,6382,6383,6384,6385,6386,6387,6388,6389,6390,6391,6392,6393,6394,6395,6396,6397,6398,6399,6400,6401,6402,6403,6404,6405,6406,6407,6408,6409,6410,6411,6412,6413,6414,6415,6416,6417,6418,6419,6420,6421,6422,6423,6424,6425,6426,6427,6428,6429,6430,6431,6432,6433,6434,6435,6436,6437,6438,6439,6440,6441,6442,6443,6444,6445,6446,6447,6448,6449,6450,6451,6452,6453,6454,6455,6456,6457,6458,6459,6460,6461,6462,6463,6464,6465,6466,6467,6468,6469,6470,6471,6472,6473,6474,6475,6476,6477,6478,6479,6480,6481,6482,6483,6484,6485,6486,6487,6488,6489,6490,6491,6492,6493,6494,6495,6496,6497,6498,6499,6500,6501,6502,6503,6504,6505,6506,6507,6508,6509,6510,6511,6512,6513,6514,6515,6516,6517,6518,6519,6520,6521,6522,6523,6524,6525,6526,6527,6528,6529,6530,6531,6532,6533,6534,6535,6536,6537,6538,6539,6540,6541,6542,6543,6544,6545,6546,6547,6548,6549,6550,6551,6552,6553,6554,6555,6556,6557,6558,6559,6560,6561,6562,6563,6564,6565,6566,6567,6568,6569,6570,6571,6572,6573,6574,6575,6576,6577,6578,6579,6580,6581,6582,6583,6584,6585,6586,6587,6588,6589,6590,6591,6592,6593,6594,6595,6596,6597,6598,6599,6600,6601,6602,6603,6604,6605,6606,6607,6608,6609,6610,6611,6612,6613,6614,6615,6616,6617,6618,6619,6620,6621,6622,6623,6624,6625,6626,6627,6628,6629,6630,6631,6632,6633,6634,6635,6636,6637,6638,6639,6640,6641,6642,6643,6644,6645,6646,6647,6648,6649,6650,6651,6652,6653,6654,6655,6656,6657,6658,6659,6660,6661,6662,6663,6664,6665,6666,6667,6668,6669,6670,6671,6672,6673,6674,6675,6676,6677,6678,6679,6680,6681,6682,6683,6684,6685,6686,6687,6688,6689,6690,6691,6692,6693,6694,6695,6696,6697,6698,6699,6700,6701,6702,6703,6704,6705,6706,6707,6708,6709,6710,6711,6712,6713,6714,6715,6716,6717,6718,6719,6720,6721,6722,6723,6724,6725,6726,6727,6728,6729,6730,6731,6732,6733,6734,6735,6736,6737,6738,6739,6740,6741,6742,6743,6744,6745,26,6746,6747,6748,6749,6750,6751,6752,6753,6754,6755,6756,6757,6758,6759,6760,6761,6762,6763,6764,6765,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777,6778,6779,6780,6781,6782,6783,6784,6785,6786,6787,6788,6789,6790,6791,6792,6793,6794,6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806,6807,6808,6809,6810,6811,6812,6813,6814,6815,6816,6817,6818,6819,6820,6821,6822,6823,6824,6825,6826,6827,6828,6829,6830,6831,6832,6833,6834,6835,6836,6837,6838,6839,6840,6841,6842,6843,6844,6845,6846,6847,6848,6849,6850,6851,6852,6853,6854,6855,6856,6857,6858,6859,6860,6861,6862,6863,6864,6865,6866,6867,6868,6869,6870,6871,6872,6873,6874,6875,6876,6877,6878,6879,6880,6881,6882,6883,6884,6885,6886,6887,6888,6889,6890,6891,6892,6893,6894,6895,6896,6897,6898,6899,6900,6901,6902,6903,6904,6905,6906,6907,6908,6909,6910,6911,6912,6913,6914,6915,6916,6917,6918,6919,6920,6921,6922,6923,6924,6925,6926,6927,6928,6929,6930,6931,6932,6933,6934,6935,6936,6937,6938,6939,6940,6941,6942,6943,6944,6945,6946,6947,27,28,6948,6949,6950,6951,6952,6953,6954,6955,6956,6957,6958,6959,6960,6961,6962,6963,6964,6965,6966,6967,6968,6969,6970,6971,6972,6973,6974,6975,6976,6977,6978,6979,6980,6981,6982,6983,6984,6985,6986,6987,6988,6989,6990,6991,6992,6993,6994,6995,6996,6997,6998,6999,7e3,7001,7002,7003,7004,7005,7006,7007,7008,7009,7010,7011,7012,7013,7014,7015,7016,7017,7018,7019,7020,7021,7022,7023,7024,7025,7026,7027,7028,7029,7030,7031,7032,7033,7034,7035,7036,7037,7038,7039,7040,7041,7042,7043,7044,7045,7046,7047,7048,7049,7050,7051,7052,7053,7054,7055,7056,7057,7058,7059,7060,7061,7062,7063,7064,7065,7066,7067,7068,7069,7070,7071,7072,7073,7074,7075,7076,7077,7078,7079,7080,7081,7082,7083,7084,7085,7086,7087,7088,7089,7090,7091,7092,7093,7094,7095,7096,7097,7098,7099,7100,7101,7102,7103,7104,7105,7106,7107,7108,7109,7110,7111,7112,7113,7114,7115,7116,7117,7118,7119,7120,7121,7122,7123,7124,7125,7126,7127,7128,7129,7130,7131,7132,7133,7134,7135,7136,7137,7138,7139,7140,7141,7142,7143,7144,7145,7146,7147,7148,7149,7150,7151,7152,7153,7154,7155,7156,7157,7158,7159,7160,7161,7162,7163,7164,7165,7166,7167,7168,7169,7170,7171,7172,7173,7174,7175,7176,7177,7178,7179,7180,7181,7182,7183,7184,7185,7186,7187,7188,7189,7190,7191,7192,7193,7194,7195,7196,7197,7198,7199,7200,7201,7202,7203,7204,7205,7206,7207,7208,7209,7210,7211,7212,7213,7214,7215,7216,7217,7218,7219,7220,7221,7222,7223,7224,7225,7226,7227,7228,7229,7230,7231,7232,7233,7234,7235,7236,7237,7238,7239,7240,7241,7242,7243,7244,7245,7246,7247,7248,7249,7250,7251,7252,7253,7254,7255,7256,7257,7258,7259,7260,7261,7262,7263,7264,7265,7266,7267,7268,7269,7270,7271,7272,7273,7274,7275,7276,7277,7278,7279,7280,7281,7282,7283,7284,7285,7286,7287,7288,7289,7290,7291,7292,7293,7294,7295,7296,7297,7298,7299,7300,7301,7302,7303,7304,7305,7306,7307,7308,7309,7310,7311,7312,7313,7314,7315,7316,7317,7318,7319,7320,7321,7322,7323,7324,7325,7326,7327,7328,7329,7330,7331,7332,7333,7334,7335,7336,7337,7338,7339,7340,7341,7342,7343,7344,7345,7346,7347,7348,7349,7350,7351,7352,7353,7354,7355,7356,7357,7358,7359,7360,7361,7362,7363,7364,7365,7366,7367,7368,7369,7370,7371,7372,7373,7374,7375,7376,7377,7378,7379,7380,7381,7382,7383,7384,7385,7386,7387,7388,7389,7390,7391,7392,7393,7394,7395,7396,7397,7398,7399,7400,7401,7402,7403,7404,7405,7406,7407,7408,7409,7410,7411,7412,7413,7414,7415,7416,7417,7418,7419,7420,7421,7422,7423,7424,7425,7426,7427,7428,7429,7430,7431,7432,7433,7434,7435,7436,7437,7438,7439,7440,7441,7442,7443,7444,7445,7446,7447,7448,7449,7450,7451,7452,7453,7454,7455,7456,7457,7458,7459,7460,7461,7462,7463,7464,7465,7466,7467,7468,7469,7470,7471,7472,7473,7474,7475,7476,7477,7478,7479,7480,7481,7482,7483,7484,7485,7486,7487,7488,7489,7490,7491,7492,7493,7494,7495,7496,7497,7498,7499,7500,7501,7502,7503,7504,7505,7506,7507,7508,7509,7510,7511,7512,7513,7514,7515,7516,7517,7518,7519,7520,7521,7522,7523,7524,7525,7526,7527,7528,7529,7530,7531,7532,7533,7534,7535,7536,7537,7538,7539,7540,7541,7542,7543,7544,7545,7546,7547,7548,7549,7550,7551,7552,7553,7554,7555,7556,7557,7558,7559,7560,7561,7562,7563,7564,7565,7566,7567,7568,7569,7570,7571,7572,7573,7574,7575,7576,7577,7578,7579,7580,7581,7582,7583,7584,7585,7586,7587,7588,7589,7590,7591,7592,7593,7594,7595,7596,7597,7598,7599,7600,7601,7602,7603,7604,7605,7606,7607,7608,7609,7610,7611,7612,7613,7614,7615,7616,7617,7618,7619,7620,7621,7622,7623,7624,7625,7626,7627,7628,7629,7630,7631,7632,7633,7634,7635,7636,7637,7638,7639,7640,7641,7642,7643,7644,7645,7646,7647,7648,7649,7650,7651,7652,7653,7654,7655,7656,7657,7658,7659,7660,7661,7662,7663,7664,7665,7666,7667,7668,7669,7670,7671,7672,7673,7674,7675,7676,7677,7678,7679,7680,7681,7682,7683,7684,7685,7686,7687,7688,7689,7690,7691]),i.os(i.cx,2,[26016,26015,26019,26094,26093,26029,26026,26028,26027,26022,26025,26024,26023,26044,26100,26058,26138,26055,26052,26051,26054,26053,26057,26056,26050,26049]),i.os(i.w,1,[31,7698]),i.os(i.w,10,[26162,14]),i.os(i.w,0,[9,25,24,7,23,11,12,20,8,10,21,22,19,6,1]),i.os(i.s,6,[3,4,7738,26171]),i.o([i.y(3,7719),i.y(0,7721),i.pc_(2,7695)]),i.o([i.y(1,0),i.ref(7)]),i.os(i.cx,2,[26048,7739,26018]),i.os(i.w,3,[7767,7766,7791]),i.os(i.cx,2,[26108,26115,26113,26114,26109,26112,26111,26107,26106,26116,26110,26104,13]),i.os(i.w,0,[7753,7762,7758,7760,7755,7751,7761,7754,7756,7700,7757,7752,7759,7747,7748,7750,7763,7749,7764,7746]),i.os(i.cx,2,[26085,26081,26078,26083,26079,26084,26082,26077,26080,26086]),i.o([i.y(8,39),i.os(i.cx,2,[26130,7696,26076,26139])]),i.os(i.s,3,[7802]),i.os(i.s,0,[7799,7800,7804]),i.os(i.cx,2,[7693,7694,35,37,34,42,38,43,41,44,36,33]),i.os(i.w,0,[7724,7725,7726,7727,7728,7723,7722]),i.os(i.cx,2,[26117,26033,26031,7696,26128,26125,26122,26127,26126,26123,26124,26129,26175]),i.os(i.w,1,[32,30]),i.os(i.w,0,[7714,7710,7711,7712,7713,7716,7707,7708,7718,7709,7717,7706,7715,47]),i.os(i.cx,2,[26142,26161,26103,26158,26160,26159,26157,26073,26062,26069,26060,26070,26061,26063,26068,26064,26072,26067,26065,26066,26071,26059,7733]),i.o([i.y(1,7697),i.os(i.w,0,[7768,45,46,7772,7701,7703,7770,7702,7771,5,7769,15])]),i.os(i.cx,2,[26047,26046,26045,26091,26132,26131,26097,26105]),i.os(i.cx,2,[26102,26096,26101,26146,26144,26145,26011,26098,26099,26030,26155,26010,26009,26095,23980,26014,26008,26040,26042,26041,26032,7732]),i.os(i.s,11,[7805,7806,7807,7808,7809,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,7824,7825,7826,7827,7828,7829,7830,7831,7832,7833,7834,7835,7836,7837,7838,7839,7840,7841,7842,7843,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7854,7855,7856,7857,7858,7859,7860,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870,7871,7872,7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886,7887,7888,7889,7890,7891,7892,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,7904,7905,7906,7907,7908,7909,7910,7911,7912,7913,7914,7915,7916,7917,7918,7919,7920,7921,7922,7923,7924,7925,7926,7927,7928,7929,7930,7931,7932,7933,7934,7935,7936,7937,7938,7939,7940,7941,7942,7943,7944,7945,7946,7947,7948,7949,7950,7951,7952,7953,7954,7955,7956,7957,7958,7959,7960,7961,7962,7963,7964,7965,7966,7967,7968,7969,7970,7971,7972,7973,7974,7975,7976,7977,7978,7979,7980,7981,7982,7983,7984,7985,7986,7987,7988,7989,7990,7991,7992,7993,7994,7995,7996,7997,7998,7999,8eee4,10001,10002,10003,10004,10005,10006,10007,10008,10009,10010,10011,10012,10013,10014,10015,10016,10017,10018,10019,10020,10021,10022,10023,10024,10025,10026,10027,10028,10029,10030,10031,10032,10033,10034,10035,10036,10037,10038,10039,10040,10041,10042,10043,10044,10045,10046,10047,10048,10049,10050,10051,10052,10053,10054,10055,10056,10057,10058,10059,10060,10061,10062,10063,10064,10065,10066,10067,10068,10069,10070,10071,10072,10073,10074,10075,10076,10077,10078,10079,10080,10081,10082,10083,10084,10085,10086,10087,10088,10089,10090,10091,10092,10093,10094,10095,10096,10097,10098,10099,10100,10101,10102,10103,10104,10105,10106,10107,10108,10109,10110,10111,10112,10113,10114,10115,10116,10117,10118,10119,10120,10121,10122,10123,10124,10125,10126,10127,10128,10129,10130,10131,10132,10133,10134,10135,10136,10137,10138,10139,10140,10141,10142,10143,10144,10145,10146,10147,10148,10149,10150,10151,10152,10153,10154,10155,10156,10157,10158,10159,10160,10161,10162,10163,10164,10165,10166,10167,10168,10169,10170,10171,10172,10173,10174,10175,10176,10177,10178,10179,10180,10181,10182,10183,10184,10185,10186,10187,10188,10189,10190,10191,10192,10193,10194,10195,10196,10197,10198,10199,10200,10201,10202,10203,10204,10205,10206,10207,10208,10209,10210,10211,10212,10213,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10224,10225,10226,10227,10228,10229,10230,10231,10232,10233,10234,10235,10236,10237,10238,10239,10240,10241,10242,10243,10244,10245,10246,10247,10248,10249,10250,10251,10252,10253,10254,10255,10256,10257,10258,10259,10260,10261,10262,10263,10264,10265,10266,10267,10268,10269,10270,10271,10272,10273,10274,10275,10276,10277,10278,10279,10280,10281,10282,10283,10284,10285,10286,10287,10288,10289,10290,10291,10292,10293,10294,10295,10296,10297,10298,10299,10300,10301,10302,10303,10304,10305,10306,10307,10308,10309,10310,10311,10312,10313,10314,10315,10316,10317,10318,10319,10320,10321,10322,10323,10324,10325,10326,10327,10328,10329,10330,10331,10332,10333,10334,10335,10336,10337,10338,10339,10340,10341,10342,10343,10344,10345,10346,10347,10348,10349,10350,10351,10352,10353,10354,10355,10356,10357,10358,10359,10360,10361,10362,10363,10364,10365,10366,10367,10368,10369,10370,10371,10372,10373,10374,10375,10376,10377,10378,10379,10380,10381,10382,10383,10384,10385,10386,10387,10388,10389,10390,10391,10392,10393,10394,10395,10396,10397,10398,10399,10400,10401,10402,10403,10404,10405,10406,10407,10408,10409,10410,10411,10412,10413,10414,10415,10416,10417,10418,10419,10420,10421,10422,10423,10424,10425,10426,10427,10428,10429,10430,10431,10432,10433,10434,10435,10436,10437,10438,10439,10440,10441,10442,10443,10444,10445,10446,10447,10448,10449,10450,10451,10452,10453,10454,10455,10456,10457,10458,10459,10460,10461,10462,10463,10464,10465,10466,10467,10468,10469,10470,10471,10472,10473,10474,10475,10476,10477,10478,10479,10480,10481,10482,10483,10484,10485,10486,10487,10488,10489,10490,10491,10492,10493,10494,10495,10496,10497,10498,10499,10500,10501,10502,10503,10504,10505,10506,10507,10508,10509,10510,10511,10512,10513,10514,10515,10516,10517,10518,10519,10520,10521,10522,10523,10524,10525,10526,10527,10528,10529,10530,10531,10532,10533,10534,10535,10536,10537,10538,10539,10540,10541,10542,10543,10544,10545,10546,10547,10548,10549,10550,10551,10552,10553,10554,10555,10556,10557,10558,10559,10560,10561,10562,10563,10564,10565,10566,10567,10568,10569,10570,10571,10572,10573,10574,10575,10576,10577,10578,10579,10580,10581,10582,10583,10584,10585,10586,10587,10588,10589,10590,10591,10592,10593,10594,10595,10596,10597,10598,10599,10600,10601,10602,10603,10604,10605,10606,10607,10608,10609,10610,10611,10612,10613,10614,10615,10616,10617,10618,10619,10620,10621,10622,10623,10624,10625,10626,10627,10628,10629,10630,10631,10632,10633,10634,10635,10636,10637,10638,10639,10640,10641,10642,10643,10644,10645,10646,10647,10648,10649,10650,10651,10652,10653,10654,10655,10656,10657,10658,10659,10660,10661,10662,10663,10664,10665,10666,10667,10668,10669,10670,10671,10672,10673,10674,10675,10676,10677,10678,10679,10680,10681,10682,10683,10684,10685,10686,10687,10688,10689,10690,10691,10692,10693,10694,10695,10696,10697,10698,10699,10700,10701,10702,10703,10704,10705,10706,10707,10708,10709,10710,10711,10712,10713,10714,10715,10716,10717,10718,10719,10720,10721,10722,10723,10724,10725,10726,10727,10728,10729,10730,10731,10732,10733,10734,10735,10736,10737,10738,10739,10740,10741,10742,10743,10744,10745,10746,10747,10748,10749,10750,10751,10752,10753,10754,10755,10756,10757,10758,10759,10760,10761,10762,10763,10764,10765,10766,10767,10768,10769,10770,10771,10772,10773,10774,10775,10776,10777,10778,10779,10780,10781,10782,10783,10784,10785,10786,10787,10788,10789,10790,10791,10792,10793,10794,10795,10796,10797,10798,10799,10800,10801,10802,10803,10804,10805,10806,10807,10808,10809,10810,10811,10812,10813,10814,10815,10816,10817,10818,10819,10820,10821,10822,10823,10824,10825,10826,10827,10828,10829,10830,10831,10832,10833,10834,10835,10836,10837,10838,10839,10840,10841,10842,10843,10844,10845,10846,10847,10848,10849,10850,10851,10852,10853,10854,10855,10856,10857,10858,10859,10860,10861,10862,10863,10864,10865,10866,10867,10868,10869,10870,10871,10872,10873,10874,10875,10876,10877,10878,10879,10880,10881,10882,10883,10884,10885,10886,10887,10888,10889,10890,10891,10892,10893,10894,10895,10896,10897,10898,10899,10900,10901,10902,10903,10904,10905,10906,10907,10908,10909,10910,10911,10912,10913,10914,10915,10916,10917,10918,10919,10920,10921,10922,10923,10924,10925,10926,10927,10928,10929,10930,10931,10932,10933,10934,10935,10936,10937,10938,10939,10940,10941,10942,10943,10944,10945,10946,10947,10948,10949,10950,10951,10952,10953,10954,10955,10956,10957,10958,10959,10960,10961,10962,10963,10964,10965,10966,10967,10968,10969,10970,10971,10972,10973,10974,10975,10976,10977,10978,10979,10980,10981,10982,10983,10984,10985,10986,10987,10988,10989,10990,10991,10992,10993,10994,10995,10996,10997,10998,10999,11e3,11001,11002,11003,11004,11005,11006,11007,11008,11009,11010,11011,11012,11013,11014,11015,11016,11017,11018,11019,11020,11021,11022,11023,11024,11025,11026,11027,11028,11029,11030,11031,11032,11033,11034,11035,11036,11037,11038,11039,11040,11041,11042,11043,11044,11045,11046,11047,11048,11049,11050,11051,11052,11053,11054,11055,11056,11057,11058,11059,11060,11061,11062,11063,11064,11065,11066,11067,11068,11069,11070,11071,11072,11073,11074,11075,11076,11077,11078,11079,11080,11081,11082,11083,11084,11085,11086,11087,11088,11089,11090,11091,11092,11093,11094,11095,11096,11097,11098,11099,11100,11101,11102,11103,11104,11105,11106,11107,11108,11109,11110,11111,11112,11113,11114,11115,11116,11117,11118,11119,11120,11121,11122,11123,11124,11125,11126,11127,11128,11129,11130,11131,11132,11133,11134,11135,11136,11137,11138,11139,11140,11141,11142,11143,11144,11145,11146,11147,11148,11149,11150,11151,11152,11153,11154,11155,11156,11157,11158,11159,11160,11161,11162,11163,11164,11165,11166,11167,11168,11169,11170,11171,11172,11173,11174,11175,11176,11177,11178,11179,11180,11181,11182,11183,11184,11185,11186,11187,11188,11189,11190,11191,11192,11193,11194,11195,11196,11197,11198,11199,11200,11201,11202,11203,11204,11205,11206,11207,11208,11209,11210,11211,11212,11213,11214,11215,11216,11217,11218,11219,11220,11221,11222,11223,11224,11225,11226,11227,11228,11229,11230,11231,11232,11233,11234,11235,11236,11237,11238,11239,11240,11241,11242,11243,11244,11245,11246,11247,11248,11249,11250,11251,11252,11253,11254,11255,11256,11257,11258,11259,11260,11261,11262,11263,11264,11265,11266,11267,11268,11269,11270,11271,11272,11273,11274,11275,11276,11277,11278,11279,11280,11281,11282,11283,11284,11285,11286,11287,11288,11289,11290,11291,11292,11293,11294,11295,11296,11297,11298,11299,11300,11301,11302,11303,11304,11305,11306,11307,11308,11309,11310,11311,11312,11313,11314,11315,11316,11317,11318,11319,11320,11321,11322,11323,11324,11325,11326,11327,11328,11329,11330,11331,11332,11333,11334,11335,11336,11337,11338,11339,11340,11341,11342,11343,11344,11345,11346,11347,11348,11349,11350,11351,11352,11353,11354,11355,11356,11357,11358,11359,11360,11361,11362,11363,11364,11365,11366,11367,11368,11369,11370,11371,11372,11373,11374,11375,11376,11377,11378,11379,11380,11381,11382,11383,11384,11385,11386,11387,11388,11389,11390,11391,11392,11393,11394,11395,11396,11397,11398,11399,11400,11401,11402,11403,11404,11405,11406,11407,11408,11409,11410,11411,11412,11413,11414,11415,11416,11417,11418,11419,11420,11421,11422,11423,11424,11425,11426,11427,11428,11429,11430,11431,11432,11433,11434,11435,11436,11437,11438,11439,11440,11441,11442,11443,11444,11445,11446,11447,11448,11449,11450,11451,11452,11453,11454,11455,11456,11457,11458,11459,11460,11461,11462,11463,11464,11465,11466,11467,11468,11469,11470,11471,11472,11473,11474,11475,11476,11477,11478,11479,11480,11481,11482,11483,11484,11485,11486,11487,11488,11489,11490,11491,11492,11493,11494,11495,11496,11497,11498,11499,11500,11501,11502,11503,11504,11505,11506,11507,11508,11509,11510,11511,11512,11513,11514,11515,11516,11517,11518,11519,11520,11521,11522,11523,11524,11525,11526,11527,11528,11529,11530,11531,11532,11533,11534,11535,11536,11537,11538,11539,11540,11541,11542,11543,11544,11545,11546,11547,11548,11549,11550,11551,11552,11553,11554,11555,11556,11557,11558,11559,11560,11561,11562,11563,11564,11565,11566,11567,11568,11569,11570,11571,11572,11573,11574,11575,11576,11577,11578,11579,11580,11581,11582,11583,11584,11585,11586,11587,11588,11589,11590,11591,11592,11593,11594,11595,11596,11597,11598,11599,11600,11601,11602,11603,11604,11605,11606,11607,11608,11609,11610,11611,11612,11613,11614,11615,11616,11617,11618,11619,11620,11621,11622,11623,11624,11625,11626,11627,11628,11629,11630,11631,11632,11633,11634,11635,11636,11637,11638,11639,11640,11641,11642,11643,11644,11645,11646,11647,11648,11649,11650,11651,11652,11653,11654,11655,11656,11657,11658,11659,11660,11661,11662,11663,11664,11665,11666,11667,11668,11669,11670,11671,11672,11673,11674,11675,11676,11677,11678,11679,11680,11681,11682,11683,11684,11685,11686,11687,11688,11689,11690,11691,11692,11693,11694,11695,11696,11697,11698,11699,11700,11701,11702,11703,11704,11705,11706,11707,11708,11709,11710,11711,11712,11713,11714,11715,11716,11717,11718,11719,11720,11721,11722,11723,11724,11725,11726,11727,11728,11729,11730,11731,11732,11733,11734,11735,11736,11737,11738,11739,11740,11741,11742,11743,11744,11745,11746,11747,11748,11749,11750,11751,11752,11753,11754,11755,11756,11757,11758,11759,11760,11761,11762,11763,11764,11765,11766,11767,11768,11769,11770,11771,11772,11773,11774,11775,11776,11777,11778,11779,11780,11781,11782,11783,11784,11785,11786,11787,11788,11789,11790,11791,11792,11793,11794,11795,11796,11797,11798,11799,11800,11801,11802,11803,11804,11805,11806,11807,11808,11809,11810,11811,11812,11813,11814,11815,11816,11817,11818,11819,11820,11821,11822,11823,11824,11825,11826,11827,11828,11829,11830,11831,11832,11833,11834,11835,11836,11837,11838,11839,11840,11841,11842,11843,11844,11845,11846,11847,11848,11849,11850,11851,11852,11853,11854,11855,11856,11857,11858,11859,11860,11861,11862,11863,11864,11865,11866,11867,11868,11869,11870,11871,11872,11873,11874,11875,11876,11877,11878,11879,11880,11881,11882,11883,11884,11885,11886,11887,11888,11889,11890,11891,11892,11893,11894,11895,11896,11897,11898,11899,11900,11901,11902,11903,11904,11905,11906,11907,11908,11909,11910,11911,11912,11913,11914,11915,11916,11917,11918,11919,11920,11921,11922,11923,11924,11925,11926,11927,11928,11929,11930,11931,11932,11933,11934,11935,11936,11937,11938,11939,11940,11941,11942,11943,11944,11945,11946,11947,11948,11949,11950,11951,11952,11953,11954,11955,11956,11957,11958,11959,11960,11961,11962,11963,11964,11965,11966,11967,11968,11969,11970,11971,11972,11973,11974,11975,11976,11977,11978,11979,11980,11981,11982,11983,11984,11985,11986,11987,11988,11989,11990,11991,11992,11993,11994,11995,11996,11997,11998,11999,12e3,12001,12002,12003,12004,12005,12006,12007,12008,12009,12010,12011,12012,12013,12014,12015,12016,12017,12018,12019,12020,12021,12022,12023,12024,12025,12026,12027,12028,12029,12030,12031,12032,12033,12034,12035,12036,12037,12038,12039,12040,12041,12042,12043,12044,12045,12046,12047,12048,12049,12050,12051,12052,12053,12054,12055,12056,12057,12058,12059,12060,12061,12062,12063,12064,12065,12066,12067,12068,12069,12070,12071,12072,12073,12074,12075,12076,12077,12078,12079,12080,12081,12082,12083,12084,12085,12086,12087,12088,12089,12090,12091,12092,12093,12094,12095,12096,12097,12098,12099,12100,12101,12102,12103,12104,12105,12106,12107,12108,12109,12110,12111,12112,12113,12114,12115,12116,12117,12118,12119,12120,12121,12122,12123,12124,12125,12126,12127,12128,12129,12130,12131,12132,12133,12134,12135,12136,12137,12138,12139,12140,12141,12142,12143,12144,12145,12146,12147,12148,12149,12150,12151,12152,12153,12154,12155,12156,12157,12158,12159,12160,12161,12162,12163,12164,12165,12166,12167,12168,12169,12170,12171,12172,12173,12174,12175,12176,12177,12178,12179,12180,12181,12182,12183,12184,12185,12186,12187,12188,12189,12190,12191,12192,12193,12194,12195,12196,12197,12198,12199,12200,12201,12202,12203,12204,12205,12206,12207,12208,12209,12210,12211,12212,12213,12214,12215,12216,12217,12218,12219,12220,12221,12222,12223,12224,12225,12226,12227,12228,12229,12230,12231,12232,12233,12234,12235,12236,12237,12238,12239,12240,12241,12242,12243,12244,12245,12246,12247,12248,12249,12250,12251,12252,12253,12254,12255,12256,12257,12258,12259,12260,12261,12262,12263,12264,12265,12266,12267,12268,12269,12270,12271,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12284,12285,12286,12287,12288,12289,12290,12291,12292,12293,12294,12295,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,12306,12307,12308,12309,12310,12311,12312,12313,12314,12315,12316,12317,12318,12319,12320,12321,12322,12323,12324,12325,12326,12327,12328,12329,12330,12331,12332,12333,12334,12335,12336,12337,12338,12339,12340,12341,12342,12343,12344,12345,12346,12347,12348,12349,12350,12351,12352,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12436,12437,12438,12439,12440,12441,12442,12443,12444,12445,12446,12447,12448,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,12535,12536,12537,12538,12539,12540,12541,12542,12543,12544,12545,12546,12547,12548,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,12586,12587,12588,12589,12590,12591,12592,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,12687,12688,12689,12690,12691,12692,12693,12694,12695,12696,12697,12698,12699,12700,12701,12702,12703,12704,12705,12706,12707,12708,12709,12710,12711,12712,12713,12714,12715,12716,12717,12718,12719,12720,12721,12722,12723,12724,12725,12726,12727,12728,12729,12730,12731,12732,12733,12734,12735,12736,12737,12738,12739,12740,12741,12742,12743,12744,12745,12746,12747,12748,12749,12750,12751,12752,12753,12754,12755,12756,12757,12758,12759,12760,12761,12762,12763,12764,12765,12766,12767,12768,12769,12770,12771,12772,12773,12774,12775,12776,12777,12778,12779,12780,12781,12782,12783,12784,12785,12786,12787,12788,12789,12790,12791,12792,12793,12794,12795,12796,12797,12798,12799,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,12828,12829,12830,12831,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,12842,12843,12844,12845,12846,12847,12848,12849,12850,12851,12852,12853,12854,12855,12856,12857,12858,12859,12860,12861,12862,12863,12864,12865,12866,12867,12868,12869,12870,12871,12872,12873,12874,12875,12876,12877,12878,12879,12880,12881,12882,12883,12884,12885,12886,12887,12888,12889,12890,12891,12892,12893,12894,12895,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,12924,12925,12926,12927,12928,12929,12930,12931,12932,12933,12934,12935,12936,12937,12938,12939,12940,12941,12942,12943,12944,12945,12946,12947,12948,12949,12950,12951,12952,12953,12954,12955,12956,12957,12958,12959,12960,12961,12962,12963,12964,12965,12966,12967,12968,12969,12970,12971,12972,12973,12974,12975,12976,12977,12978,12979,12980,12981,12982,12983,12984,12985,12986,12987,12988,12989,12990,12991,12992,12993,12994,12995,12996,12997,12998,12999,13e3,13001,13002,13003,13004,13005,13006,13007,13008,13009,13010,13011,13012,13013,13014,13015,13016,13017,13018,13019,13020,13021,13022,13023,13024,13025,13026,13027,13028,13029,13030,13031,13032,13033,13034,13035,13036,13037,13038,13039,13040,13041,13042,13043,13044,13045,13046,13047,13048,13049,13050,13051,13052,13053,13054,13055,13056,13057,13058,13059,13060,13061,13062,13063,13064,13065,13066,13067,13068,13069,13070,13071,13072,13073,13074,13075,13076,13077,13078,13079,13080,13081,13082,13083,13084,13085,13086,13087,13088,13089,13090,13091,13092,13093,13094,13095,13096,13097,13098,13099,13100,13101,13102,13103,13104,13105,13106,13107,13108,13109,13110,13111,13112,13113,13114,13115,13116,13117,13118,13119,13120,13121,13122,13123,13124,13125,13126,13127,13128,13129,13130,13131,13132,13133,13134,13135,13136,13137,13138,13139,13140,13141,13142,13143,13144,13145,13146,13147,13148,13149,13150,13151,13152,13153,13154,13155,13156,13157,13158,13159,13160,13161,13162,13163,13164,13165,13166,13167,13168,13169,13170,13171,13172,13173,13174,13175,13176,13177,13178,13179,13180,13181,13182,13183,13184,13185,13186,13187,13188,13189,13190,13191,13192,13193,13194,13195,13196,13197,13198,13199,13200,13201,13202,13203,13204,13205,13206,13207,13208,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13219,13220,13221,13222,13223,13224,13225,13226,13227,13228,13229,13230,13231,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13242,13243,13244,13245,13246,13247,13248,13249,13250,13251,13252,13253,13254,13255,13256,13257,13258,13259,13260,13261,13262,13263,13264,13265,13266,13267,13268,13269,13270,13271,13272,13273,13274,13275,13276,13277,13278,13279,13280,13281,13282,13283,13284,13285,13286,13287,13288,13289,13290,13291,13292,13293,13294,13295,13296,13297,13298,13299,13300,13301,13302,13303,13304,13305,13306,13307,13308,13309,13310,13311,13312,13313,13314,13315,13316,13317,13318,13319,13320,13321,13322,13323,13324,13325,13326,13327,13328,13329,13330,13331,13332,13333,13334,13335,13336,13337,13338,13339,13340,13341,13342,13343,13344,13345,13346,13347,13348,13349,13350,13351,13352,13353,13354,13355,13356,13357,13358,13359,13360,13361,13362,13363,13364,13365,13366,13367,13368,13369,13370,13371,13372,13373,13374,13375,13376,13377,13378,13379,13380,13381,13382,13383,13384,13385,13386,13387,13388,13389,13390,13391,13392,13393,13394,13395,13396,13397,13398,13399,13400,13401,13402,13403,13404,13405,13406,13407,13408,13409,13410,13411,13412,13413,13414,13415,13416,13417,13418,13419,13420,13421,13422,13423,13424,13425,13426,13427,13428,13429,13430,13431,13432,13433,13434,13435,13436,13437,13438,13439,13440,13441,13442,13443,13444,13445,13446,13447,13448,13449,13450,13451,13452,13453,13454,13455,13456,13457,13458,13459,13460,13461,13462,13463,13464,13465,13466,13467,13468,13469,13470,13471,13472,13473,13474,13475,13476,13477,13478,13479,13480,13481,13482,13483,13484,13485,13486,13487,13488,13489,13490,13491,13492,13493,13494,13495,13496,13497,13498,13499,13500,13501,13502,13503,13504,13505,13506,13507,13508,13509,13510,13511,13512,13513,13514,13515,13516,13517,13518,13519,13520,13521,13522,13523,13524,13525,13526,13527,13528,13529,13530,13531,13532,13533,13534,13535,13536,13537,13538,13539,13540,13541,13542,13543,13544,13545,13546,13547,13548,13549,13550,13551,13552,13553,13554,13555,13556,13557,13558,13559,13560,13561,13562,13563,13564,13565,13566,13567,13568,13569,13570,13571,13572,13573,13574,13575,13576,13577,13578,13579,13580,13581,13582,13583,13584,13585,13586,13587,13588,13589,13590,13591,13592,13593,13594,13595,13596,13597,13598,13599,13600,13601,13602,13603,13604,13605,13606,13607,13608,13609,13610,13611,13612,13613,13614,13615,13616,13617,13618,13619,13620,13621,13622,13623,13624,13625,13626,13627,13628,13629,13630,13631,13632,13633,13634,13635,13636,13637,13638,13639,13640,13641,13642,13643,13644,13645,13646,13647,13648,13649,13650,13651,13652,13653,13654,13655,13656,13657,13658,13659,13660,13661,13662,13663,13664,13665,13666,13667,13668,13669,13670,13671,13672,13673,13674,13675,13676,13677,13678,13679,13680,13681,13682,13683,13684,13685,13686,13687,13688,13689,13690,13691,13692,13693,13694,13695,13696,13697,13698,13699,13700,13701,13702,13703,13704,13705,13706,13707,13708,13709,13710,13711,13712,13713,13714,13715,13716,13717,13718,13719,13720,13721,13722,13723,13724,13725,13726,13727,13728,13729,13730,13731,13732,13733,13734,13735,13736,13737,13738,13739,13740,13741,13742,13743,13744,13745,13746,13747,13748,13749,13750,13751,13752,13753,13754,13755,13756,13757,13758,13759,13760,13761,13762,13763,13764,13765,13766,13767,13768,13769,13770,13771,13772,13773,13774,13775,13776,13777,13778,13779,13780,13781,13782,13783,13784,13785,13786,13787,13788,13789,13790,13791,13792,13793,13794,13795,13796,13797,13798,13799,13800,13801,13802,13803,13804,13805,13806,13807,13808,13809,13810,13811,13812,13813,13814,13815,13816,13817,13818,13819,13820,13821,13822,13823,13824,13825,13826,13827,13828,13829,13830,13831,13832,13833,13834,13835,13836,13837,13838,13839,13840,13841,13842,13843,13844,13845,13846,13847,13848,13849,13850,13851,13852,13853,13854,13855,13856,13857,13858,13859,13860,13861,13862,13863,13864,13865,13866,13867,13868,13869,13870,13871,13872,13873,13874,13875,13876,13877,13878,13879,13880,13881,13882,13883,13884,13885,13886,13887,13888,13889,13890,13891,13892,13893,13894,13895,13896,13897,13898,13899,13900,13901,13902,13903,13904,13905,13906,13907,13908,13909,13910,13911,13912,13913,13914,13915,13916,13917,13918,13919,13920,13921,13922,13923,13924,13925,13926,13927,13928,13929,13930,13931,13932,13933,13934,13935,13936,13937,13938,13939,13940,13941,13942,13943,13944,13945,13946,13947,13948,13949,13950,13951,13952,13953,13954,13955,13956,13957,13958,13959,13960,13961,13962,13963,13964,13965,13966,13967,13968,13969,13970,13971,13972,13973,13974,13975,13976,13977,13978,13979,13980,13981,13982,13983,13984,13985,13986,13987,13988,13989,13990,13991,13992,13993,13994,13995,13996,13997,13998,13999,14e3,14001,14002,14003,14004,14005,14006,14007,14008,14009,14010,14011,14012,14013,14014,14015,14016,14017,14018,14019,14020,14021,14022,14023,14024,14025,14026,14027,14028,14029,14030,14031,14032,14033,14034,14035,14036,14037,14038,14039,14040,14041,14042,14043,14044,14045,14046,14047,14048,14049,14050,14051,14052,14053,14054,14055,14056,14057,14058,14059,14060,14061,14062,14063,14064,14065,14066,14067,14068,14069,14070,14071,14072,14073,14074,14075,14076,14077,14078,14079,14080,14081,14082,14083,14084,14085,14086,14087,14088,14089,14090,14091,14092,14093,14094,14095,14096,14097,14098,14099,14100,14101,14102,14103,14104,14105,14106,14107,14108,14109,14110,14111,14112,14113,14114,14115,14116,14117,14118,14119,14120,14121,14122,14123,14124,14125,14126,14127,14128,14129,14130,14131,14132,14133,14134,14135,14136,14137,14138,14139,14140,14141,14142,14143,14144,14145,14146,14147,14148,14149,14150,14151,14152,14153,14154,14155,14156,14157,14158,14159,14160,14161,14162,14163,14164,14165,14166,14167,14168,14169,14170,14171,14172,14173,14174,14175,14176,14177,14178,14179,14180,14181,14182,14183,14184,14185,14186,14187,14188,14189,14190,14191,14192,14193,14194,14195,14196,14197,14198,14199,14200,14201,14202,14203,14204,14205,14206,14207,14208,14209,14210,14211,14212,14213,14214,14215,14216,14217,14218,14219,14220,14221,14222,14223,14224,14225,14226,14227,14228,14229,14230,14231,14232,14233,14234,14235,14236,14237,14238,14239,14240,14241,14242,14243,14244,14245,14246,14247,14248,14249,14250,14251,14252,14253,14254,14255,14256,14257,14258,14259,14260,14261,14262,14263,14264,14265,14266,14267,14268,14269,14270,14271,14272,14273,14274,14275,14276,14277,14278,14279,14280,14281,14282,14283,14284,14285,14286,14287,14288,14289,14290,14291,14292,14293,14294,14295,14296,14297,14298,14299,14300,14301,14302,14303,14304,14305,14306,14307,14308,14309,14310,14311,14312,14313,14314,14315,14316,14317,14318,14319,14320,14321,14322,14323,14324,14325,14326,14327,14328,14329,14330,14331,14332,14333,14334,14335,14336,14337,14338,14339,14340,14341,14342,14343,14344,14345,14346,14347,14348,14349,14350,14351,14352,14353,14354,14355,14356,14357,14358,14359,14360,14361,14362,14363,14364,14365,14366,14367,14368,14369,14370,14371,14372,14373,14374,14375,14376,14377,14378,14379,14380,14381,14382,14383,14384,14385,14386,14387,14388,14389,14390,14391,14392,14393,14394,14395,14396,14397,14398,14399,14400,14401,14402,14403,14404,14405,14406,14407,14408,14409,14410,14411,14412,14413,14414,14415,14416,14417,14418,14419,14420,14421,14422,14423,14424,14425,14426,14427,14428,14429,14430,14431,14432,14433,14434,14435,14436,14437,14438,14439,14440,14441,14442,14443,14444,14445,14446,14447,14448,14449,14450,14451,14452,14453,14454,14455,14456,14457,14458,14459,14460,14461,14462,14463,14464,14465,14466,14467,14468,14469,14470,14471,14472,14473,14474,14475,14476,14477,14478,14479,14480,14481,14482,14483,14484,14485,14486,14487,14488,14489,14490,14491,14492,14493,14494,14495,14496,14497,14498,14499,14500,14501,14502,14503,14504,14505,14506,14507,14508,14509,14510,14511,14512,14513,14514,14515,14516,14517,14518,14519,14520,14521,14522,14523,14524,14525,14526,14527,14528,14529,14530,14531,14532,14533,14534,14535,14536,14537,14538,14539,14540,14541,14542,14543,14544,14545,14546,14547,14548,14549,14550,14551,14552,14553,14554,14555,14556,14557,14558,14559,14560,14561,14562,14563,14564,14565,14566,14567,14568,14569,14570,14571,14572,14573,14574,14575,14576,14577,14578,14579,14580,14581,14582,14583,14584,14585,14586,14587,14588,14589,14590,14591,14592,14593,14594,14595,14596,14597,14598,14599,14600,14601,14602,14603,14604,14605,14606,14607,14608,14609,14610,14611,14612,14613,14614,14615,14616,14617,14618,14619,14620,14621,14622,14623,14624,14625,14626,14627,14628,14629,14630,14631,14632,14633,14634,14635,14636,14637,14638,14639,14640,14641,14642,14643,14644,14645,14646,14647,14648,14649,14650,14651,14652,14653,14654,14655,14656,14657,14658,14659,14660,14661,14662,14663,14664,14665,14666,14667,14668,14669,14670,14671,14672,14673,14674,14675,14676,14677,14678,14679,14680,14681,14682,14683,14684,14685,14686,14687,14688,14689,14690,14691,14692,14693,14694,14695,14696,14697,14698,14699,14700,14701,14702,14703,14704,14705,14706,14707,14708,14709,14710,14711,14712,14713,14714,14715,14716,14717,14718,14719,14720,14721,14722,14723,14724,14725,14726,14727,14728,14729,14730,14731,14732,14733,14734,14735,14736,14737,14738,14739,14740,14741,14742,14743,14744,14745,14746,14747,14748,14749,14750,14751,14752,14753,14754,14755,14756,14757,14758,14759,14760,14761,14762,14763,14764,14765,14766,14767,14768,14769,14770,14771,14772,14773,14774,14775,14776,14777,14778,14779,14780,14781,14782,14783,14784,14785,14786,14787,14788,14789,14790,14791,14792,14793,14794,14795,14796,14797,14798,14799,14800,14801,14802,14803,14804,14805,14806,14807,14808,14809,14810,14811,14812,14813,14814,14815,14816,14817,14818,14819,14820,14821,14822,14823,14824,14825,14826,14827,14828,14829,14830,14831,14832,14833,14834,14835,14836,14837,14838,14839,14840,14841,14842,14843,14844,14845,14846,14847,14848,14849,14850,14851,14852,14853,14854,14855,14856,14857,14858,14859,14860,14861,14862,14863,14864,14865,14866,14867,14868,14869,14870,14871,14872,14873,14874,14875,14876,14877,14878,14879,14880,14881,14882,14883,14884,14885,14886,14887,14888,14889,14890,14891,14892,14893,14894,14895,14896,14897,14898,14899,14900,14901,14902,14903,14904,14905,14906,14907,14908,14909,14910,14911,14912,14913,14914,14915,14916,14917,14918,14919,14920,14921,14922,14923,14924,14925,14926,14927,14928,14929,14930,14931,14932,14933,14934,14935,14936,14937,14938,14939,14940,14941,14942,14943,14944,14945,14946,14947,14948,14949,14950,14951,14952,14953,14954,14955,14956,14957,14958,14959,14960,14961,14962,14963,14964,14965,14966,14967,14968,14969,14970,14971,14972,14973,14974,14975,14976,14977,14978,14979,14980,14981,14982,14983,14984,14985,14986,14987,14988,14989,14990,14991,14992,14993,14994,14995,14996,14997,14998,14999,15e3,15001,15002,15003,15004,15005,15006,15007,15008,15009,15010,15011,15012,15013,15014,15015,15016,15017,15018,15019,15020,15021,15022,15023,15024,15025,15026,15027,15028,15029,15030,15031,15032,15033,15034,15035,15036,15037,15038,15039,15040,15041,15042,15043,15044,15045,15046,15047,15048,15049,15050,15051,15052,15053,15054,15055,15056,15057,15058,15059,15060,15061,15062,15063,15064,15065,15066,15067,15068,15069,15070,15071,15072,15073,15074,15075,15076,15077,15078,15079,15080,15081,15082,15083,15084,15085,15086,15087,15088,15089,15090,15091,15092,15093,15094,15095,15096,15097,15098,15099,15100,15101,15102,15103,15104,15105,15106,15107,15108,15109,15110,15111,15112,15113,15114,15115,15116,15117,15118,15119,15120,15121,15122,15123,15124,15125,15126,15127,15128,15129,15130,15131,15132,15133,15134,15135,15136,15137,15138,15139,15140,15141,15142,15143,15144,15145,15146,15147,15148,15149,15150,15151,15152,15153,15154,15155,15156,15157,15158,15159,15160,15161,15162,15163,15164,15165,15166,15167,15168,15169,15170,15171,15172,15173,15174,15175,15176,15177,15178,15179,15180,15181,15182,15183,15184,15185,15186,15187,15188,15189,15190,15191,15192,15193,15194,15195,15196,15197,15198,15199,15200,15201,15202,15203,15204,15205,15206,15207,15208,15209,15210,15211,15212,15213,15214,15215,15216,15217,15218,15219,15220,15221,15222,15223,15224,15225,15226,15227,15228,15229,15230,15231,15232,15233,15234,15235,15236,15237,15238,15239,15240,15241,15242,15243,15244,15245,15246,15247,15248,15249,15250,15251,15252,15253,15254,15255,15256,15257,15258,15259,15260,15261,15262,15263,15264,15265,15266,15267,15268,15269,15270,15271,15272,15273,15274,15275,15276,15277,15278,15279,15280,15281,15282,15283,15284,15285,15286,15287,15288,15289,15290,15291,15292,15293,15294,15295,15296,15297,15298,15299,15300,15301,15302,15303,15304,15305,15306,15307,15308,15309,15310,15311,15312,15313,15314,15315,15316,15317,15318,15319,15320,15321,15322,15323,15324,15325,15326,15327,15328,15329,15330,15331,15332,15333,15334,15335,15336,15337,15338,15339,15340,15341,15342,15343,15344,15345,15346,15347,15348,15349,15350,15351,15352,15353,15354,15355,15356,15357,15358,15359,15360,15361,15362,15363,15364,15365,15366,15367,15368,15369,15370,15371,15372,15373,15374,15375,15376,15377,15378,15379,15380,15381,15382,15383,15384,15385,15386,15387,15388,15389,15390,15391,15392,15393,15394,15395,15396,15397,15398,15399,15400,15401,15402,15403,15404,15405,15406,15407,15408,15409,15410,15411,15412,15413,15414,15415,15416,15417,15418,15419,15420,15421,15422,15423,15424,15425,15426,15427,15428,15429,15430,15431,15432,15433,15434,15435,15436,15437,15438,15439,15440,15441,15442,15443,15444,15445,15446,15447,15448,15449,15450,15451,15452,15453,15454,15455,15456,15457,15458,15459,15460,15461,15462,15463,15464,15465,15466,15467,15468,15469,15470,15471,15472,15473,15474,15475,15476,15477,15478,15479,15480,15481,15482,15483,15484,15485,15486,15487,15488,15489,15490,15491,15492,15493,15494,15495,15496,15497,15498,15499,15500,15501,15502,15503,15504,15505,15506,15507,15508,15509,15510,15511,15512,15513,15514,15515,15516,15517,15518,15519,15520,15521,15522,15523,15524,15525,15526,15527,15528,15529,15530,15531,15532,15533,15534,15535,15536,15537,15538,15539,15540,15541,15542,15543,15544,15545,15546,15547,15548,15549,15550,15551,15552,15553,15554,15555,15556,15557,15558,15559,15560,15561,15562,15563,15564,15565,15566,15567,15568,15569,15570,15571,15572,15573,15574,15575,15576,15577,15578,15579,15580,15581,15582,15583,15584,15585,15586,15587,15588,15589,15590,15591,15592,15593,15594,15595,15596,15597,15598,15599,15600,15601,15602,15603,15604,15605,15606,15607,15608,15609,15610,15611,15612,15613,15614,15615,15616,15617,15618,15619,15620,15621,15622,15623,15624,15625,15626,15627,15628,15629,15630,15631,15632,15633,15634,15635,15636,15637,15638,15639,15640,15641,15642,15643,15644,15645,15646,15647,15648,15649,15650,15651,15652,15653,15654,15655,15656,15657,15658,15659,15660,15661,15662,15663,15664,15665,15666,15667,15668,15669,15670,15671,15672,15673,15674,15675,15676,15677,15678,15679,15680,15681,15682,15683,15684,15685,15686,15687,15688,15689,15690,15691,15692,15693,15694,15695,15696,15697,15698,15699,15700,15701,15702,15703,15704,15705,15706,15707,15708,15709,15710,15711,15712,15713,15714,15715,15716,15717,15718,15719,15720,15721,15722,15723,15724,15725,15726,15727,15728,15729,15730,15731,15732,15733,15734,15735,15736,15737,15738,15739,15740,15741,15742,15743,15744,15745,15746,15747,15748,15749,15750,15751,15752,15753,15754,15755,15756,15757,15758,15759,15760,15761,15762,15763,15764,15765,15766,15767,15768,15769,15770,15771,15772,15773,15774,15775,15776,15777,15778,15779,15780,15781,15782,15783,15784,15785,15786,15787,15788,15789,15790,15791,15792,15793,15794,15795,15796,15797,15798,15799,15800,15801,15802,15803,15804,15805,15806,15807,15808,15809,15810,15811,15812,15813,15814,15815,15816,15817,15818,15819,15820,15821,15822,15823,15824,15825,15826,15827,15828,15829,15830,15831,15832,15833,15834,15835,15836,15837,15838,15839,15840,15841,15842,15843,15844,15845,15846,15847,15848,15849,15850,15851,15852,15853,15854,15855,15856,15857,15858,15859,15860,15861,15862,15863,15864,15865,15866,15867,15868,15869,15870,15871,15872,15873,15874,15875,15876,15877,15878,15879,15880,15881,15882,15883,15884,15885,15886,15887,15888,15889,15890,15891,15892,15893,15894,15895,15896,15897,15898,15899,15900,15901,15902,15903,15904,15905,15906,15907,15908,15909,15910,15911,15912,15913,15914,15915,15916,15917,15918,15919,15920,15921,15922,15923,15924,15925,15926,15927,15928,15929,15930,15931,15932,15933,15934,15935,15936,15937,15938,15939,15940,15941,15942,15943,15944,15945,15946,15947,15948,15949,15950,15951,15952,15953,15954,15955,15956,15957,15958,15959,15960,15961,15962,15963,15964,15965,15966,15967,15968,15969,15970,15971,15972,15973,15974,15975,15976,15977,15978,15979,15980,15981,15982,15983,15984,15985,15986,15987,15988,15989,15990,15991,15992,15993,15994,15995,15996,15997,15998,15999,16e3,16001,16002,16003,16004,16005,16006,16007,16008,16009,16010,16011,16012,16013,16014,16015,16016,16017,16018,16019,16020,16021,16022,16023,16024,16025,16026,16027,16028,16029,16030,16031,16032,16033,16034,16035,16036,16037,16038,16039,16040,16041,16042,16043,16044,16045,16046,16047,16048,16049,16050,16051,16052,16053,16054,16055,16056,16057,16058,16059,16060,16061,16062,16063,16064,16065,16066,16067,16068,16069,16070,16071,16072,16073,16074,16075,16076,16077,16078,16079,16080,16081,16082,16083,16084,16085,16086,16087,16088,16089,16090,16091,16092,16093,16094,16095,16096,16097,16098,16099,16100,16101,16102,16103,16104,16105,16106,16107,16108,16109,16110,16111,16112,16113,16114,16115,16116,16117,16118,16119,16120,16121,16122,16123,16124,16125,16126,16127,16128,16129,16130,16131,16132,16133,16134,16135,16136,16137,16138,16139,16140,16141,16142,16143,16144,16145,16146,16147,16148,16149,16150,16151,16152,16153,16154,16155,16156,16157,16158,16159,16160,16161,16162,16163,16164,16165,16166,16167,16168,16169,16170,16171,16172,16173,16174,16175,16176,16177,16178,16179,16180,16181,16182,16183,16184,16185,16186,16187,16188,16189,16190,16191,16192,16193,16194,16195,16196,16197,16198,16199,16200,16201,16202,16203,16204,16205,16206,16207,16208,16209,16210,16211,16212,16213,16214,16215,16216,16217,16218,16219,16220,16221,16222,16223,16224,16225,16226,16227,16228,16229,16230,16231,16232,16233,16234,16235,16236,16237,16238,16239,16240,16241,16242,16243,16244,16245,16246,16247,16248,16249,16250,16251,16252,16253,16254,16255,16256,16257,16258,16259,16260,16261,16262,16263,16264,16265,16266,16267,16268,16269,16270,16271,16272,16273,16274,16275,16276,16277,16278,16279,16280,16281,16282,16283,16284,16285,16286,16287,16288,16289,16290,16291,16292,16293,16294,16295,16296,16297,16298,16299,16300,16301,16302,16303,16304,16305,16306,16307,16308,16309,16310,16311,16312,16313,16314,16315,16316,16317,16318,16319,16320,16321,16322,16323,16324,16325,16326,16327,16328,16329,16330,16331,16332,16333,16334,16335,16336,16337,16338,16339,16340,16341,16342,16343,16344,16345,16346,16347,16348,16349,16350,16351,16352,16353,16354,16355,16356,16357,16358,16359,16360,16361,16362,16363,16364,16365,16366,16367,16368,16369,16370,16371,16372,16373,16374,16375,16376,16377,16378,16379,16380,16381,16382,16383,16384,16385,16386,16387,16388,16389,16390,16391,16392,16393,16394,16395,16396,16397,16398,16399,16400,16401,16402,16403,16404,16405,16406,16407,16408,16409,16410,16411,16412,16413,16414,16415,16416,16417,16418,16419,16420,16421,16422,16423,16424,16425,16426,16427,16428,16429,16430,16431,16432,16433,16434,16435,16436,16437,16438,16439,16440,16441,16442,16443,16444,16445,16446,16447,16448,16449,16450,16451,16452,16453,16454,16455,16456,16457,16458,16459,16460,16461,16462,16463,16464,16465,16466,16467,16468,16469,16470,16471,16472,16473,16474,16475,16476,16477,16478,16479,16480,16481,16482,16483,16484,16485,16486,16487,16488,16489,16490,16491,16492,16493,16494,16495,16496,16497,16498,16499,16500,16501,16502,16503,16504,16505,16506,16507,16508,16509,16510,16511,16512,16513,16514,16515,16516,16517,16518,16519,16520,16521,16522,16523,16524,16525,16526,16527,16528,16529,16530,16531,16532,16533,16534,16535,16536,16537,16538,16539,16540,16541,16542,16543,16544,16545,16546,16547,16548,16549,16550,16551,16552,16553,16554,16555,16556,16557,16558,16559,16560,16561,16562,16563,16564,16565,16566,16567,16568,16569,16570,16571,16572,16573,16574,16575,16576,16577,16578,16579,16580,16581,16582,16583,16584,16585,16586,16587,16588,16589,16590,16591,16592,16593,16594,16595,16596,16597,16598,16599,16600,16601,16602,16603,16604,16605,16606,16607,16608,16609,16610,16611,16612,16613,16614,16615,16616,16617,16618,16619,16620,16621,16622,16623,16624,16625,16626,16627,16628,16629,16630,16631,16632,16633,16634,16635,16636,16637,16638,16639,16640,16641,16642,16643,16644,16645,16646,16647,16648,16649,16650,16651,16652,16653,16654,16655,16656,16657,16658,16659,16660,16661,16662,16663,16664,16665,16666,16667,16668,16669,16670,16671,16672,16673,16674,16675,16676,16677,16678,16679,16680,16681,16682,16683,16684,16685,16686,16687,16688,16689,16690,16691,16692,16693,16694,16695,16696,16697,16698,16699,16700,16701,16702,16703,16704,16705,16706,16707,16708,16709,16710,16711,16712,16713,16714,16715,16716,16717,16718,16719,16720,16721,16722,16723,16724,16725,16726,16727,16728,16729,16730,16731,16732,16733,16734,16735,16736,16737,16738,16739,16740,16741,16742,16743,16744,16745,16746,16747,16748,16749,16750,16751,16752,16753,16754,16755,16756,16757,16758,16759,16760,16761,16762,16763,16764,16765,16766,16767,16768,16769,16770,16771,16772,16773,16774,16775,16776,16777,16778,16779,16780,16781,16782,16783,16784,16785,16786,16787,16788,16789,16790,16791,16792,16793,16794,16795,16796,16797,16798,16799,16800,16801,16802,16803,16804,16805,16806,16807,16808,16809,16810,16811,16812,16813,16814,16815,16816,16817,16818,16819,16820,16821,16822,16823,16824,16825,16826,16827,16828,16829,16830,16831,16832,16833,16834,16835,16836,16837,16838,16839,16840,16841,16842,16843,16844,16845,16846,16847,16848,16849,16850,16851,16852,16853,16854,16855,16856,16857,16858,16859,16860,16861,16862,16863,16864,16865,16866,16867,16868,16869,16870,16871,16872,16873,16874,16875,16876,16877,16878,16879,16880,16881,16882,16883,16884,16885,16886,16887,16888,16889,16890,16891,16892,16893,16894,16895,16896,16897,16898,16899,16900,16901,16902,16903,16904,16905,16906,16907,16908,16909,16910,16911,16912,16913,16914,16915,16916,16917,16918,16919,16920,16921,16922,16923,16924,16925,16926,16927,16928,16929,16930,16931,16932,16933,16934,16935,16936,16937,16938,16939,16940,16941,16942,16943,16944,16945,16946,16947,16948,16949,16950,16951,16952,16953,16954,16955,16956,16957,16958,16959,16960,16961,16962,16963,16964,16965,16966,16967,16968,16969,16970,16971,16972,16973,16974,16975,16976,16977,16978,16979,16980,16981,16982,16983,16984,16985,16986,16987,16988,16989,16990,16991,16992,16993,16994,16995,16996,16997,16998,16999,17e3,17001,17002,17003,17004,17005,17006,17007,17008,17009,17010,17011,17012,17013,17014,17015,17016,17017,17018,17019,17020,17021,17022,17023,17024,17025,17026,17027,17028,17029,17030,17031,17032,17033,17034,17035,17036,17037,17038,17039,17040,17041,17042,17043,17044,17045,17046,17047,17048,17049,17050,17051,17052,17053,17054,17055,17056,17057,17058,17059,17060,17061,17062,17063,17064,17065,17066,17067,17068,17069,17070,17071,17072,17073,17074,17075,17076,17077,17078,17079,17080,17081,17082,17083,17084,17085,17086,17087,17088,17089,17090,17091,17092,17093,17094,17095,17096,17097,17098,17099,17100,17101,17102,17103,17104,17105,17106,17107,17108,17109,17110,17111,17112,17113,17114,17115,17116,17117,17118,17119,17120,17121,17122,17123,17124,17125,17126,17127,17128,17129,17130,17131,17132,17133,17134,17135,17136,17137,17138,17139,17140,17141,17142,17143,17144,17145,17146,17147,17148,17149,17150,17151,17152,17153,17154,17155,17156,17157,17158,17159,17160,17161,17162,17163,17164,17165,17166,17167,17168,17169,17170,17171,17172,17173,17174,17175,17176,17177,17178,17179,17180,17181,17182,17183,17184,17185,17186,17187,17188,17189,17190,17191,17192,17193,17194,17195,17196,17197,17198,17199,17200,17201,17202,17203,17204,17205,17206,17207,17208,17209,17210,17211,17212,17213,17214,17215,17216,17217,17218,17219,17220,17221,17222,17223,17224,17225,17226,17227,17228,17229,17230,17231,17232,17233,17234,17235,17236,17237,17238,17239,17240,17241,17242,17243,17244,17245,17246,17247,17248,17249,17250,17251,17252,17253,17254,17255,17256,17257,17258,17259,17260,17261,17262,17263,17264,17265,17266,17267,17268,17269,17270,17271,17272,17273,17274,17275,17276,17277,17278,17279,17280,17281,17282,17283,17284,17285,17286,17287,17288,17289,17290,17291,17292,17293,17294,17295,17296,17297,17298,17299,17300,17301,17302,17303,17304,17305,17306,17307,17308,17309,17310,17311,17312,17313,17314,17315,17316,17317,17318,17319,17320,17321,17322,17323,17324,17325,17326,17327,17328,17329,17330,17331,17332,17333,17334,17335,17336,17337,17338,17339,17340,17341,17342,17343,17344,17345,17346,17347,17348,17349,17350,17351,17352,17353,17354,17355,17356,17357,17358,17359,17360,17361,17362,17363,17364,17365,17366,17367,17368,17369,17370,17371,17372,17373,17374,17375,17376,17377,17378,17379,17380,17381,17382,17383,17384,17385,17386,17387,17388,17389,17390,17391,17392,17393,17394,17395,17396,17397,17398,17399,17400,17401,17402,17403,17404,17405,17406,17407,17408,17409,17410,17411,17412,17413,17414,17415,17416,17417,17418,17419,17420,17421,17422,17423,17424,17425,17426,17427,17428,17429,17430,17431,17432,17433,17434,17435,17436,17437,17438,17439,17440,17441,17442,17443,17444,17445,17446,17447,17448,17449,17450,17451,17452,17453,17454,17455,17456,17457,17458,17459,17460,17461,17462,17463,17464,17465,17466,17467,17468,17469,17470,17471,17472,17473,17474,17475,17476,17477,17478,17479,17480,17481,17482,17483,17484,17485,17486,17487,17488,17489,17490,17491,17492,17493,17494,17495,17496,17497,17498,17499,17500,17501,17502,17503,17504,17505,17506,17507,17508,17509,17510,17511,17512,17513,17514,17515,17516,17517,17518,17519,17520,17521,17522,17523,17524,17525,17526,17527,17528,17529,17530,17531,17532,17533,17534,17535,17536,17537,17538,17539,17540,17541,17542,17543,17544,17545,17546,17547,17548,17549,17550,17551,17552,17553,17554,17555,17556,17557,17558,17559,17560,17561,17562,17563,17564,17565,17566,17567,17568,17569,17570,17571,17572,17573,17574,17575,17576,17577,17578,17579,17580,17581,17582,17583,17584,17585,17586,17587,17588,17589,17590,17591,17592,17593,17594,17595,17596,17597,17598,17599,17600,17601,17602,17603,17604,17605,17606,17607,17608,17609,17610,17611,17612,17613,17614,17615,17616,17617,17618,17619,17620,17621,17622,17623,17624,17625,17626,17627,17628,17629,17630,17631,17632,17633,17634,17635,17636,17637,17638,17639,17640,17641,17642,17643,17644,17645,17646,17647,17648,17649,17650,17651,17652,17653,17654,17655,17656,17657,17658,17659,17660,17661,17662,17663,17664,17665,17666,17667,17668,17669,17670,17671,17672,17673,17674,17675,17676,17677,17678,17679,17680,17681,17682,17683,17684,17685,17686,17687,17688,17689,17690,17691,17692,17693,17694,17695,17696,17697,17698,17699,17700,17701,17702,17703,17704,17705,17706,17707,17708,17709,17710,17711,17712,17713,17714,17715,17716,17717,17718,17719,17720,17721,17722,17723,17724,17725,17726,17727,17728,17729,17730,17731,17732,17733,17734,17735,17736,17737,17738,17739,17740,17741,17742,17743,17744,17745,17746,17747,17748,17749,17750,17751,17752,17753,17754,17755,17756,17757,17758,17759,17760,17761,17762,17763,17764,17765,17766,17767,17768,17769,17770,17771,17772,17773,17774,17775,17776,17777,17778,17779,17780,17781,17782,17783,17784,17785,17786,17787,17788,17789,17790,17791,17792,17793,17794,17795,17796,17797,17798,17799,17800,17801,17802,17803,17804,17805,17806,17807,17808,17809,17810,17811,17812,17813,17814,17815,17816,17817,17818,17819,17820,17821,17822,17823,17824,17825,17826,17827,17828,17829,17830,17831,17832,17833,17834,17835,17836,17837,17838,17839,17840,17841,17842,17843,17844,17845,17846,17847,17848,17849,17850,17851,17852,17853,17854,17855,17856,17857,17858,17859,17860,17861,17862,17863,17864,17865,17866,17867,17868,17869,17870,17871,17872,17873,17874,17875,17876,17877,17878,17879,17880,17881,17882,17883,17884,17885,17886,17887,17888,17889,17890,17891,17892,17893,17894,17895,17896,17897,17898,17899,17900,17901,17902,17903,17904,17905,17906,17907,17908,17909,17910,17911,17912,17913,17914,17915,17916,17917,17918,17919,17920,17921,17922,17923,17924,17925,17926,17927,17928,17929,17930,17931,17932,17933,17934,17935,17936,17937,17938,17939,17940,17941,17942,17943,17944,17945,17946,17947,17948,17949,17950,17951,17952,17953,17954,17955,17956,17957,17958,17959,17960,17961,17962,17963,17964,17965,17966,17967,17968,17969,17970,17971,17972,17973,17974,17975,17976,17977,17978,17979,17980,17981,17982,17983,17984,17985,17986,17987,17988,17989,17990,17991,17992,17993,17994,17995,17996,17997,17998,17999,18e3,18001,18002,18003,18004,18005,18006,18007,18008,18009,18010,18011,18012,18013,18014,18015,18016,18017,18018,18019,18020,18021,18022,18023,18024,18025,18026,18027,18028,18029,18030,18031,18032,18033,18034,18035,18036,18037,18038,18039,18040,18041,18042,18043,18044,18045,18046,18047,18048,18049,18050,18051,18052,18053,18054,18055,18056,18057,18058,18059,18060,18061,18062,18063,18064,18065,18066,18067,18068,18069,18070,18071,18072,18073,18074,18075,18076,18077,18078,18079,18080,18081,18082,18083,18084,18085,18086,18087,18088,18089,18090,18091,18092,18093,18094,18095,18096,18097,18098,18099,18100,18101,18102,18103,18104,18105,18106,18107,18108,18109,18110,18111,18112,18113,18114,18115,18116,18117,18118,18119,18120,18121,18122,18123,18124,18125,18126,18127,18128,18129,18130,18131,18132,18133,18134,18135,18136,18137,18138,18139,18140,18141,18142,18143,18144,18145,18146,18147,18148,18149,18150,18151,18152,18153,18154,18155,18156,18157,18158,18159,18160,18161,18162,18163,18164,18165,18166,18167,18168,18169,18170,18171,18172,18173,18174,18175,18176,18177,18178,18179,18180,18181,18182,18183,18184,18185,18186,18187,18188,18189,18190,18191,18192,18193,18194,18195,18196,18197,18198,18199,18200,18201,18202,18203,18204,18205,18206,18207,18208,18209,18210,18211,18212,18213,18214,18215,18216,18217,18218,18219,18220,18221,18222,18223,18224,18225,18226,18227,18228,18229,18230,18231,18232,18233,18234,18235,18236,18237,18238,18239,18240,18241,18242,18243,18244,18245,18246,18247,18248,18249,18250,18251,18252,18253,18254,18255,18256,18257,18258,18259,18260,18261,18262,18263,18264,18265,18266,18267,18268,18269,18270,18271,18272,18273,18274,18275,18276,18277,18278,18279,18280,18281,18282,18283,18284,18285,18286,18287,18288,18289,18290,18291,18292,18293,18294,18295,18296,18297,18298,18299,18300,18301,18302,18303,18304,18305,18306,18307,18308,18309,18310,18311,18312,18313,18314,18315,18316,18317,18318,18319,18320,18321,18322,18323,18324,18325,18326,18327,18328,18329,18330,18331,18332,18333,18334,18335,18336,18337,18338,18339,18340,18341,18342,18343,18344,18345,18346,18347,18348,18349,18350,18351,18352,18353,18354,18355,18356,18357,18358,18359,18360,18361,18362,18363,18364,18365,18366,18367,18368,18369,18370,18371,18372,18373,18374,18375,18376,18377,18378,18379,18380,18381,18382,18383,18384,18385,18386,18387,18388,18389,18390,18391,18392,18393,18394,18395,18396,18397,18398,18399,18400,18401,18402,18403,18404,18405,18406,18407,18408,18409,18410,18411,18412,18413,18414,18415,18416,18417,18418,18419,18420,18421,18422,18423,18424,18425,18426,18427,18428,18429,18430,18431,18432,18433,18434,18435,18436,18437,18438,18439,18440,18441,18442,18443,18444,18445,18446,18447,18448,18449,18450,18451,18452,18453,18454,18455,18456,18457,18458,18459,18460,18461,18462,18463,18464,18465,18466,18467,18468,18469,18470,18471,18472,18473,18474,18475,18476,18477,18478,18479,18480,18481,18482,18483,18484,18485,18486,18487,18488,18489,18490,18491,18492,18493,18494,18495,18496,18497,18498,18499,18500,18501,18502,18503,18504,18505,18506,18507,18508,18509,18510,18511,18512,18513,18514,18515,18516,18517,18518,18519,18520,18521,18522,18523,18524,18525,18526,18527,18528,18529,18530,18531,18532,18533,18534,18535,18536,18537,18538,18539,18540,18541,18542,18543,18544,18545,18546,18547,18548,18549,18550,18551,18552,18553,18554,18555,18556,18557,18558,18559,18560,18561,18562,18563,18564,18565,18566,18567,18568,18569,18570,18571,18572,18573,18574,18575,18576,18577,18578,18579,18580,18581,18582,18583,18584,18585,18586,18587,18588,18589,18590,18591,18592,18593,18594,18595,18596,18597,18598,18599,18600,18601,18602,18603,18604,18605,18606,18607,18608,18609,18610,18611,18612,18613,18614,18615,18616,18617,18618,18619,18620,18621,18622,18623,18624,18625,18626,18627,18628,18629,18630,18631,18632,18633,18634,18635,18636,18637,18638,18639,18640,18641,18642,18643,18644,18645,18646,18647,18648,18649,18650,18651,18652,18653,18654,18655,18656,18657,18658,18659,18660,18661,18662,18663,18664,18665,18666,18667,18668,18669,18670,18671,18672,18673,18674,18675,18676,18677,18678,18679,18680,18681,18682,18683,18684,18685,18686,18687,18688,18689,18690,18691,18692,18693,18694,18695,18696,18697,18698,18699,18700,18701,18702,18703,18704,18705,18706,18707,18708,18709,18710,18711,18712,18713,18714,18715,18716,18717,18718,18719,18720,18721,18722,18723,18724,18725,18726,18727,18728,18729,18730,18731,18732,18733,18734,18735,18736,18737,18738,18739,18740,18741,18742,18743,18744,18745,18746,18747,18748,18749,18750,18751,18752,18753,18754,18755,18756,18757,18758,18759,18760,18761,18762,18763,18764,18765,18766,18767,18768,18769,18770,18771,18772,18773,18774,18775,18776,18777,18778,18779,18780,18781,18782,18783,18784,18785,18786,18787,18788,18789,18790,18791,18792,18793,18794,18795,18796,18797,18798,18799,18800,18801,18802,18803,18804,18805,18806,18807,18808,18809,18810,18811,18812,18813,18814,18815,18816,18817,18818,18819,18820,18821,18822,18823,18824,18825,18826,18827,18828,18829,18830,18831,18832,18833,18834,18835,18836,18837,18838,18839,18840,18841,18842,18843,18844,18845,18846,18847,18848,18849,18850,18851,18852,18853,18854,18855,18856,18857,18858,18859,18860,18861,18862,18863,18864,18865,18866,18867,18868,18869,18870,18871,18872,18873,18874,18875,18876,18877,18878,18879,18880,18881,18882,18883,18884,18885,18886,18887,18888,18889,18890,18891,18892,18893,18894,18895,18896,18897,18898,18899,18900,18901,18902,18903,18904,18905,18906,18907,18908,18909,18910,18911,18912,18913,18914,18915,18916,18917,18918,18919,18920,18921,18922,18923,18924,18925,18926,18927,18928,18929,18930,18931,18932,18933,18934,18935,18936,18937,18938,18939,18940,18941,18942,18943,18944,18945,18946,18947,18948,18949,18950,18951,18952,18953,18954,18955,18956,18957,18958,18959,18960,18961,18962,18963,18964,18965,18966,18967,18968,18969,18970,18971,18972,18973,18974,18975,18976,18977,18978,18979,18980,18981,18982,18983,18984,18985,18986,18987,18988,18989,18990,18991,18992,18993,18994,18995,18996,18997,18998,18999,19e3,19001,19002,19003,19004,19005,19006,19007,19008,19009,19010,19011,19012,19013,19014,19015,19016,19017,19018,19019,19020,19021,19022,19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053,19054,19055,19056,19057,19058,19059,19060,19061,19062,19063,19064,19065,19066,19067,19068,19069,19070,19071,19072,19073,19074,19075,19076,19077,19078,19079,19080,19081,19082,19083,19084,19085,19086,19087,19088,19089,19090,19091,19092,19093,19094,19095,19096,19097,19098,19099,19100,19101,19102,19103,19104,19105,19106,19107,19108,19109,19110,19111,19112,19113,19114,19115,19116,19117,19118,19119,19120,19121,19122,19123,19124,19125,19126,19127,19128,19129,19130,19131,19132,19133,19134,19135,19136,19137,19138,19139,19140,19141,19142,19143,19144,19145,19146,19147,19148,19149,19150,19151,19152,19153,19154,19155,19156,19157,19158,19159,19160,19161,19162,19163,19164,19165,19166,19167,19168,19169,19170,19171,19172,19173,19174,19175,19176,19177,19178,19179,19180,19181,19182,19183,19184,19185,19186,19187,19188,19189,19190,19191,19192,19193,19194,19195,19196,19197,19198,19199,19200,19201,19202,19203,19204,19205,19206,19207,19208,19209,19210,19211,19212,19213,19214,19215,19216,19217,19218,19219,19220,19221,19222,19223,19224,19225,19226,19227,19228,19229,19230,19231,19232,19233,19234,19235,19236,19237,19238,19239,19240,19241,19242,19243,19244,19245,19246,19247,19248,19249,19250,19251,19252,19253,19254,19255,19256,19257,19258,19259,19260,19261,19262,19263,19264,19265,19266,19267,19268,19269,19270,19271,19272,19273,19274,19275,19276,19277,19278,19279,19280,19281,19282,19283,19284,19285,19286,19287,19288,19289,19290,19291,19292,19293,19294,19295,19296,19297,19298,19299,19300,19301,19302,19303,19304,19305,19306,19307,19308,19309,19310,19311,19312,19313,19314,19315,19316,19317,19318,19319,19320,19321,19322,19323,19324,19325,19326,19327,19328,19329,19330,19331,19332,19333,19334,19335,19336,19337,19338,19339,19340,19341,19342,19343,19344,19345,19346,19347,19348,19349,19350,19351,19352,19353,19354,19355,19356,19357,19358,19359,19360,19361,19362,19363,19364,19365,19366,19367,19368,19369,19370,19371,19372,19373,19374,19375,19376,19377,19378,19379,19380,19381,19382,19383,19384,19385,19386,19387,19388,19389,19390,19391,19392,19393,19394,19395,19396,19397,19398,19399,19400,19401,19402,19403,19404,19405,19406,19407,19408,19409,19410,19411,19412,19413,19414,19415,19416,19417,19418,19419,19420,19421,19422,19423,19424,19425,19426,19427,19428,19429,19430,19431,19432,19433,19434,19435,19436,19437,19438,19439,19440,19441,19442,19443,19444,19445,19446,19447,19448,19449,19450,19451,19452,19453,19454,19455,19456,19457,19458,19459,19460,19461,19462,19463,19464,19465,19466,19467,19468,19469,19470,19471,19472,19473,19474,19475,19476,19477,19478,19479,19480,19481,19482,19483,19484,19485,19486,19487,19488,19489,19490,19491,19492,19493,19494,19495,19496,19497,19498,19499,19500,19501,19502,19503,19504,19505,19506,19507,19508,19509,19510,19511,19512,19513,19514,19515,19516,19517,19518,19519,19520,19521,19522,19523,19524,19525,19526,19527,19528,19529,19530,19531,19532,19533,19534,19535,19536,19537,19538,19539,19540,19541,19542,19543,19544,19545,19546,19547,19548,19549,19550,19551,19552,19553,19554,19555,19556,19557,19558,19559,19560,19561,19562,19563,19564,19565,19566,19567,19568,19569,19570,19571,19572,19573,19574,19575,19576,19577,19578,19579,19580,19581,19582,19583,19584,19585,19586,19587,19588,19589,19590,19591,19592,19593,19594,19595,19596,19597,19598,19599,19600,19601,19602,19603,19604,19605,19606,19607,19608,19609,19610,19611,19612,19613,19614,19615,19616,19617,19618,19619,19620,19621,19622,19623,19624,19625,19626,19627,19628,19629,19630,19631,19632,19633,19634,19635,19636,19637,19638,19639,19640,19641,19642,19643,19644,19645,19646,19647,19648,19649,19650,19651,19652,19653,19654,19655,19656,19657,19658,19659,19660,19661,19662,19663,19664,19665,19666,19667,19668,19669,19670,19671,19672,19673,19674,19675,19676,19677,19678,19679,19680,19681,19682,19683,19684,19685,19686,19687,19688,19689,19690,19691,19692,19693,19694,19695,19696,19697,19698,19699,19700,19701,19702,19703,19704,19705,19706,19707,19708,19709,19710,19711,19712,19713,19714,19715,19716,19717,19718,19719,19720,19721,19722,19723,19724,19725,19726,19727,19728,19729,19730,19731,19732,19733,19734,19735,19736,19737,19738,19739,19740,19741,19742,19743,19744,19745,19746,19747,19748,19749,19750,19751,19752,19753,19754,19755,19756,19757,19758,19759,19760,19761,19762,19763,19764,19765,19766,19767,19768,19769,19770,19771,19772,19773,19774,19775,19776,19777,19778,19779,19780,19781,19782,19783,19784,19785,19786,19787,19788,19789,19790,19791,19792,19793,19794,19795,19796,19797,19798,19799,19800,19801,19802,19803,19804,19805,19806,19807,19808,19809,19810,19811,19812,19813,19814,19815,19816,19817,19818,19819,19820,19821,19822,19823,19824,19825,19826,19827,19828,19829,19830,19831,19832,19833,19834,19835,19836,19837,19838,19839,19840,19841,19842,19843,19844,19845,19846,19847,19848,19849,19850,19851,19852,19853,19854,19855,19856,19857,19858,19859,19860,19861,19862,19863,19864,19865,19866,19867,19868,19869,19870,19871,19872,19873,19874,19875,19876,19877,19878,19879,19880,19881,19882,19883,19884,19885,19886,19887,19888,19889,19890,19891,19892,19893,19894,19895,19896,19897,19898,19899,19900,19901,19902,19903,19904,19905,19906,19907,19908,19909,19910,19911,19912,19913,19914,19915,19916,19917,19918,19919,19920,19921,19922,19923,19924,19925,19926,19927,19928,19929,19930,19931,19932,19933,19934,19935,19936,19937,19938,19939,19940,19941,19942,19943,19944,19945,19946,19947,19948,19949,19950,19951,19952,19953,19954,19955,19956,19957,19958,19959,19960,19961,19962,19963,19964,19965,19966,19967,19968,19969,19970,19971,19972,19973,19974,19975,19976,19977,19978,19979,19980,19981,19982,19983,19984,19985,19986,19987,19988,19989,19990,19991,19992,19993,19994,19995,19996,19997,19998,19999,2e4,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,20011,20012,20013,20014,20015,20016,20017,20018,20019,20020,20021,20022,20023,20024,20025,20026,20027,20028,20029,20030,20031,20032,20033,20034,20035,20036,20037,20038,20039,20040,20041,20042,20043,20044,20045,20046,20047,20048,20049,20050,20051,20052,20053,20054,20055,20056,20057,20058,20059,20060,20061,20062,20063,20064,20065,20066,20067,20068,20069,20070,20071,20072,20073,20074,20075,20076,20077,20078,20079,20080,20081,20082,20083,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20094,20095,20096,20097,20098,20099,20100,20101,20102,20103,20104,20105,20106,20107,20108,20109,20110,20111,20112,20113,20114,20115,20116,20117,20118,20119,20120,20121,20122,20123,20124,20125,20126,20127,20128,20129,20130,20131,20132,20133,20134,20135,20136,20137,20138,20139,20140,20141,20142,20143,20144,20145,20146,20147,20148,20149,20150,20151,20152,20153,20154,20155,20156,20157,20158,20159,20160,20161,20162,20163,20164,20165,20166,20167,20168,20169,20170,20171,20172,20173,20174,20175,20176,20177,20178,20179,20180,20181,20182,20183,20184,20185,20186,20187,20188,20189,20190,20191,20192,20193,20194,20195,20196,20197,20198,20199,20200,20201,20202,20203,20204,20205,20206,20207,20208,20209,20210,20211,20212,20213,20214,20215,20216,20217,20218,20219,20220,20221,20222,20223,20224,20225,20226,20227,20228,20229,20230,20231,20232,20233,20234,20235,20236,20237,20238,20239,20240,20241,20242,20243,20244,20245,20246,20247,20248,20249,20250,20251,20252,20253,20254,20255,20256,20257,20258,20259,20260,20261,20262,20263,20264,20265,20266,20267,20268,20269,20270,20271,20272,20273,20274,20275,20276,20277,20278,20279,20280,20281,20282,20283,20284,20285,20286,20287,20288,20289,20290,20291,20292,20293,20294,20295,20296,20297,20298,20299,20300,20301,20302,20303,20304,20305,20306,20307,20308,20309,20310,20311,20312,20313,20314,20315,20316,20317,20318,20319,20320,20321,20322,20323,20324,20325,20326,20327,20328,20329,20330,20331,20332,20333,20334,20335,20336,20337,20338,20339,20340,20341,20342,20343,20344,20345,20346,20347,20348,20349,20350,20351,20352,20353,20354,20355,20356,20357,20358,20359,20360,20361,20362,20363,20364,20365,20366,20367,20368,20369,20370,20371,20372,20373,20374,20375,20376,20377,20378,20379,20380,20381,20382,20383,20384,20385,20386,20387,20388,20389,20390,20391,20392,20393,20394,20395,20396,20397,20398,20399,20400,20401,20402,20403,20404,20405,20406,20407,20408,20409,20410,20411,20412,20413,20414,20415,20416,20417,20418,20419,20420,20421,20422,20423,20424,20425,20426,20427,20428,20429,20430,20431,20432,20433,20434,20435,20436,20437,20438,20439,20440,20441,20442,20443,20444,20445,20446,20447,20448,20449,20450,20451,20452,20453,20454,20455,20456,20457,20458,20459,20460,20461,20462,20463,20464,20465,20466,20467,20468,20469,20470,20471,20472,20473,20474,20475,20476,20477,20478,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20492,20493,20494,20495,20496,20497,20498,20499,20500,20501,20502,20503,20504,20505,20506,20507,20508,20509,20510,20511,20512,20513,20514,20515,20516,20517,20518,20519,20520,20521,20522,20523,20524,20525,20526,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20538,20539,20540,20541,20542,20543,20544,20545,20546,20547,20548,20549,20550,20551,20552,20553,20554,20555,20556,20557,20558,20559,20560,20561,20562,20563,20564,20565,20566,20567,20568,20569,20570,20571,20572,20573,20574,20575,20576,20577,20578,20579,20580,20581,20582,20583,20584,20585,20586,20587,20588,20589,20590,20591,20592,20593,20594,20595,20596,20597,20598,20599,20600,20601,20602,20603,20604,20605,20606,20607,20608,20609,20610,20611,20612,20613,20614,20615,20616,20617,20618,20619,20620,20621,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20643,20644,20645,20646,20647,20648,20649,20650,20651,20652,20653,20654,20655,20656,20657,20658,20659,20660,20661,20662,20663,20664,20665,20666,20667,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20687,20688,20689,20690,20691,20692,20693,20694,20695,20696,20697,20698,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20710,20711,20712,20713,20714,20715,20716,20717,20718,20719,20720,20721,20722,20723,20724,20725,20726,20727,20728,20729,20730,20731,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20742,20743,20744,20745,20746,20747,20748,20749,20750,20751,20752,20753,20754,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20769,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20799,20800,20801,20802,20803,20804,20805,20806,20807,20808,20809,20810,20811,20812,20813,20814,20815,20816,20817,20818,20819,20820,20821,20822,20823,20824,20825,20826,20827,20828,20829,20830,20831,20832,20833,20834,20835,20836,20837,20838,20839,20840,20841,20842,20843,20844,20845,20846,20847,20848,20849,20850,20851,20852,20853,20854,20855,20856,20857,20858,20859,20860,20861,20862,20863,20864,20865,20866,20867,20868,20869,20870,20871,20872,20873,20874,20875,20876,20877,20878,20879,20880,20881,20882,20883,20884,20885,20886,20887,20888,20889,20890,20891,20892,20893,20894,20895,20896,20897,20898,20899,20900,20901,20902,20903,20904,20905,20906,20907,20908,20909,20910,20911,20912,20913,20914,20915,20916,20917,20918,20919,20920,20921,20922,20923,20924,20925,20926,20927,20928,20929,20930,20931,20932,20933,20934,20935,20936,20937,20938,20939,20940,20941,20942,20943,20944,20945,20946,20947,20948,20949,20950,20951,20952,20953,20954,20955,20956,20957,20958,20959,20960,20961,20962,20963,20964,20965,20966,20967,20968,20969,20970,20971,20972,20973,20974,20975,20976,20977,20978,20979,20980,20981,20982,20983,20984,20985,20986,20987,20988,20989,20990,20991,20992,20993,20994,20995,20996,20997,20998,20999,21e3,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,21011,21012,21013,21014,21015,21016,21017,21018,21019,21020,21021,21022,21023,21024,21025,21026,21027,21028,21029,21030,21031,21032,21033,21034,21035,21036,21037,21038,21039,21040,21041,21042,21043,21044,21045,21046,21047,21048,21049,21050,21051,21052,21053,21054,21055,21056,21057,21058,21059,21060,21061,21062,21063,21064,21065,21066,21067,21068,21069,21070,21071,21072,21073,21074,21075,21076,21077,21078,21079,21080,21081,21082,21083,21084,21085,21086,21087,21088,21089,21090,21091,21092,21093,21094,21095,21096,21097,21098,21099,21100,21101,21102,21103,21104,21105,21106,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21117,21118,21119,21120,21121,21122,21123,21124,21125,21126,21127,21128,21129,21130,21131,21132,21133,21134,21135,21136,21137,21138,21139,21140,21141,21142,21143,21144,21145,21146,21147,21148,21149,21150,21151,21152,21153,21154,21155,21156,21157,21158,21159,21160,21161,21162,21163,21164,21165,21166,21167,21168,21169,21170,21171,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21182,21183,21184,21185,21186,21187,21188,21189,21190,21191,21192,21193,21194,21195,21196,21197,21198,21199,21200,21201,21202,21203,21204,21205,21206,21207,21208,21209,21210,21211,21212,21213,21214,21215,21216,21217,21218,21219,21220,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21232,21233,21234,21235,21236,21237,21238,21239,21240,21241,21242,21243,21244,21245,21246,21247,21248,21249,21250,21251,21252,21253,21254,21255,21256,21257,21258,21259,21260,21261,21262,21263,21264,21265,21266,21267,21268,21269,21270,21271,21272,21273,21274,21275,21276,21277,21278,21279,21280,21281,21282,21283,21284,21285,21286,21287,21288,21289,21290,21291,21292,21293,21294,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21305,21306,21307,21308,21309,21310,21311,21312,21313,21314,21315,21316,21317,21318,21319,21320,21321,21322,21323,21324,21325,21326,21327,21328,21329,21330,21331,21332,21333,21334,21335,21336,21337,21338,21339,21340,21341,21342,21343,21344,21345,21346,21347,21348,21349,21350,21351,21352,21353,21354,21355,21356,21357,21358,21359,21360,21361,21362,21363,21364,21365,21366,21367,21368,21369,21370,21371,21372,21373,21374,21375,21376,21377,21378,21379,21380,21381,21382,21383,21384,21385,21386,21387,21388,21389,21390,21391,21392,21393,21394,21395,21396,21397,21398,21399,21400,21401,21402,21403,21404,21405,21406,21407,21408,21409,21410,21411,21412,21413,21414,21415,21416,21417,21418,21419,21420,21421,21422,21423,21424,21425,21426,21427,21428,21429,21430,21431,21432,21433,21434,21435,21436,21437,21438,21439,21440,21441,21442,21443,21444,21445,21446,21447,21448,21449,21450,21451,21452,21453,21454,21455,21456,21457,21458,21459,21460,21461,21462,21463,21464,21465,21466,21467,21468,21469,21470,21471,21472,21473,21474,21475,21476,21477,21478,21479,21480,21481,21482,21483,21484,21485,21486,21487,21488,21489,21490,21491,21492,21493,21494,21495,21496,21497,21498,21499,21500,21501,21502,21503,21504,21505,21506,21507,21508,21509,21510,21511,21512,21513,21514,21515,21516,21517,21518,21519,21520,21521,21522,21523,21524,21525,21526,21527,21528,21529,21530,21531,21532,21533,21534,21535,21536,21537,21538,21539,21540,21541,21542,21543,21544,21545,21546,21547,21548,21549,21550,21551,21552,21553,21554,21555,21556,21557,21558,21559,21560,21561,21562,21563,21564,21565,21566,21567,21568,21569,21570,21571,21572,21573,21574,21575,21576,21577,21578,21579,21580,21581,21582,21583,21584,21585,21586,21587,21588,21589,21590,21591,21592,21593,21594,21595,21596,21597,21598,21599,21600,21601,21602,21603,21604,21605,21606,21607,21608,21609,21610,21611,21612,21613,21614,21615,21616,21617,21618,21619,21620,21621,21622,21623,21624,21625,21626,21627,21628,21629,21630,21631,21632,21633,21634,21635,21636,21637,21638,21639,21640,21641,21642,21643,21644,21645,21646,21647,21648,21649,21650,21651,21652,21653,21654,21655,21656,21657,21658,21659,21660,21661,21662,21663,21664,21665,21666,21667,21668,21669,21670,21671,21672,21673,21674,21675,21676,21677,21678,21679,21680,21681,21682,21683,21684,21685,21686,21687,21688,21689,21690,21691,21692,21693,21694,21695,21696,21697,21698,21699,21700,21701,21702,21703,21704,21705,21706,21707,21708,21709,21710,21711,21712,21713,21714,21715,21716,21717,21718,21719,21720,21721,21722,21723,21724,21725,21726,21727,21728,21729,21730,21731,21732,21733,21734,21735,21736,21737,21738,21739,21740,21741,21742,21743,21744,21745,21746,21747,21748,21749,21750,21751,21752,21753,21754,21755,21756,21757,21758,21759,21760,21761,21762,21763,21764,21765,21766,21767,21768,21769,21770,21771,21772,21773,21774,21775,21776,21777,21778,21779,21780,21781,21782,21783,21784,21785,21786,21787,21788,21789,21790,21791,21792,21793,21794,21795,21796,21797,21798,21799,21800,21801,21802,21803,21804,21805,21806,21807,21808,21809,21810,21811,21812,21813,21814,21815,21816,21817,21818,21819,21820,21821,21822,21823,21824,21825,21826,21827,21828,21829,21830,21831,21832,21833,21834,21835,21836,21837,21838,21839,21840,21841,21842,21843,21844,21845,21846,21847,21848,21849,21850,21851,21852,21853,21854,21855,21856,21857,21858,21859,21860,21861,21862,21863,21864,21865,21866,21867,21868,21869,21870,21871,21872,21873,21874,21875,21876,21877,21878,21879,21880,21881,21882,21883,21884,21885,21886,21887,21888,21889,21890,21891,21892,21893,21894,21895,21896,21897,21898,21899,21900,21901,21902,21903,21904,21905,21906,21907,21908,21909,21910,21911,21912,21913,21914,21915,21916,21917,21918,21919,21920,21921,21922,21923,21924,21925,21926,21927,21928,21929,21930,21931,21932,21933,21934,21935,21936,21937,21938,21939,21940,21941,21942,21943,21944,21945,21946,21947,21948,21949,21950,21951,21952,21953,21954,21955,21956,21957,21958,21959,21960,21961,21962,21963,21964,21965,21966,21967,21968,21969,21970,21971,21972,21973,21974,21975,21976,21977,21978,21979,21980,21981,21982,21983,21984,21985,21986,21987,21988,21989,21990,21991,21992,21993,21994,21995,21996,21997,21998,21999,22e3,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,22011,22012,22013,22014,22015,22016,22017,22018,22019,22020,22021,22022,22023,22024,22025,22026,22027,22028,22029,22030,22031,22032,22033,22034,22035,22036,22037,22038,22039,22040,22041,22042,22043,22044,22045,22046,22047,22048,22049,22050,22051,22052,22053,22054,22055,22056,22057,22058,22059,22060,22061,22062,22063,22064,22065,22066,22067,22068,22069,22070,22071,22072,22073,22074,22075,22076,22077,22078,22079,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22092,22093,22094,22095,22096,22097,22098,22099,22100,22101,22102,22103,22104,22105,22106,22107,22108,22109,22110,22111,22112,22113,22114,22115,22116,22117,22118,22119,22120,22121,22122,22123,22124,22125,22126,22127,22128,22129,22130,22131,22132,22133,22134,22135,22136,22137,22138,22139,22140,22141,22142,22143,22144,22145,22146,22147,22148,22149,22150,22151,22152,22153,22154,22155,22156,22157,22158,22159,22160,22161,22162,22163,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22179,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22191,22192,22193,22194,22195,22196,22197,22198,22199,22200,22201,22202,22203,22204,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22218,22219,22220,22221,22222,22223,22224,22225,22226,22227,22228,22229,22230,22231,22232,22233,22234,22235,22236,22237,22238,22239,22240,22241,22242,22243,22244,22245,22246,22247,22248,22249,22250,22251,22252,22253,22254,22255,22256,22257,22258,22259,22260,22261,22262,22263,22264,22265,22266,22267,22268,22269,22270,22271,22272,22273,22274,22275,22276,22277,22278,22279,22280,22281,22282,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22300,22301,22302,22303,22304,22305,22306,22307,22308,22309,22310,22311,22312,22313,22314,22315,22316,22317,22318,22319,22320,22321,22322,22323,22324,22325,22326,22327,22328,22329,22330,22331,22332,22333,22334,22335,22336,22337,22338,22339,22340,22341,22342,22343,22344,22345,22346,22347,22348,22349,22350,22351,22352,22353,22354,22355,22356,22357,22358,22359,22360,22361,22362,22363,22364,22365,22366,22367,22368,22369,22370,22371,22372,22373,22374,22375,22376,22377,22378,22379,22380,22381,22382,22383,22384,22385,22386,22387,22388,22389,22390,22391,22392,22393,22394,22395,22396,22397,22398,22399,22400,22401,22402,22403,22404,22405,22406,22407,22408,22409,22410,22411,22412,22413,22414,22415,22416,22417,22418,22419,22420,22421,22422,22423,22424,22425,22426,22427,22428,22429,22430,22431,22432,22433,22434,22435,22436,22437,22438,22439,22440,22441,22442,22443,22444,22445,22446,22447,22448,22449,22450,22451,22452,22453,22454,22455,22456,22457,22458,22459,22460,22461,22462,22463,22464,22465,22466,22467,22468,22469,22470,22471,22472,22473,22474,22475,22476,22477,22478,22479,22480,22481,22482,22483,22484,22485,22486,22487,22488,22489,22490,22491,22492,22493,22494,22495,22496,22497,22498,22499,22500,22501,22502,22503,22504,22505,22506,22507,22508,22509,22510,22511,22512,22513,22514,22515,22516,22517,22518,22519,22520,22521,22522,22523,22524,22525,22526,22527,22528,22529,22530,22531,22532,22533,22534,22535,22536,22537,22538,22539,22540,22541,22542,22543,22544,22545,22546,22547,22548,22549,22550,22551,22552,22553,22554,22555,22556,22557,22558,22559,22560,22561,22562,22563,22564,22565,22566,22567,22568,22569,22570,22571,22572,22573,22574,22575,22576,22577,22578,22579,22580,22581,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22596,22597,22598,22599,22600,22601,22602,22603,22604,22605,22606,22607,22608,22609,22610,22611,22612,22613,22614,22615,22616,22617,22618,22619,22620,22621,22622,22623,22624,22625,22626,22627,22628,22629,22630,22631,22632,22633,22634,22635,22636,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22654,22655,22656,22657,22658,22659,22660,22661,22662,22663,22664,22665,22666,22667,22668,22669,22670,22671,22672,22673,22674,22675,22676,22677,22678,22679,22680,22681,22682,22683,22684,22685,22686,22687,22688,22689,22690,22691,22692,22693,22694,22695,22696,22697,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22716,22717,22718,22719,22720,22721,22722,22723,22724,22725,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22737,22738,22739,22740,22741,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22756,22757,22758,22759,22760,22761,22762,22763,22764,22765,22766,22767,22768,22769,22770,22771,22772,22773,22774,22775,22776,22777,22778,22779,22780,22781,22782,22783,22784,22785,22786,22787,22788,22789,22790,22791,22792,22793,22794,22795,22796,22797,22798,22799,22800,22801,22802,22803,22804,22805,22806,22807,22808,22809,22810,22811,22812,22813,22814,22815,22816,22817,22818,22819,22820,22821,22822,22823,22824,22825,22826,22827,22828,22829,22830,22831,22832,22833,22834,22835,22836,22837,22838,22839,22840,22841,22842,22843,22844,22845,22846,22847,22848,22849,22850,22851,22852,22853,22854,22855,22856,22857,22858,22859,22860,22861,22862,22863,22864,22865,22866,22867,22868,22869,22870,22871,22872,22873,22874,22875,22876,22877,22878,22879,22880,22881,22882,22883,22884,22885,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22899,22900,22901,22902,22903,22904,22905,22906,22907,22908,22909,22910,22911,22912,22913,22914,22915,22916,22917,22918,22919,22920,22921,22922,22923,22924,22925,22926,22927,22928,22929,22930,22931,22932,22933,22934,22935,22936,22937,22938,22939,22940,22941,22942,22943,22944,22945,22946,22947,22948,22949,22950,22951,22952,22953,22954,22955,22956,22957,22958,22959,22960,22961,22962,22963,22964,22965,22966,22967,22968,22969,22970,22971,22972,22973,22974,22975,22976,22977,22978,22979,22980,22981,22982,22983,22984,22985,22986,22987,22988,22989,22990,22991,22992,22993,22994,22995,22996,22997,22998,22999,23e3,23001,23002,23003,23004,23005,23006,23007,23008,23009,23010,23011,23012,23013,23014,23015,23016,23017,23018,23019,23020,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23033,23034,23035,23036,23037,23038,23039,23040,23041,23042,23043,23044,23045,23046,23047,23048,23049,23050,23051,23052,23053,23054,23055,23056,23057,23058,23059,23060,23061,23062,23063,23064,23065,23066,23067,23068,23069,23070,23071,23072,23073,23074,23075,23076,23077,23078,23079,23080,23081,23082,23083,23084,23085,23086,23087,23088,23089,23090,23091,23092,23093,23094,23095,23096,23097,23098,23099,23100,23101,23102,23103,23104,23105,23106,23107,23108,23109,23110,23111,23112,23113,23114,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23125,23126,23127,23128,23129,23130,23131,23132,23133,23134,23135,23136,23137,23138,23139,23140,23141,23142,23143,23144,23145,23146,23147,23148,23149,23150,23151,23152,23153,23154,23155,23156,23157,23158,23159,23160,23161,23162,23163,23164,23165,23166,23167,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23186,23187,23188,23189,23190,23191,23192,23193,23194,23195,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23210,23211,23212,23213,23214,23215,23216,23217,23218,23219,23220,23221,23222,23223,23224,23225,23226,23227,23228,23229,23230,23231,23232,23233,23234,23235,23236,23237,23238,23239,23240,23241,23242,23243,23244,23245,23246,23247,23248,23249,23250,23251,23252,23253,23254,23255,23256,23257,23258,23259,23260,23261,23262,23263,23264,23265,23266,23267,23268,23269,23270,23271,23272,23273,23274,23275,23276,23277,23278,23279,23280,23281,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23305,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23318,23319,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23346,23347,23348,23349,23350,23351,23352,23353,23354,23355,23356,23357,23358,23359,23360,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23376,23377,23378,23379,23380,23381,23382,23383,23384,23385,23386,23387,23388,23389,23390,23391,23392,23393,23394,23395,23396,23397,23398,23399,23400,23401,23402,23403,23404,23405,23406,23407,23408,23409,23410,23411,23412,23413,23414,23415,23416,23417,23418,23419,23420,23421,23422,23423,23424,23425,23426,23427,23428,23429,23430,23431,23432,23433,23434,23435,23436,23437,23438,23439,23440,23441,23442,23443,23444,23445,23446,23447,23448,23449,23450,23451,23452,23453,23454,23455,23456,23457,23458,23459,23460,23461,23462,23463,23464,23465,23466,23467,23468,23469,23470,23471,23472,23473,23474,23475,23476,23477,23478,23479,23480,23481,23482,23483,23484,23485,23486,23487,23488,23489,23490,23491,23492,23493,23494,23495,23496,23497,23498,23499,23500,23501,23502,23503,23504,23505,23506,23507,23508,23509,23510,23511,23512,23513,23514,23515,23516,23517,23518,23519,23520,23521,23522,23523,23524,23525,23526,23527,23528,23529,23530,23531,23532,23533,23534,23535,23536,23537,23538,23539,23540,23541,23542,23543,23544,23545,23546,23547,23548,23549,23550,23551,23552,23553,23554,23555,23556,23557,23558,23559,23560,23561,23562,23563,23564,23565,23566,23567,23568,23569,23570,23571,23572,23573,23574,23575,23576,23577,23578,23579,23580,23581,23582,23583,23584,23585,23586,23587,23588,23589,23590,23591,23592,23593,23594,23595,23596,23597,23598,23599,23600,23601,23602,23603,23604,23605,23606,23607,23608,23609,23610,23611,23612,23613,23614,23615,23616,23617,23618,23619,23620,23621,23622,23623,23624,23625,23626,23627,23628,23629,23630,23631,23632,23633,23634,23635,23636,23637,23638,23639,23640,23641,23642,23643,23644,23645,23646,23647,23648,23649,23650,23651,23652,23653,23654,23655,23656,23657,23658,23659,23660,23661,23662,23663,23664,23665,23666,23667,23668,23669,23670,23671,23672,23673,23674,23675,23676,23677,23678,23679,23680,23681,23682,23683,23684,23685,23686,23687,23688,23689,23690,23691,23692,23693,23694,23695,23696,23697,23698,23699,23700,23701,23702,23703,23704,23705,23706,23707,23708,23709,23710,23711,23712,23713,23714,23715,23716,23717,23718,23719,23720,23721,23722,23723,23724,23725,23726,23727,23728,23729,23730,23731,23732,23733,23734,23735,23736,23737,23738,23739,23740,23741,23742,23743,23744,23745,23746,23747,23748,23749,23750,23751,23752,23753,23754,23755,23756,23757,23758,23759,23760,23761,23762,23763,23764,23765,23766,23767,23768,23769,23770,23771,23772,23773,23774,23775,23776,23777,23778,23779,23780,23781,23782,23783,23784,23785,23786,23787,23788,23789,23790,23791,23792,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23803,23804,23805,23806,23807,23808,23809,23810,23811,23812,23813,23814,23815,23816,23817,23818,23819,23820,23821,23822,23823,23824,23825,23826,23827,23828,23829,23830,23831,23832,23833,23834,23835,23836,23837,23838,23839,23840,23841,23842,23843,23844,23845,23846,23847,23848,23849,23850,23851,23852,23853,23854,23855,23856,23857,23858,23859,23860,23861,23862,23863,23864,23865,23866,23867,23868,23869,23870,23871,23872,23873,23874,23875,23876,23877,23878,23879,23880,23881,23882,23883,23884,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23896,23897,23898,23899,23900,23901,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23913,23914,23915,23916,23917,23918,23919,23920,23921,23922,23923,23924,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23938,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23961,23962,23963,23964,23965,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23991,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24005,24006,24007,24008,24009,24010,24011,24012,24013,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24027,24028,24029,24030,24031,24032,24033,24034,24035,24036,24037,24038,24039,24040,24041,24042,24043,24044,24045,24046,24047,24048,24049,24050,24051,24052,24053,24054,24055,24056,24057,24058,24059,24060,24061,24062,24063,24064,24065,24066,24067,24068,24069,24070,24071,24072,24073,24074,24075,24076,24077,24078,24079,24080,24081,24082,24083,24084,24085,24086,24087,24088,24089,24090,24091,24092,24093,24094,24095,24096,24097,24098,24099,24100,24101,24102,24103,24104,24105,24106,24107,24108,24109,24110,24111,24112,24113,24114,24115,24116,24117,24118,24119,24120,24121,24122,24123,24124,24125,24126,24127,24128,24129,24130,24131,24132,24133,24134,24135,24136,24137,24138,24139,24140,24141,24142,24143,24144,24145,24146,24147,24148,24149,24150,24151,24152,24153,24154,24155,24156,24157,24158,24159,24160,24161,24162,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24178,24179,24180,24181,24182,24183,24184,24185,24186,24187,24188,24189,24190,24191,24192,24193,24194,24195,24196,24197,24198,24199,24200,24201,24202,24203,24204,24205,24206,24207,24208,24209,24210,24211,24212,24213,24214,24215,24216,24217,24218,24219,24220,24221,24222,24223,24224,24225,24226,24227,24228,24229,24230,24231,24232,24233,24234,24235,24236,24237,24238,24239,24240,24241,24242,24243,24244,24245,24246,24247,24248,24249,24250,24251,24252,24253,24254,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24265,24266,24267,24268,24269,24270,24271,24272,24273,24274,24275,24276,24277,24278,24279,24280,24281,24282,24283,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24296,24297,24298,24299,24300,24301,24302,24303,24304,24305,24306,24307,24308,24309,24310,24311,24312,24313,24314,24315,24316,24317,24318,24319,24320,24321,24322,24323,24324,24325,24326,24327,24328,24329,24330,24331,24332,24333,24334,24335,24336,24337,24338,24339,24340,24341,24342,24343,24344,24345,24346,24347,24348,24349,24350,24351,24352,24353,24354,24355,24356,24357,24358,24359,24360,24361,24362,24363,24364,24365,24366,24367,24368,24369,24370,24371,24372,24373,24374,24375,24376,24377,24378,24379,24380,24381,24382,24383,24384,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24400,24401,24402,24403,24404,24405,24406,24407,24408,24409,24410,24411,24412,24413,24414,24415,24416,24417,24418,24419,24420,24421,24422,24423,24424,24425,24426,24427,24428,24429,24430,24431,24432,24433,24434,24435,24436,24437,24438,24439,24440,24441,24442,24443,24444,24445,24446,24447,24448,24449,24450,24451,24452,24453,24454,24455,24456,24457,24458,24459,24460,24461,24462,24463,24464,24465,24466,24467,24468,24469,24470,24471,24472,24473,24474,24475,24476,24477,24478,24479,24480,24481,24482,24483,24484,24485,24486,24487,24488,24489,24490,24491,24492,24493,24494,24495,24496,24497,24498,24499,24500,24501,24502,24503,24504,24505,24506,24507,24508,24509,24510,24511,24512,24513,24514,24515,24516,24517,24518,24519,24520,24521,24522,24523,24524,24525,24526,24527,24528,24529,24530,24531,24532,24533,24534,24535,24536,24537,24538,24539,24540,24541,24542,24543,24544,24545,24546,24547,24548,24549,24550,24551,24552,24553,24554,24555,24556,24557,24558,24559,24560,24561,24562,24563,24564,24565,24566,24567,24568,24569,24570,24571,24572,24573,24574,24575,24576,24577,24578,24579,24580,24581,24582,24583,24584,24585,24586,24587,24588,24589,24590,24591,24592,24593,24594,24595,24596,24597,24598,24599,24600,24601,24602,24603,24604,24605,24606,24607,24608,24609,24610,24611,24612,24613,24614,24615,24616,24617,24618,24619,24620,24621,24622,24623,24624,24625,24626,24627,24628,24629,24630,24631,24632,24633,24634,24635,24636,24637,24638,24639,24640,24641,24642,24643,24644,24645,24646,24647,24648,24649,24650,24651,24652,24653,24654,24655,24656,24657,24658,24659,24660,24661,24662,24663,24664,24665,24666,24667,24668,24669,24670,24671,24672,24673,24674,24675,24676,24677,24678,24679,24680,24681,24682,24683,24684,24685,24686,24687,24688,24689,24690,24691,24692,24693,24694,24695,24696,24697,24698,24699,24700,24701,24702,24703,24704,24705,24706,24707,24708,24709,24710,24711,24712,24713,24714,24715,24716,24717,24718,24719,24720,24721,24722,24723,24724,24725,24726,24727,24728,24729,24730,24731,24732,24733,24734,24735,24736,24737,24738,24739,24740,24741,24742,24743,24744,24745,24746,24747,24748,24749,24750,24751,24752,24753,24754,24755,24756,24757,24758,24759,24760,24761,24762,24763,24764,24765,24766,24767,24768,24769,24770,24771,24772,24773,24774,24775,24776,24777,24778,24779,24780,24781,24782,24783,24784,24785,24786,24787,24788,24789,24790,24791,24792,24793,24794,24795,24796,24797,24798,24799,24800,24801,24802,24803,24804,24805,24806,24807,24808,24809,24810,24811,24812,24813,24814,24815,24816,24817,24818,24819,24820,24821,24822,24823,24824,24825,24826,24827,24828,24829,24830,24831,24832,24833,24834,24835,24836,24837,24838,24839,24840,24841,24842,24843,24844,24845,24846,24847,24848,24849,24850,24851,24852,24853,24854,24855,24856,24857,24858,24859,24860,24861,24862,24863,24864,24865,24866,24867,24868,24869,24870,24871,24872,24873,24874,24875,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24895,24896,24897,24898,24899,24900,24901,24902,24903,24904,24905,24906,24907,24908,24909,24910,24911,24912,24913,24914,24915,24916,24917,24918,24919,24920,24921,24922,24923,24924,24925,24926,24927,24928,24929,24930,24931,24932,24933,24934,24935,24936,24937,24938,24939,24940,24941,24942,24943,24944,24945,24946,24947,24948,24949,24950,24951,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24971,24972,24973,24974,24975,24976,24977,24978,24979,24980,24981,24982,24983,24984,24985,24986,24987,24988,24989,24990,24991,24992,24993,24994,24995,24996,24997,24998,24999,25e3,25001,25002,25003,25004,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25015,25016,25017,25018,25019,25020,25021,25022,25023,25024,25025,25026,25027,25028,25029,25030,25031,25032,25033,25034,25035,25036,25037,25038,25039,25040,25041,25042,25043,25044,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25062,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25077,25078,25079,25080,25081,25082,25083,25084,25085,25086,25087,25088,25089,25090,25091,25092,25093,25094,25095,25096,25097,25098,25099,25100,25101,25102,25103,25104,25105,25106,25107,25108,25109,25110,25111,25112,25113,25114,25115,25116,25117,25118,25119,25120,25121,25122,25123,25124,25125,25126,25127,25128,25129,25130,25131,25132,25133,25134,25135,25136,25137,25138,25139,25140,25141,25142,25143,25144,25145,25146,25147,25148,25149,25150,25151,25152,25153,25154,25155,25156,25160,25161,25162,25163,25164,25165,25166,25167,25168,25169,25170,25171,25172,25173,25174,25175,25176,25177,25178,25179,25180,25181,25182,25183,25184,25185,25186,25187,25188,25189,25190,25191,25192,25193,25194,25195,25196,25197,25198,25199,25200,25201,25202,25203,25204,25205,25206,25207,25208,25209,25210,25211,25212,25213,25214,25215,25216,25217,25218,25219,25220,25221,25222,25223,25224,25225,25226,25227,25228,25229,25230,25231,25232,25233,25234,25235,25236,25237,25238,25239,25240,25241,25242,25243,25244,25245,25246,25247,25248,25249,25250,25251,25252,25253,25254,25255,25256,25257,25258,25259,25260,25261,25262,25263,25264,25265,25266,25267,25268,25269,25270,25271,25272,25273,25274,25275,25276,25277,25278,25279,25280,25281,25282,25283,25284,25285,25286,25287,25288,25289,25290,25291,25292,25293,25294,25295,25296,25297,25298,25299,25300,25301,25302,25303,25304,25305,25306,25307,25308,25309,25310,25311,25312,25313,25314,25315,25316,25317,25318,25319,25320,25321,25322,25323,25324,25325,25326,25327,25328,25329,25330,25331,25332,25333,25334,25335,25336,25337,25338,25339,25340,25341,25342,25343,25344,25345,25346,25347,25348,25349,25350,25351,25352,25353,25354,25355,25356,25357,25358,25359,25360,25361,25362,25363,25364,25365,25366,25367,25368,25369,25370,25371,25372,25373,25374,25375,25376,25377,25378,25379,25380,25381,25382,25383,25384,25385,25386,25387,25388,25389,25390,25391,25392,25393,25394,25395,25396,25397,25398,25399,25400,25401,25402,25403,25404,25405,25406,25407,25408,25409,25410,25411,25412,25413,25414,25415,25416,25417,25418,25419,25420,25421,25422,25423,25424,25425,25426,25427,25428,25429,25430,25431,25432,25433,25434,25435,25436,25437,25438,25439,25440,25441,25442,25443,25444,25445,25446,25447,25448,25449,25450,25451,25452,25453,25454,25455,25456,25457,25458,25459,25460,25461,25462,25463,25464,25465,25466,25467,25468,25469,25470,25471,25472,25473,25474,25475,25476,25477,25478,25479,25480,25481,25482,25483,25484,25485,25486,25487,25488,25489,25490,25491,25492,25493,25494,25495,25496,25497,25498,25499,25500,25501,25502,25503,25504,25505,25506,25507,25508,25509,25510,25511,25512,25513,25514,25515,25516,25517,25518,25519,25520,25521,25522,25523,25524,25525,25526,25527,25528,25529,25530,25531,25532,25533,25534,25535,25536,25537,25538,25539,25540,25541,25542,25543,25544,25545,25546,25547,25548,25549,25550,25551,25552,25553,25554,25555,25556,25557,25558,25559,25560,25561,25562,25563,25564,25565,25566,25567,25568,25569,25570,25571,25572,25573,25574,25575,25576,25577,25578,25579,25580,25581,25582,25583,25584,25585,25586,25587,25588,25589,25590,25591,25592,25593,25594,25595,25596,25597,25598,25599,25600,25601,25602,25603,25604,25605,25606,25607,25608,25609,25610,25611,25612,25613,25614,25615,25616,25617,25618,25619,25620,25621,25622,25623,25624,25625,25626,25627,25628,25629,25630,25631,25632,25633,25634,25635,25636,25637,25638,25639,25640,25641,25642,25643,25644,25645,25646,25647,25648,25649,25650,25651,25652,25653,25654,25655,25656,25657,25658,25659,25660,25661,25662,25663,25664,25665,25666,25667,25668,25669,25670,25671,25672,25673,25674,25675,25676,25677,25678,25679,25680,25681,25682,25683,25684,25685,25686,25687,25688,25689,25690,25691,25692,25693,25694,25695,25696,25697,25698,25699,25700,25701,25702,25703,25704,25705,25706,25707,25708,25709,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25720,25721,25722,25723,25724,25725,25726,25727,25728,25729,25730,25731,25732,25733,25734,25735,25736,25737,25738,25739,25740,25741,25742,25743,25744,25745,25746,25747,25748,25749,25750,25751,25752,25753,25754,25755,25756,25757,25758,25759,25760,25761,25762,25763,25764,25765,25766,25767,25768,25769,25770,25771,25772,25773,25774,25775,25776,25777,25778,25779,25780,25781,25782,25783,25784,25785,25786,25787,25788,25789,25790,25791,25792,25793,25794,25795,25796,25797,25798,25799,25800,25801,25802,25803,25804,25805,25806,25807,25808,25809,25810,25811,25812,25813,25814,25815,25816,25817,25818,25819,25820,25821,25822,25823,25824,25825,25826,25827,25828,25829,25830,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25856,25857,25858,25859,25860,25861,25862,25863,25864,25865,25866,25867,25868,25869,25870,25871,25872,25873,25874,25875,25876,25877,25878,25879,25880,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25893,25894,25895,25896,25897,25898,25899,25900,25901,25902,25903,25904,25905,25906,25907,25908,25909,25910,25911,25912,25913,25914,25915,25916,25917,25918,25919,25920,25921,25922,25923,25924,25925,25926,25927,25928,25929,25930,25931,25932,25933,25934,25935,25936,25937,25938,25939,25940,25941,25942,25943,25944,25945,25946,25947,25948,25949,25950,25951,25952,25953,25954,25955,25956,25957,25958,25959,25960,25961,25962,25963,25964,25965,25966,25967,25968,25969,25970,25971,25972,25973,25974,25975,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25991,25992,25993,25994,25995,25996,25997,25998,25999,26e3,26001,26002,26003,26004,26005,26006,26007]),i.o([i.ref(9),i.os(i.s,6,[7729,40,3,4])]),i.os(i.w,0,[7774,7776,7775,7773])],l=[(e,r)=>i.q(i.acq(e,r)),(e,r,t,n,a,o)=>i.q(i.acq(i.acq(i.acq(i.cw(n,a,o),t),r),e)),(e,r,t,n,a,o,c,s,u,l)=>i.q(i.acq(i.acq(i.acq(i.cw(0,e,i.ge(1)),i.itp(r,t,!1,n)),i.itp(s,u,!1,l)),i.itp(a,o,!1,c))),(e,r,t,n)=>i.q(i.acq(i.cw(r,t,n),e)),(e,r,t)=>i.q(i.acq(i.cw(0,e,i.ge(1)),i.ocq(r,t))),(e,r)=>i.q(i.acq(i.cw(0,i.a([i.y(0,5),i.pge(5,.1)]),i.ge(1)),i.scq(i.cw(1,i.pc(["aggregations","SegmentExit"],e)),i.cw(4,i.pe(7,r)),i.e(0)))),(e,r)=>i.q(i.acq(i.cw(0,i.ref(3),i.ge(1)),i.cw(0,i.os(i.s,3,r),i.ge(e)))),(e,r)=>i.q(i.acq(i.cw(0,i.ref(10),i.ge(e)),i.cw(0,i.pg(5,r),i.ge(1)))),(e,r,t,n,a,o,c,s,u,l,p,m,f,d,v,g)=>i.q(i.acq(i.cw(0,i.o([n,i.os(i.s,s,u)]),i.ge(1)),i.ocq(i.ocq(i.ocq(i.ocq(l,i.itp(d,v,!1,g)),i.itp(p,m,!1,f)),i.itp(a,o,!1,c)),i.itp(e,r,!1,t)))),(e,r)=>i.q(i.acq(i.cw(0,i.ps(4,e),i.ge(1)),i.cw(0,i.z(4,r),i.ge(1)))),(e,r)=>i.q(i.acq(i.cw(0,i.t,i.ge(1)),i.cw(0,e,i.ge(r)))),(e,r,t,n)=>i.q(i.acq(i.cw(0,i.t,i.ge(1)),i.ocq(e,i.itp(r,t,!1,n)))),(e,r,t,n,a)=>i.q(i.acq(i.cw(0,i.t,i.ge(1)),i.ocq(i.ocq(r,i.itp(t,n,!1,a)),i.itp("liveramp_Acxiom","300062999",!1,e)))),(e,r,t,n)=>i.q(i.acq(i.cw(0,i.t,i.ge(1)),i.ocq(i.isp("liveramp_L2_Data_nexstar_media_group",t,!1,n),i.isp("liveramp_L2_Data_nexstar_media_group",e,!1,r)))),(e,r)=>i.q(i.acq(i.cw(0,i.t,i.ge(1)),i.isp("liveramp_L2_Data_nexstar_media_group",e,!1,r))),(e,r,t,n)=>i.q(i.acq(i.cw(0,i.t,i.ge(1)),i.itp(e,r,t,n))),e=>i.q(i.acq(i.cw(0,i.t,i.ge(1)),i.itp("liveramp_Experian","1004256419",!1,e))),e=>i.q(i.acq(i.cw(6,i.t,e),i.scq(i.cw(1,i.pg(15,60)),i.vq(i.sw(3,i.t,["properties","engaged_time"],i.g(60))),i.ge(2)))),(e,r,t)=>i.q(i.acq(i.lm(e,i.ge(r)),i.fm(i.n0,i.ifp(t)))),e=>i.q(i.acq(i.lm("14f43b97-0358-4412-8e96-93cb4b4b94e8",i.ge(e)),i.fm(i.n0,i.ifp("99843")))),e=>i.q(i.acq(i.lm("4989b324-362c-42ad-b424-2317c18fc78c",i.ge(e)),i.fm(i.n0,i.ifp("114093")))),e=>i.q(i.acq(i.lm("886ea8c0-5c8c-4342-9430-cb10c4bf26bb",i.ge(e)),i.fm(i.n0,i.ifp("114095")))),(e,r,t,n,a,o,c)=>i.q(i.acq(i.ocq(e,i.itp(r,t,!1,n)),i.cw(a,o,c))),(e,r,t,n,a,o)=>i.q(i.acq(i.ocq(i.ocq(t,i.itp(n,a,!1,o)),i.itp("liveramp_ShareThis",e,!1,r)),i.cw(0,i.t,i.ge(1)))),(e,r,t,n,a,o,c,s,u,l,p,m,f,d,v,g,_,h,q,y,b,w,S,x,A,k,E,T,C,I,M,P,D,B,L,F,O,H,R,V,N,j,z,G,Q,W,U,J,Y,$)=>i.q(i.acq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(G,i.itp(J,Y,!1,$)),i.itp(Q,W,!1,U)),i.itp(N,j,!1,z)),i.itp(L,F,!1,O)),i.itp(C,I,!1,M)),i.itp(x,A,!1,k)),i.itp(h,q,!1,y)),i.itp(m,f,!1,d)),i.itp(o,c,!1,s)),i.itp("liveramp_DunandBradstreet",e,!1,r)),i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(P,i.itp(H,R,!1,V)),i.itp("liveramp_DunandBradstreet",D,!1,B)),i.itp("eyeota",E,!1,T)),i.itp(b,w,!1,S)),i.itp(v,g,!1,_)),i.itp(u,l,!1,p)),i.itp(t,n,!1,a)))),(e,r,t)=>i.q(i.cw(e,r,i.ge(t))),(e,r)=>i.q(i.cw(0,i.a([e,r]),i.ge(1))),(e,r,t,n)=>i.q(i.cw(0,i.a([e,i.os(r,t,n)]),i.ge(1))),(e,r)=>i.q(i.cw(0,i.a([e,i.ref(r)]),i.ge(1))),(e,r)=>i.q(i.cw(0,i.a([e,i.nt(r)]),i.ge(1))),e=>i.q(i.cw(0,i.a([i.y(0,e),i.pge(5,.1)]),i.ge(1))),e=>i.q(i.cw(0,i.a([i.pge(5,.1),i.ref(e)]),i.ge(1))),e=>i.q(i.cw(0,i.a([i.ps(9,7699),i.os(i.w,16,e)]),i.ge(1))),e=>i.q(i.cw(0,i.os(i.cx,2,e),i.ge(1))),(e,r)=>i.q(i.cw(0,i.os(i.w,e,r),i.ge(1))),(e,r)=>i.q(i.cw(0,i.os(i.s,e,r),i.ge(1))),(e,r)=>i.q(i.cw(0,i.ref(r),i.ge(e))),(e,r,t)=>i.q(i.cw(0,i.o([e,r,t]),i.ge(1))),(e,r,t)=>i.q(i.cw(0,i.o([e,i.os(i.cx,2,t),r]),i.ge(1))),(e,r,t,n)=>i.q(i.cw(0,i.o([i.os(r,t,n),e]),i.ge(1))),(e,r,t,n,a)=>i.q(i.cw(0,i.o([i.os(i.w,1,a),i.ref(e),i.ps(3,r),i.ps(0,t),i.ps(13,n)]),i.ge(1))),(e,r)=>i.q(i.cw(0,i.o([i.ref(e),i.os(i.w,0,r)]),i.ge(1))),e=>i.q(i.cw(0,i.o([i.ref(e),i.pge(5,.1)]),i.ge(1))),(e,r,t)=>i.q(i.cw(0,i.o([i.y(e,r),i.os(i.w,0,t)]),i.ge(1))),(e,r,t)=>i.q(i.cw(0,i.o([i.y(e,r),i.ref(t)]),i.ge(1))),(e,r,t)=>i.q(i.cw(0,i.o([i.y(r,t),e]),i.ge(1))),(e,r,t,n,a)=>i.q(i.cw(0,i.o([i.y(1,a),i.ref(e),i.ps(3,r),i.ps(0,t),i.ps(13,n)]),i.ge(1))),(e,r)=>i.q(i.cw(0,i.y(e,r),i.ge(1))),(e,r)=>i.q(i.cw(0,i.pe(e,r),i.ge(1))),e=>i.q(i.cw(0,i.z(10,14),i.ge(e))),(e,r,t)=>i.q(i.cw(0,i.ps(r,t),i.ge(e))),(e,r)=>i.q(i.cw(5,e,i.ge(r))),(e,r)=>i.q(i.ocq(i.cw(0,e,i.ge(1)),i.cw(0,r,i.ge(1)))),(e,r,t)=>i.q(i.ocq(i.lm(e,i.ge(t)),i.ifp(r))),(e,r,t,n,a,o,c,s)=>i.q(i.ocq(i.ocq(e,i.itp(r,t,!1,n)),i.itp(a,o,c,s))),(e,r,t,n,a,o,c,s,u,l)=>i.q(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(s,i.itp("eyeota","35078",!1,l)),i.itp("eyeota","35079",!1,u)),i.itp("eyeota","34873",!1,c)),i.itp("eyeota","35077",!1,o)),i.itp("liveramp_ShareThis","1001785106",!1,a)),i.itp("liveramp_ShareThis","1003625709",!1,n)),i.itp("liveramp_IXIDigital","1003986859",!1,t)),i.itp("liveramp_MeritDirect","1002721726",!1,r)),i.itp("liveramp_Compass","1000039924",!1,e)),i.cw(0,i.ref(8),i.ge(1)))),(e,r,t,n,a,o,c,s,u,l,p,m,f,d)=>i.q(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("eyeota","34943",!1,f),i.itp("liveramp_Alliant","1003267439",!1,d)),i.itp("liveramp_Alliant","1003267429",!1,m)),i.itp("liveramp_Alliant","1003267419",!1,p)),i.itp("liveramp_AnalyticsIQ","1003048689",!1,l)),i.itp("liveramp_AnalyticsIQ","1003048699",!1,u)),i.itp("liveramp_Epsilon","1000989679",!1,s)),i.itp("liveramp_Epsilon","1000989689",!1,c)),i.itp("liveramp_AnalyticsIQ","1003048899",!1,o)),i.itp("liveramp_AnalyticsIQ","1003048909",!1,a)),i.itp("liveramp_ShareThis","1001601536",!1,n)),i.cw(0,t,i.ge(1))),i.itp("eyeota","35807",!1,e)),i.itp("eyeota","12989",!1,r))),(e,r,t,n)=>i.q(i.ocq(i.isp("nexstar_segments",e,!1,r),i.isp("nexstar_segments_blueconic",t,!1,n))),(e,r)=>i.q(i.isp("nexstar_segments",e,!1,r)),(e,r)=>i.q(i.isp("nexstar_segments_blueconic",e,!1,r)),(e,r,t,n)=>i.q(i.scq(i.cw(1,e),i.vq(i.sw(3,t,["properties","engaged_time"],n)),i.ge(r))),e=>i.q(i.tw(i.cw(e,i.t,i.ge(10)),2592e6))];return{rawQueries:{100154:i.r(18,"c5d4ede5-121d-4990-a57a-1b8bf9020bb7",.7202848,"99968"),100381:i.r(11,i.ocq(i.ocq(i.itp("liveramp_IXIDigital","1000090014",!1,"100381"),i.itp("liveramp_Epsilon","1000459116",!1,"100381")),i.itp("liveramp_Stirista","1000044974",!1,"100381")),"liveramp_IXIDigital","1003590359","100381"),100526:i.r(8,"eyeota","6533","100526",i.os(i.s,6,[26166,40,26167,3,4,26168,"https://thehill.com/opinion/campaign",7738]),"liveramp_Stirista","1000982729","100526",3,[7801,7803],i.itp("liveramp_ShareThis","1005652001",!1,"100526"),"liveramp_ShareThis","1001011509","100526","liveramp_Acxiom","802360080","100526"),100884:i.q(i.ocq(i.ocq(i.ocq(i.tw(i.cw(0,i.ps(6,26169),i.ge(3)),2592e6),i.tw(i.cw(0,i.ps(6,"https://thehill.com/blogs/in-the-know"),i.ge(1)),1728e6)),i.tw(i.cw(0,i.os(i.s,6,[26166,"https://thehill.com/homenews/media"]),i.ge(1)),1728e6)),i.tw(i.cw(0,i.ps(6,"https://thehill.com/policy"),i.ge(3)),2592e6))),101074:i.r(54,i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.cw(0,i.o([i.os(i.w,6,["https://thehill.com/policy/cybersecurity",26170,26172]),i.ref(12)]),i.ge(1)),i.itp("liveramp_Bombora","1000884119",!1,"101074")),i.itp("eyeota","1709",!1,"101074")),i.itp("liveramp_Acxiom","300172099",!1,"101074")),i.itp("liveramp_Bombora","1004559069",!1,"101074")),i.itp("eyeota","64",!1,"101074")),i.itp("liveramp_DunandBradstreet","1000311006",!1,"101074")),i.itp("eyeota","6534",!1,"101074")),i.itp("liveramp_AnalyticsIQ","1003514679",!1,"101074")),"liveramp_DunandBradstreet","1000870876","101074","liveramp_AnalyticsIQ","1000899349",!1,"101074"),101075:i.r(37,i.os(i.w,6,[26170,26172]),i.y(1,7731),i.ref(12)),101259:i.r(47,0,47),101283:i.r(58,"nexstar_100","101283"),101424:i.r(58,"nexstar_101","101424"),103496:i.r(58,"nexstar_102","103496"),103599:i.r(58,"nexstar_103","103599"),103625:i.r(19,.6667988),104019:i.r(58,"nexstar_104","104019"),104033:i.r(58,"nexstar_105","104033"),104040:i.r(58,"nexstar_106","104040"),104042:i.r(58,"nexstar_107","104042"),104043:i.r(58,"nexstar_108","104043"),104044:i.r(58,"nexstar_109","104044"),104507:i.r(58,"nexstar_110","104507"),104508:i.r(58,"nexstar_111","104508"),104509:i.r(58,"nexstar_112","104509"),104510:i.r(58,"nexstar_113","104510"),104521:i.r(58,"nexstar_114","104521"),104522:i.r(58,"nexstar_115","104522"),104523:i.r(58,"nexstar_116","104523"),104524:i.r(58,"nexstar_117","104524"),104525:i.r(58,"nexstar_118","104525"),104526:i.r(58,"nexstar_119","104526"),104527:i.r(58,"nexstar_120","104527"),104528:i.r(58,"nexstar_121","104528"),104529:i.r(58,"nexstar_122","104529"),104530:i.r(58,"nexstar_123","104530"),104531:i.r(58,"nexstar_124","104531"),104532:i.r(58,"nexstar_125","104532"),104533:i.r(58,"nexstar_126","104533"),104534:i.r(58,"nexstar_127","104534"),104535:i.r(58,"nexstar_128","104535"),104536:i.r(58,"nexstar_129","104536"),104537:i.r(58,"nexstar_130","104537"),104538:i.r(58,"nexstar_131","104538"),104539:i.r(58,"nexstar_132","104539"),104540:i.r(58,"nexstar_133","104540"),104541:i.r(58,"nexstar_134","104541"),104542:i.r(58,"nexstar_135","104542"),104543:i.r(58,"nexstar_136","104543"),104544:i.r(58,"nexstar_137","104544"),104545:i.r(58,"nexstar_138","104545"),104546:i.r(58,"nexstar_139","104546"),104547:i.r(58,"nexstar_140","104547"),104548:i.r(58,"nexstar_141","104548"),104549:i.r(58,"nexstar_142","104549"),104550:i.r(58,"nexstar_143","104550"),104551:i.r(58,"nexstar_144","104551"),104552:i.r(58,"nexstar_145","104552"),104553:i.r(58,"nexstar_146","104553"),104554:i.r(58,"nexstar_147","104554"),104555:i.r(58,"nexstar_148","104555"),104556:i.r(58,"nexstar_149","104556"),104557:i.r(58,"nexstar_150","104557"),104558:i.r(58,"nexstar_151","104558"),104559:i.r(58,"nexstar_152","104559"),104560:i.r(58,"nexstar_153","104560"),104561:i.r(58,"nexstar_154","104561"),104562:i.r(58,"nexstar_155","104562"),104563:i.r(58,"nexstar_156","104563"),104564:i.r(58,"nexstar_157","104564"),104693:i.r(58,"nexstar_158","104693"),104940:i.r(58,"nexstar_159","104940"),104941:i.r(58,"nexstar_160","104941"),104946:i.r(58,"nexstar_164","104946"),104947:i.r(58,"nexstar_165","104947"),104948:i.r(58,"nexstar_166","104948"),104949:i.r(58,"nexstar_167","104949"),104950:i.r(58,"nexstar_168","104950"),104951:i.r(58,"nexstar_169","104951"),104952:i.r(58,"nexstar_170","104952"),104953:i.r(58,"nexstar_171","104953"),104954:i.r(58,"nexstar_172","104954"),104955:i.r(58,"nexstar_173","104955"),104956:i.r(58,"nexstar_174","104956"),104957:i.r(58,"nexstar_175","104957"),104958:i.r(58,"nexstar_176","104958"),104959:i.r(58,"nexstar_177","104959"),104960:i.r(58,"nexstar_178","104960"),104961:i.r(58,"nexstar_179","104961"),104962:i.r(58,"nexstar_180","104962"),104964:i.r(58,"nexstar_181","104964"),104966:i.r(58,"nexstar_183","104966"),104967:i.r(58,"nexstar_184","104967"),104968:i.r(58,"nexstar_185","104968"),104969:i.r(58,"nexstar_186","104969"),105096:i.r(53,"61cb1887-94b0-4c17-a821-ad0780417a78","103496",.76003504),106426:i.r(48,8,"thehill.com"),106427:i.r(47,8,39),106428:i.r(47,3,7700),106574:i.r(18,"3e4fe7f0-8d52-4013-b4b2-bfb6daf74399",.71284384,"106428"),106781:i.r(35,11,[27,28]),106793:i.r(35,11,[26,25157,25158,25159]),106839:i.r(45,i.ps(6,26174),3,7780),106883:i.r(35,11,["01002","01003","01007","01012","01026","01027","01032","01035","01038","01039","01040","01053","01054","01060","01062","01063","01066","01070","01072","01075","01084","01088","01093","01096","01098","01103","01104","01105","01106","01107","01108","01109","01118","01119","01128","01129","01144","01151","01201","01220","01222","01223","01224","01226","01229","01230","01235","01236","01237","01238","01240","01242","01243","01244","01245","01247","01254","01255","01257","01258","01259","01260","01262","01264","01266","01267","01270","01301","01330","01337","01338","01339","01340","01341","01342","01344","01346","01347","01349","01351","01354","01355","01360","01366","01370","01373","01375","01376","01378","01379","01380","01420","01432","01434","01450","01451","01460","01503","01510","01519","01532","01536","01541","01545","01560","01568","01581","01602","01603","01604","01605","01606","01607","01608","01609","01610","01701","01702","01718","01719","01720","01721","01730","01731","01740","01741","01742","01745","01746","01747","01748","01749","01752","01754","01757","01760","01770","01772","01773","01775","01776","01778","01801","01803","01810","01824","01830","01835","01840","01841","01843","01845","01850","01851","01852","01854","01863","01867","01880","01886","01890","01901","01902","01904","01905","01907","01908","01913","01915","01922","01929","01930","01938","01944","01945","01950","01951","01965","01966","01970","01982","01983","01984","01985","02021","02025","02026","02030","02032","02035","02038","02043","02045","02047","02048","02052","02053","02054","02056","02062","02066","02067","02072","02081","02090","02108","02109","02110","02111","02113","02114","02115","02116","02118","02119","02120","02121","02122","02124","02125","02126","02127","02128","02129","02130","02131","02132","02133","02134","02135","02136","02138","02139","02140","02141","02142","02143","02144","02145","02148","02149","02150","02151","02152","02155","02163","02169","02170","02171","02176","02180","02186","02188","02189","02190","02199","02203","02205","02210","02215","02301","02302","02322","02332","02343","02356","02357","02368","02375","02420","02421","02445","02446","02451","02452","02453","02457","02458","02459","02460","02461","02462","02464","02465","02466","02467","02468","02472","02474","02476","02478","02481","02482","02492","02493","02494","02534","02535","02536","02539","02540","02543","02554","02556","02557","02564","02568","02575","02584","02601","02630","02631","02633","02635","02637","02639","02641","02642","02643","02645","02646","02647","02650","02652","02653","02657","02659","02660","02663","02664","02666","02667","02670","02671","02672","02675","02713","02738","02740","02746","02763","02806","02807","02818","02835","02837","02840","02841","02842","02852","02860","02861","02863","02871","02872","02874","02879","02881","02882","02885","02888","02892","02903","02904","02905","02906","02907","02908","02909","02910","02912","02914","02915","02916","02918","03060","03064","03101","03215","03227","03229","03233","03245","03257","03259","03264","03287","03301","03304","03431","03444","03449","03450","03455","03457","03458","03574","03580","03586","03593","03604","03608","03609","03745","03748","03750","03753","03755","03766","03768","03770","03777","03781","03784","03801","03812","03820","03823","03824","03832","03833","03838","03845","03846","03854","03857","03861","03870","03871","03885","03902","03903","03904","03905","03907","03908","03909","03910","03911","04003","04005","04006","04011","04017","04019","04021","04032","04038","04043","04050","04063","04064","04066","04072","04074","04079","04086","04092","04096","04097","04101","04102","04103","04105","04106","04107","04108","04109","04110","04347","04421","04469","04473","04476","04530","04535","04538","04539","04541","04543","04548","04551","04553","04554","04558","04564","04568","04570","04573","04575","04576","04609","04614","04616","04617","04625","04627","04642","04645","04646","04650","04660","04662","04673","04675","04676","04679","04681","04683","04841","04843","04848","04849","04851","04852","04853","04855","04856","04859","04860","04863","04915","05001","05009","05031","05032","05033","05034","05035","05036","05037","05041","05043","05045","05048","05052","05053","05055","05056","05058","05059","05060","05061","05062","05065","05067","05068","05070","05071","05072","05073","05075","05077","05079","05083","05084","05088","05089","05091","05101","05141","05142","05143","05146","05148","05149","05152","05153","05154","05155","05158","05161","05201","05250","05251","05252","05253","05254","05255","05257","05262","05301","05340","05341","05343","05344","05345","05346","05351","05353","05355","05356","05359","05360","05362","05363","05401","05403","05404","05405","05408","05439","05443","05444","05445","05446","05448","05452","05456","05458","05461","05462","05464","05465","05471","05472","05473","05474","05477","05478","05482","05486","05487","05489","05491","05494","05495","05602","05640","05647","05648","05650","05651","05655","05656","05658","05660","05661","05663","05664","05666","05667","05669","05672","05673","05674","05676","05677","05680","05681","05682","05746","05747","05748","05751","05753","05762","05766","05767","05768","05770","05772","05776","05778","05819","05821","05826","05827","05828","05836","05839","05841","05842","05843","05862","05873","06001","06002","06031","06032","06033","06039","06040","06042","06051","06052","06053","06058","06066","06068","06069","06070","06073","06074","06079","06081","06089","06092","06095","06103","06105","06106","06107","06108","06110","06112","06114","06117","06118","06119","06120","06226","06250","06268","06269","06320","06333","06340","06355","06357","06360","06371","06376","06378","06380","06390","06409","06412","06417","06426","06437","06439","06442","06443","06451","06457","06459","06510","06511","06513","06514","06515","06516","06517","06518","06519","06525","06604","06605","06606","06607","06608","06610","06615","06702","06704","06705","06710","06753","06757","06777","06785","06793","06794","06796","06807","06810","06820","06824","06825","06830","06840","06850","06851","06853","06854","06855","06870","06877","06878","06880","06883","06890","06896","06897","06901","06902","06903","06905","06906","06907","07002","07003","07008","07010","07016","07017","07018","07020","07022","07023","07024","07028","07029","07030","07032","07036","07039","07040","07041","07042","07043","07046","07047","07050","07052","07055","07060","07062","07063","07065","07076","07078","07079","07081","07083","07086","07087","07088","07090","07093","07102","07103","07104","07105","07106","07107","07108","07109","07111","07112","07114","07201","07202","07203","07205","07206","07208","07302","07304","07305","07306","07307","07310","07311","07450","07452","07501","07502","07503","07504","07505","07513","07514","07522","07524","07601","07603","07605","07621","07624","07627","07631","07640","07641","07644","07650","07660","07661","07666","07670","07712","07753","07756","07801","07901","07928","07940","07960","07974","08002","08003","08007","08009","08010","08016","08021","08029","08033","08034","08035","08043","08045","08046","08048","08049","08054","08057","08060","08065","08069","08073","08081","08083","08084","08102","08103","08104","08105","08107","08108","08109","08110","08212","08232","08320","08401","08502","08512","08520","08525","08528","08530","08534","08536","08540","08542","08544","08550","08553","08555","08558","08560","08608","08609","08611","08618","08628","08629","08638","08648","08810","08817","08820","08823","08824","08837","08840","08852","08854","08861","08873","08880","08890","08901","08902","08904","10001","10002","10003","10004","10005","10006","10007","10009","10010","10011","10012","10013","10014","10016","10017","10018","10019","10020","10021","10022","10023","10024","10025","10026","10027","10028","10029","10030","10031","10032","10033","10034","10035","10036","10037","10038","10039","10040","10044","10065","10069","10075","10103","10110","10111","10112","10115","10119","10128","10152","10153","10154","10162","10165","10167","10168","10169","10170","10171","10172","10173","10174","10177","10199","10271","10278","10279","10280","10282","10301","10302","10303","10304","10310","10451","10452","10453","10454","10455","10456","10457","10458","10459","10460","10461","10462","10463","10466","10467","10468","10469","10470","10471","10472","10473","10474","10475","10502","10503","10504","10506","10507","10510","10514","10516","10518","10520","10522","10523","10524","10526","10530","10533","10536","10538","10543","10545","10546","10549","10550","10552","10553","10562","10566","10567","10570","10573","10576","10577","10580","10583","10590","10591","10597","10601","10603","10605","10606","10607","10701","10703","10705","10706","10708","10801","10803","10804","10805","10927","10928","10940","10960","10964","10968","10970","10993","10996","11003","11004","11005","11020","11021","11042","11050","11096","11101","11102","11103","11104","11105","11106","11109","11201","11203","11205","11206","11207","11208","11209","11210","11211","11212","11213","11215","11216","11217","11218","11220","11221","11222","11225","11226","11231","11232","11233","11234","11236","11237","11238","11239","11249","11354","11355","11356","11359","11360","11361","11364","11365","11368","11369","11370","11371","11372","11373","11375","11377","11385","11411","11412","11413","11415","11416","11417","11418","11419","11420","11421","11422","11423","11424","11426","11427","11428","11429","11430","11432","11433","11434","11435","11436","11439","11451","11510","11520","11549","11550","11553","11556","11575","11576","11577","11579","11580","11581","11590","11691","11692","11693","11701","11706","11713","11717","11722","11749","11753","11770","11790","11794","11797","11798","11803","11930","11932","11937","11944","11957","11959","11962","11963","11964","11965","11968","11975","11976","12017","12024","12029","12037","12054","12060","12077","12084","12106","12110","12115","12125","12132","12136","12159","12165","12180","12183","12189","12202","12203","12204","12206","12207","12208","12209","12210","12211","12222","12226","12304","12305","12307","12308","12309","12401","12404","12409","12410","12411","12412","12416","12419","12420","12429","12433","12440","12448","12457","12459","12461","12464","12471","12472","12481","12484","12491","12493","12494","12495","12498","12504","12507","12508","12529","12546","12550","12561","12571","12572","12574","12583","12601","12604","12801","12812","12866","12901","12903","12936","12939","12941","12942","12943","12945","12946","12970","12976","12977","12983","12987","13062","13066","13068","13078","13104","13202","13203","13204","13205","13206","13207","13208","13210","13214","13219","13224","13244","13290","13326","13346","13501","13655","13699","13902","13905","14201","14202","14203","14204","14207","14208","14209","14211","14212","14213","14214","14215","14216","14217","14222","14223","14226","14260","14261","14301","14302","14303","14305","14445","14450","14534","14586","14604","14605","14607","14608","14609","14610","14611","14613","14614","14615","14617","14618","14619","14620","14621","14623","14625","14627","14642","14802","14817","14850","14853","14854","14881","14882","14886","15104","15110","15112","15120","15132","15145","15147","15148","15201","15202","15203","15204","15206","15207","15208","15210","15211","15212","15213","15214","15215","15216","15217","15218","15219","15221","15222","15224","15226","15228","15232","15233","15235","15243","15260","15282","15290","15705","15901","16121","16444","16501","16502","16503","16504","16507","16508","16546","16550","16801","16802","16803","16851","17101","17102","17103","17104","17109","17110","17113","17120","17401","17504","17603","18015","18018","18042","18101","18102","18109","18301","18335","18356","18371","18466","18503","18504","18505","18508","18509","18510","18701","18901","18936","19001","19002","19003","19004","19009","19010","19012","19013","19023","19025","19026","19027","19031","19032","19034","19035","19038","19041","19046","19050","19063","19066","19067","19072","19075","19079","19081","19082","19083","19085","19086","19087","19090","19095","19096","19102","19103","19104","19106","19107","19108","19109","19111","19118","19119","19120","19121","19122","19123","19124","19125","19126","19127","19128","19129","19130","19131","19132","19133","19134","19135","19138","19139","19140","19141","19142","19143","19144","19145","19146","19147","19148","19149","19150","19151","19153","19301","19312","19320","19333","19335","19341","19345","19348","19355","19358","19375","19380","19383","19401","19405","19406","19422","19428","19436","19437","19442","19444","19446","19453","19454","19456","19460","19462","19477","19601","19602","19604","19611","19701","19702","19703","19707","19710","19711","19713","19716","19717","19720","19730","19732","19736","19801","19802","19803","19804","19805","19806","19807","19808","19809","19810","19901","19902","19904","19936","19971","20001","20002","20003","20004","20005","20006","20007","20008","20009","20010","20011","20012","20015","20016","20017","20018","20019","20020","20024","20032","20036","20037","20045","20052","20057","20059","20064","20105","20109","20110","20111","20117","20120","20121","20147","20148","20151","20152","20164","20165","20166","20170","20171","20176","20190","20191","20194","20204","20220","20230","20240","20245","20250","20260","20317","20319","20373","20388","20390","20408","20415","20418","20422","20427","20431","20510","20515","20520","20530","20535","20540","20542","20551","20560","20565","20566","20591","20601","20602","20603","20607","20608","20613","20616","20623","20634","20640","20658","20695","20701","20705","20706","20707","20708","20710","20712","20715","20716","20720","20721","20722","20723","20724","20735","20737","20740","20742","20743","20744","20745","20746","20747","20748","20755","20759","20762","20763","20769","20770","20771","20772","20774","20777","20781","20782","20783","20784","20785","20794","20812","20814","20815","20816","20817","20818","20832","20833","20837","20838","20839","20841","20842","20850","20851","20852","20853","20854","20855","20860","20861","20862","20866","20868","20871","20874","20876","20877","20878","20879","20880","20882","20886","20889","20892","20894","20895","20896","20899","20901","20902","20903","20904","20905","20906","20910","20912","21005","21017","21029","21030","21031","21036","21040","21042","21043","21044","21045","21046","21071","21075","21076","21077","21113","21114","21117","21133","21136","21144","21153","21163","21201","21202","21204","21205","21206","21207","21208","21209","21210","21211","21212","21213","21214","21215","21216","21217","21218","21223","21224","21225","21226","21228","21229","21230","21231","21233","21234","21237","21239","21244","21251","21252","21285","21286","21287","21401","21402","21403","21701","21702","21703","21704","21705","21717","21801","22003","22015","22025","22026","22027","22030","22031","22032","22033","22035","22039","22041","22042","22043","22044","22046","22060","22066","22079","22101","22102","22124","22125","22150","22151","22152","22153","22172","22180","22181","22182","22191","22192","22193","22201","22202","22203","22204","22205","22206","22207","22209","22211","22213","22214","22301","22302","22303","22304","22305","22306","22307","22308","22309","22310","22311","22312","22314","22315","22401","22436","22438","22469","22476","22488","22509","22529","22807","22901","22902","22903","22904","22908","22911","22931","22936","22937","22943","22946","22959","22969","23060","23075","23147","23173","23219","23220","23221","23222","23223","23224","23225","23226","23227","23228","23230","23231","23234","23235","23237","23284","23294","23298","23306","23307","23316","23320","23324","23325","23408","23413","23414","23416","23420","23434","23435","23462","23486","23488","23502","23503","23504","23505","23507","23508","23509","23510","23511","23513","23517","23523","23551","23603","23604","23605","23607","23608","23661","23663","23665","23666","23667","23668","23669","23681","23691","23701","23702","23703","23704","23707","23708","23709","23801","23803","23805","23839","23843","23847","23856","23868","23870","23889","23909","24011","24015","24016","24017","24060","24061","24142","24565","27101","27103","27104","27105","27106","27109","27110","27127","27260","27268","27278","27312","27401","27403","27405","27406","27407","27408","27409","27410","27411","27412","27502","27510","27511","27513","27514","27516","27517","27518","27519","27523","27531","27536","27545","27553","27560","27563","27589","27594","27599","27601","27604","27605","27606","27607","27608","27609","27610","27612","27613","27616","27617","27695","27697","27701","27703","27704","27705","27707","27708","27709","27712","27713","27801","27818","27823","27831","27832","27834","27839","27840","27841","27844","27845","27847","27849","27855","27861","27866","27869","27872","27874","27876","27890","27891","27893","27910","27922","27960","27967","27970","27983","27986","28039","28091","28102","28119","28134","28202","28203","28204","28205","28206","28208","28209","28210","28211","28212","28213","28214","28215","28216","28217","28223","28244","28262","28269","28273","28278","28280","28282","28301","28303","28304","28310","28311","28314","28401","28434","28501","28607","28801","28803","28804","28805","28806","29003","29010","29015","29016","29018","29031","29042","29044","29046","29048","29052","29056","29059","29061","29062","29065","29079","29080","29104","29113","29115","29117","29118","29125","29128","29142","29163","29180","29201","29203","29204","29205","29207","29208","29209","29210","29223","29225","29229","29306","29378","29403","29404","29405","29406","29407","29409","29418","29424","29425","29426","29436","29446","29450","29452","29458","29468","29479","29487","29506","29512","29519","29525","29546","29556","29560","29564","29571","29580","29589","29590","29601","29605","29733","29810","29817","29827","29836","29840","29899","29904","29912","29918","29920","29921","29922","29923","29932","29934","29939","29940","29943","29945","30002","30008","30012","30013","30016","30021","30033","30034","30035","30038","30039","30044","30045","30046","30058","30060","30071","30072","30079","30080","30082","30083","30084","30087","30088","30090","30093","30094","30096","30106","30111","30122","30126","30135","30168","30213","30214","30228","30236","30238","30250","30253","30260","30272","30273","30274","30281","30288","30291","30294","30296","30297","30303","30306","30307","30308","30309","30310","30311","30312","30313","30314","30315","30316","30317","30318","30319","30322","30324","30326","30328","30329","30331","30332","30334","30336","30337","30339","30340","30341","30344","30345","30346","30349","30350","30354","30360","30363","30460","30477","30601","30602","30605","30606","30607","30609","30631","30664","30812","30815","30901","30904","30905","30906","30909","30912","31034","31045","31062","31063","31087","31098","31201","31204","31206","31207","31211","31213","31217","31301","31313","31323","31327","31333","31401","31404","31405","31407","31409","31415","31419","31520","31698","31701","31704","31705","31707","31719","31814","31815","31827","31901","31903","31906","31907","32114","32202","32203","32204","32205","32206","32208","32209","32219","32254","32301","32303","32304","32305","32306","32307","32308","32310","32311","32313","32324","32332","32343","32351","32352","32399","32426","32501","32505","32601","32603","32605","32606","32607","32608","32609","32610","32612","32641","32653","32768","32801","32803","32805","32807","32808","32810","32811","32814","32816","32817","32818","32821","32822","32824","32825","32826","32828","32829","32831","32835","32837","32839","33004","33020","33022","33023","33024","33025","33026","33027","33028","33034","33035","33040","33054","33055","33056","33060","33063","33065","33066","33068","33069","33071","33073","33101","33127","33131","33132","33133","33136","33137","33138","33139","33141","33142","33147","33150","33161","33162","33167","33168","33169","33170","33179","33181","33304","33305","33309","33311","33312","33313","33314","33317","33319","33321","33322","33324","33334","33351","33388","33401","33403","33404","33407","33409","33413","33415","33417","33430","33435","33437","33444","33445","33460","33463","33473","33476","33484","33493","33602","33603","33604","33605","33607","33610","33612","33613","33617","33619","33620","33637","33647","33701","33704","33705","33711","33712","33713","33716","33858","33896","33916","34234","34741","34743","34746","34758","34759","34947","34950","35020","35032","35060","35061","35064","35127","35203","35204","35205","35206","35207","35208","35211","35212","35214","35215","35217","35218","35221","35222","35224","35228","35233","35234","35235","35249","35254","35401","35404","35405","35442","35443","35459","35460","35462","35464","35470","35476","35477","35491","35632","35649","35805","35810","35816","35896","36031","36032","36039","36040","36047","36053","36075","36083","36088","36089","36101","36104","36105","36107","36108","36110","36111","36112","36113","36116","36130","36205","36425","36435","36471","36481","36482","36540","36556","36602","36603","36604","36605","36606","36607","36610","36612","36615","36617","36618","36663","36688","36701","36703","36720","36722","36723","36727","36728","36736","36738","36740","36741","36744","36751","36752","36753","36756","36759","36761","36764","36765","36766","36767","36768","36769","36773","36775","36776","36785","36786","36850","36856","36860","36865","36901","36907","36910","36912","36916","36922","36925","37013","37115","37132","37189","37203","37204","37206","37207","37208","37209","37210","37211","37212","37213","37216","37217","37218","37228","37232","37383","37402","37403","37404","37406","37407","37408","37409","37410","37411","37416","37902","37915","37916","37917","37929","38016","38018","38039","38103","38104","38105","38106","38107","38108","38109","38111","38112","38113","38114","38115","38116","38118","38125","38126","38127","38128","38131","38132","38141","38614","38617","38621","38622","38623","38626","38631","38635","38639","38643","38645","38646","38647","38664","38670","38673","38676","38701","38703","38721","38726","38732","38737","38740","38746","38751","38754","38756","38760","38761","38762","38764","38765","38769","38771","38773","38774","38778","38781","38860","38879","38921","38924","38928","38930","38941","38946","38954","38957","38963","38964","38966","39038","39041","39045","39046","39054","39061","39063","39066","39069","39079","39083","39086","39095","39096","39097","39113","39115","39144","39146","39150","39159","39160","39166","39169","39174","39179","39194","39201","39202","39203","39204","39206","39209","39210","39212","39213","39216","39217","39269","39272","39307","39328","39341","39348","39352","39358","39361","39366","39401","39406","39421","39440","39474","39501","39563","39631","39635","39648","39669","39701","39736","39739","39743","39756","39815","39846","43004","43068","43081","43085","43109","43201","43202","43203","43204","43205","43206","43207","43209","43210","43211","43212","43213","43214","43215","43218","43219","43220","43221","43222","43224","43227","43229","43230","43231","43232","43235","43240","43403","43604","43605","43606","43607","43608","43609","43610","43612","43614","43615","43620","44022","44052","44055","44074","44087","44101","44102","44103","44104","44105","44106","44107","44108","44109","44110","44111","44112","44113","44114","44115","44116","44117","44118","44119","44120","44121","44122","44123","44124","44125","44127","44128","44132","44135","44137","44139","44143","44146","44240","44243","44301","44302","44303","44304","44305","44306","44307","44308","44310","44311","44313","44320","44325","44405","44485","44502","44503","44504","44505","44506","44507","44509","44510","44555","44702","44703","44704","45202","45203","45205","45206","45207","45208","45209","45211","45212","45213","45214","45215","45216","45217","45219","45220","45223","45224","45225","45226","45227","45229","45231","45232","45237","45240","45267","45384","45387","45402","45405","45406","45409","45415","45416","45417","45419","45423","45426","45428","45469","45506","45701","45780","46201","46202","46204","46205","46206","46208","46214","46216","46218","46219","46220","46222","46224","46225","46226","46228","46229","46235","46240","46250","46254","46260","46268","46278","46312","46320","46323","46324","46327","46394","46402","46403","46404","46406","46407","46408","46409","46410","46556","46601","46613","46615","46616","46617","46619","46624","46628","46802","46803","46806","46807","46816","47305","47306","47401","47404","47405","47406","47408","47708","47713","47809","47901","47907","48021","48025","48030","48033","48034","48067","48069","48070","48072","48073","48075","48076","48089","48091","48103","48104","48105","48108","48109","48120","48122","48124","48126","48127","48128","48130","48141","48174","48185","48187","48188","48197","48198","48201","48202","48203","48204","48205","48206","48207","48208","48209","48210","48211","48212","48213","48214","48215","48216","48217","48218","48219","48220","48221","48223","48224","48225","48226","48227","48228","48229","48230","48233","48234","48235","48237","48238","48239","48240","48242","48243","48322","48331","48334","48335","48336","48340","48341","48342","48377","48502","48503","48504","48505","48507","48532","48601","48602","48607","48823","48824","48825","48840","48842","48859","48864","48906","48910","48911","48912","48915","48917","48933","49001","49006","49007","49008","49022","49074","49104","49406","49440","49443","49503","49504","49505","49506","49507","49508","49512","49670","49674","49855","50010","50012","50013","50014","50265","50309","50310","50311","50312","50314","50315","50316","50319","50320","50321","50324","50703","52240","52241","52242","52245","52246","52317","52340","52401","52402","52403","52404","52405","52557","52776","52801","52803","53202","53203","53204","53205","53206","53207","53208","53209","53210","53211","53212","53213","53215","53216","53217","53218","53222","53223","53224","53225","53226","53233","53235","53295","53403","53404","53405","53508","53515","53517","53521","53527","53528","53532","53536","53558","53562","53572","53574","53575","53582","53589","53590","53593","53597","53598","53703","53704","53705","53706","53711","53713","53714","53715","53716","53717","53718","53719","53726","53792","54135","54150","54210","54211","54234","54458","54481","54601","54603","54814","54827","54850","54861","54891","55057","55075","55101","55102","55103","55104","55105","55106","55107","55108","55109","55111","55112","55113","55114","55116","55117","55118","55119","55120","55121","55122","55123","55124","55125","55126","55130","55150","55155","55305","55337","55343","55344","55345","55346","55347","55401","55402","55403","55404","55405","55406","55407","55408","55409","55410","55411","55412","55413","55414","55415","55416","55417","55418","55419","55420","55421","55422","55423","55424","55425","55426","55427","55428","55429","55430","55431","55432","55435","55436","55437","55438","55439","55441","55442","55443","55444","55445","55446","55447","55450","55454","55455","55604","55605","55606","55612","55613","55615","55772","55802","55804","55805","55806","55807","55808","55811","55812","55901","55902","56562","56563","56566","56633","56666","56670","56671","57197","57257","57339","57361","57548","57555","57563","57566","57570","57572","57577","57621","57622","57625","57636","57639","57642","57652","57658","57661","57714","57716","57752","57756","57764","57770","57772","57794","58316","58329","58335","58369","58370","58528","58538","58757","59016","59022","59031","59043","59050","59213","59255","59411","59417","59434","59448","59521","59526","59527","59601","59623","59625","59715","59801","59802","59803","59812","60004","60005","60008","60015","60022","60025","60026","60029","60030","60031","60035","60040","60043","60044","60048","60053","60060","60061","60062","60064","60067","60069","60073","60074","60076","60077","60085","60087","60088","60089","60090","60091","60093","60099","60104","60107","60110","60115","60120","60123","60126","60130","60131","60133","60137","60139","60141","60148","60153","60154","60155","60160","60162","60163","60164","60165","60169","60173","60181","60194","60195","60201","60202","60203","60208","60301","60302","60304","60305","60402","60406","60409","60411","60417","60419","60422","60425","60426","60428","60429","60430","60432","60433","60435","60436","60438","60440","60443","60446","60461","60466","60469","60471","60472","60473","60475","60478","60484","60490","60501","60502","60503","60504","60505","60506","60513","60515","60517","60519","60525","60526","60532","60534","60538","60540","60546","60555","60558","60559","60563","60564","60565","60601","60602","60603","60604","60605","60606","60607","60608","60609","60610","60611","60612","60613","60614","60615","60616","60617","60618","60619","60620","60621","60622","60623","60624","60625","60626","60628","60629","60630","60632","60633","60634","60636","60637","60639","60640","60641","60642","60643","60644","60645","60646","60647","60649","60651","60652","60653","60654","60657","60659","60660","60661","60707","60803","60804","60805","60827","60958","61101","61102","61103","61104","61201","61402","61602","61603","61604","61605","61606","61625","61701","61761","61801","61802","61820","61821","61822","61874","62026","62059","62060","62090","62201","62203","62204","62205","62206","62207","62208","62523","62701","62703","62704","62706","62901","62903","62914","63031","63033","63034","63042","63043","63045","63074","63101","63102","63103","63104","63105","63106","63107","63108","63109","63110","63111","63112","63113","63114","63115","63116","63117","63118","63119","63120","63121","63122","63130","63132","63133","63134","63135","63136","63137","63138","63139","63140","63141","63143","63144","63146","63147","63155","64030","64065","64101","64102","64105","64106","64108","64109","64110","64111","64112","64113","64114","64116","64120","64123","64124","64125","64126","64127","64128","64129","64130","64131","64132","64133","64134","64136","64137","64138","65201","65203","65215","65216","65806","65897","66044","66045","66046","66047","66049","66101","66102","66103","66104","66105","66112","66115","66118","66160","66202","66204","66205","66206","66207","66208","66212","66214","66603","66604","66606","66607","66611","66612","66621","66622","67117","67202","67208","67214","67218","67220","67260","68039","68071","68102","68104","68105","68106","68107","68108","68110","68111","68131","68132","68178","68182","68183","68502","68503","68508","68510","68588","70039","70049","70051","70057","70058","70068","70082","70083","70084","70086","70090","70112","70113","70114","70115","70116","70117","70118","70119","70122","70125","70126","70127","70128","70130","70131","70139","70148","70163","70346","70441","70465","70501","70514","70541","70601","70615","70714","70721","70723","70725","70747","70757","70760","70787","70788","70789","70801","70802","70803","70805","70806","70807","70811","70812","70813","70814","70815","70825","71021","71028","71048","71052","71066","71101","71103","71108","71109","71110","71119","71129","71202","71209","71212","71245","71254","71282","71301","71302","71334","71414","71456","71497","71601","71603","71638","71640","71643","71644","71659","71677","71678","71831","71922","72004","72035","72036","72053","72107","72114","72117","72175","72180","72183","72201","72202","72204","72205","72206","72207","72209","72211","72227","72301","72331","72335","72339","72342","72359","72389","72390","72701","72703","73019","73050","73069","73070","73084","73102","73103","73104","73105","73106","73107","73108","73109","73111","73112","73114","73117","73118","73119","73121","73129","73141","74077","74078","74103","74104","74106","74110","74119","74120","74126","74127","74130","74463","75001","75038","75039","75042","75050","75051","75052","75054","75061","75063","75074","75081","75104","75115","75116","75134","75137","75141","75146","75172","75180","75181","75201","75202","75203","75204","75206","75207","75208","75210","75211","75212","75214","75215","75216","75217","75218","75219","75220","75223","75224","75226","75227","75228","75231","75232","75233","75234","75235","75236","75237","75240","75241","75243","75246","75247","75249","75251","75253","75254","75270","75287","75702","75711","76002","76006","76010","76011","76014","76018","76103","76104","76105","76106","76110","76111","76112","76115","76119","76120","76123","76133","76134","76140","76155","76164","76201","76203","76205","76209","76541","76542","76543","76549","76701","76704","76707","76711","76798","77002","77003","77004","77005","77006","77007","77008","77009","77010","77011","77012","77013","77014","77015","77016","77017","77019","77020","77021","77022","77023","77025","77026","77028","77029","77030","77031","77032","77033","77035","77036","77037","77038","77039","77042","77044","77045","77046","77047","77048","77049","77050","77051","77053","77054","77060","77061","77063","77066","77067","77071","77072","77073","77074","77075","77076","77078","77081","77082","77083","77085","77086","77087","77088","77090","77091","77092","77093","77096","77098","77099","77204","77338","77342","77396","77407","77436","77443","77446","77449","77451","77477","77489","77545","77547","77550","77555","77591","77640","77642","77701","77702","77703","77708","77803","78040","78041","78043","78046","78109","78201","78202","78203","78204","78205","78207","78208","78210","78211","78212","78213","78214","78215","78218","78219","78220","78221","78222","78223","78224","78225","78226","78227","78228","78229","78235","78237","78238","78240","78242","78244","78245","78249","78250","78251","78341","78349","78353","78360","78405","78406","78407","78408","78415","78416","78417","78501","78520","78521","78526","78537","78538","78543","78558","78561","78567","78570","78577","78579","78589","78594","78599","78617","78652","78653","78660","78664","78666","78701","78702","78703","78704","78705","78712","78717","78719","78721","78722","78723","78724","78725","78726","78727","78728","78729","78731","78733","78735","78736","78739","78741","78742","78744","78745","78746","78747","78748","78749","78750","78751","78752","78753","78754","78756","78757","78758","78759","78827","78829","78834","78839","79013","79401","79402","79821","79832","79834","79835","79836","79838","79843","79845","79846","79849","79853","79854","79901","79902","79903","79904","79905","79907","79911","79912","79915","79920","79924","79925","79927","79928","79930","79932","79934","79935","79936","79938","80002","80003","80010","80011","80012","80013","80014","80017","80019","80020","80021","80024","80025","80026","80027","80030","80031","80033","80045","80110","80111","80112","80113","80120","80202","80203","80204","80205","80206","80207","80209","80210","80211","80212","80214","80215","80216","80218","80219","80220","80221","80222","80223","80224","80226","80227","80228","80229","80230","80231","80232","80236","80237","80238","80239","80246","80247","80249","80260","80264","80266","80290","80293","80294","80301","80302","80303","80304","80305","80310","80401","80403","80419","80420","80423","80424","80435","80442","80443","80444","80453","80455","80457","80461","80466","80471","80474","80476","80478","80481","80482","80487","80498","80501","80503","80510","80521","80524","80525","80526","80540","80544","80829","80903","81001","81003","81004","81126","81129","81131","81152","81201","81224","81225","81301","81332","81334","81426","81427","81430","81432","81433","81435","81601","81611","81612","81615","81620","81621","81623","81631","81632","81642","81645","81649","81654","81655","81656","81657","82510","82512","82514","83001","83011","83012","83013","83014","83025","83203","83209","83333","83340","83353","83354","83540","83702","83703","83705","83706","83712","83720","83725","83843","83844","84047","84060","84098","84101","84102","84103","84104","84105","84106","84107","84108","84109","84111","84112","84113","84114","84115","84116","84117","84119","84121","84124","84138","84150","84180","84512","84531","84533","84534","84536","84763","84767","85003","85004","85006","85007","85008","85009","85012","85013","85014","85015","85016","85017","85019","85020","85021","85026","85031","85033","85034","85035","85037","85040","85041","85042","85043","85044","85121","85135","85147","85173","85192","85202","85210","85256","85264","85281","85282","85283","85284","85301","85303","85323","85329","85336","85339","85349","85350","85353","85371","85530","85542","85550","85603","85607","85608","85618","85620","85621","85626","85634","85639","85640","85646","85648","85701","85705","85706","85709","85711","85712","85713","85714","85716","85718","85719","85721","85723","85724","85726","85745","85746","85750","85756","85757","86001","86003","86005","86011","86016","86020","86023","86028","86029","86030","86031","86033","86034","86035","86039","86042","86043","86044","86045","86053","86054","86435","86502","86503","86504","86505","86506","86507","86508","86510","86511","86512","86514","86515","86520","86535","86538","86540","86544","86545","86547","86556","87001","87007","87010","87013","87018","87022","87024","87026","87034","87038","87040","87041","87043","87048","87052","87053","87072","87083","87101","87102","87104","87105","87106","87107","87108","87110","87116","87121","87151","87301","87305","87310","87311","87312","87313","87316","87317","87319","87320","87321","87322","87323","87325","87326","87327","87328","87357","87364","87365","87375","87420","87455","87461","87499","87501","87505","87506","87507","87508","87510","87511","87512","87513","87514","87515","87517","87518","87519","87521","87522","87523","87524","87525","87527","87528","87529","87530","87531","87532","87535","87537","87538","87539","87540","87543","87544","87548","87549","87552","87553","87554","87556","87557","87560","87562","87564","87565","87566","87567","87569","87571","87573","87577","87578","87579","87580","87581","87582","87583","87701","87711","87712","87713","87715","87722","87723","87731","87732","87734","87735","87736","87745","87750","87752","87753","88001","88003","88005","88021","88023","88024","88026","88027","88029","88043","88044","88046","88048","88063","88072","88340","88353","89030","89031","89032","89081","89086","89101","89102","89103","89104","89106","89107","89108","89110","89115","89119","89121","89122","89142","89156","89169","89191","89314","89424","89427","89431","89442","89501","89502","89503","89509","89512","89557","89832","90001","90002","90003","90004","90005","90006","90007","90008","90010","90011","90012","90013","90014","90015","90016","90017","90018","90019","90020","90021","90022","90023","90024","90025","90026","90027","90028","90029","90031","90032","90033","90034","90035","90036","90037","90038","90039","90040","90041","90042","90043","90044","90045","90046","90047","90048","90049","90052","90056","90057","90058","90059","90061","90062","90063","90064","90065","90066","90067","90068","90069","90071","90073","90077","90079","90089","90094","90095","90201","90212","90220","90221","90222","90230","90232","90240","90241","90242","90245",25157,"90248","90249","90250","90254","90255","90260","90262","90263","90265","90266","90270","90272","90277","90278","90280","90290","90291","90292","90293",25158,"90302","90303","90304","90305","90401","90402","90403","90404","90405","90501","90502","90503","90504","90506","90601","90602","90604","90605","90606","90621","90640",25159,"90660","90670","90701","90703","90704","90706","90710","90712","90715","90716","90717","90723","90731","90732","90744","90745","90746","90747","90755","90802","90803","90804","90805","90806","90807","90808","90810","90813","90814","90815","90822","90831","90840","91001","91006","91007","91010","91011","91016","91020","91024","91030","91046","91101","91103","91104","91105","91106","91107","91108","91125","91203","91204","91205","91206","91208","91210","91214","91301","91302","91303","91304","91306","91307","91311","91316","91324","91325","91326","91330","91331","91335","91340","91342","91343","91344","91345","91352","91356","91364","91367","91371","91377","91401","91402","91403","91405","91406","91411","91423","91436","91501","91502","91504","91505","91506","91601","91602","91604","91605","91606","91607","91608","91702","91706","91711","91722","91723","91731","91732","91733","91744","91745","91746","91748","91754","91755","91761","91762","91763","91764","91765","91766","91767","91768","91770","91775","91776","91780","91789","91790","91791","91792","91801","91803","91910","91911","91913","91914","91915","91941","91942","91945","91950","91977","92007","92009","92014","92024","92037","92054","92075","92083","92092","92093","92096","92101","92102","92103","92104","92105","92106","92107","92108","92109","92110","92111","92113","92114","92115","92116","92117","92119","92120","92121","92122","92123","92124","92126","92127","92129","92130","92131","92132","92134","92136","92139","92140","92145","92147","92154","92161","92173","92179","92182","92201","92222","92231","92233","92234","92236","92240","92243","92249","92254","92258","92262","92264","92273","92274","92281","92283","92301","92316","92324","92328","92335","92336","92337","92350","92376","92377","92384","92389","92394","92401","92404","92405","92407","92408","92410","92411","92415","92501","92505","92507","92509","92521","92549","92551","92553","92555","92557","92571","92602","92603","92604","92606","92612","92614","92617","92618","92620","92651","92697","92701","92703","92704","92706","92707","92780","92782","92801","92802","92805","92806","92831","92832","92868","93001","93003","93004","93013","93015","93023","93030","93033","93035","93036","93041","93060","93067","93101","93103","93105","93106","93108","93109","93110","93111","93117","93203","93204","93215","93219","93223","93227","93234","93235","93239","93241","93249","93250","93258","93261","93304","93305","93307","93401","93402","93405","93407","93409","93410","93424","93428","93434","93442","93458","93524","93534","93535","93541","93546","93550","93552","93591","93606","93615","93616","93622","93635","93638","93640","93646","93647","93648","93650","93660","93701","93702","93703","93704","93705","93706","93721","93722","93725","93726","93727","93728","93740","93741","93901","93905","93906","93907","93920","93921","93923","93924","93925","93926","93927","93930","93933","93940","93943","93944","93950","93953","93955","93960","94002","94005","94010","94014","94015","94018","94019","94020","94021","94022","94024","94025","94027","94028","94030","94037","94038","94040","94041","94043","94044","94060","94061","94062","94063","94065","94066","94070","94080","94085","94086","94087","94089","94102","94103","94104","94105","94107","94108","94109","94110","94111","94112","94114","94115","94116","94117","94118","94121","94122","94123","94124","94127","94128","94129","94130","94131","94132","94133","94134","94158","94188","94301","94303","94304","94305","94306","94401","94402","94403","94404","94501","94502","94503","94506","94507","94508","94509","94510","94515","94516","94517","94518","94519","94520","94521","94523","94525","94526","94530","94531","94533","94534","94535","94536","94538","94539","94541","94542","94544","94545","94546","94547","94549","94550","94551","94552","94553","94555","94556","94558","94559","94560","94562","94563","94564","94565","94566","94568","94569","94572","94573","94574","94575","94576","94577","94578","94579","94580","94582","94583","94585","94586","94587","94588","94589","94590","94591","94592","94595","94596","94597","94598","94599","94601","94602","94603","94605","94606","94607","94608","94609","94610","94611","94612","94613","94618","94619","94621","94702","94703","94704","94705","94706","94707","94708","94709","94710","94720","94801","94803","94804","94805","94806","94901","94903","94904","94920","94922","94923","94924","94925","94928","94929","94930","94931","94933","94937","94938","94939","94940","94941","94945","94946","94947","94949","94950","94951","94952","94954","94956","94957","94960","94963","94964","94965","94970","94971","94972","94973","95002","95003","95004","95005","95006","95007","95008","95010","95012","95013","95014","95017","95018","95019","95020","95023","95030","95032","95033","95035","95037","95039","95041","95045","95046","95050","95051","95053","95054","95060","95062","95064","95065","95066","95070","95073","95076","95110","95111","95112","95113","95116","95117","95118","95119","95120","95121","95122","95123","95124","95125","95126","95127","95128","95129","95130","95131","95132","95133","95134","95135","95136","95138","95139","95140","95148","95202","95203","95204","95205","95206","95207","95209","95210","95211","95212","95231","95315","95318","95330","95334","95341","95348","95351","95363","95365","95376","95377","95389","95391","95401","95403","95404","95405","95407","95409","95410","95412","95415","95417","95419","95420","95421","95425","95427","95428","95429","95430","95431","95432","95436","95437","95439","95441","95442","95444","95445","95446","95448","95449","95450","95452","95454","95456","95459","95460","95462","95463","95465","95466","95468","95471","95472","95476","95480","95482","95486","95488","95490","95492","95494","95497","95501","95503","95511","95514","95519","95521","95524","95525","95542","95545","95546","95549","95550","95553","95554","95555","95556","95558","95559","95560","95564","95568","95570","95585","95587","95589","95604","95605","95616","95618","95646","95652","95691","95728","95757","95758","95776","95811","95814","95815","95816","95817","95818","95819","95820","95821","95822","95823","95824","95825","95826","95827","95828","95829","95831","95832","95833","95834","95835","95838","95864","95926","95928","95929","95951","95959","96111","96120","96140","96141","96142","96143","96145","96146","96148","96150","96161","96701","96703","96704","96705","96708","96710","96713","96714","96716","96719","96720","96722","96725","96726","96727","96728","96729","96732","96734","96738","96740","96741","96742","96743","96744","96746","96747","96748","96749","96750","96751","96752","96753","96754","96755","96756","96757","96759","96760","96761","96763","96764","96765","96766","96768","96769","96770","96771","96772","96773","96774","96776","96777","96778","96779","96780","96781","96782","96783","96785","96789","96790","96791","96793","96795","96796","96813","96814","96815","96816","96817","96818","96821","96822","96825","96826","96848","96850","96857","96858","96859","96863","97003","97005","97006","97007","97008","97024","97031","97034","97035","97040","97041","97062","97068","97070","97078","97102","97103","97110","97123","97124","97130","97131","97134","97145","97147","97149","97201","97202","97203","97204","97205","97206","97208","97209","97210","97211","97212","97213","97214","97215","97216","97217","97218","97219","97220","97221","97222","97223","97224","97225","97227","97229","97230","97231","97232","97233","97236","97239","97258","97266","97267","97301","97302","97330","97331","97333","97365","97366","97367","97369","97376","97388","97401","97402","97403","97404","97405","97408","97477","97498","97520","97540","97702","97703","97709","97730","97761","98002","98003","98004","98005","98006","98007","98008","98011","98012","98014","98019","98020","98021","98023","98026","98027","98028","98029","98030","98031","98032","98033","98034","98036","98037","98039","98040","98043","98045","98050","98052","98053","98055","98056","98057","98058","98059","98065","98070","98072","98074","98075","98077","98087","98101","98102","98103","98104","98105","98106","98107","98108","98109","98110","98112","98115","98116","98117","98118","98119","98121","98122","98125","98126","98133","98134","98136","98144","98146","98148","98154","98155","98158","98164","98166","98168","98174","98177","98178","98188","98195","98198","98199","98201","98203","98204","98207","98208","98221","98225","98226","98229","98236","98239","98243","98245","98249","98250","98253","98256","98257","98260","98261","98262","98275","98279","98280","98281","98286","98288","98297","98310","98314","98337","98339","98340","98342","98346","98357","98358","98364","98365","98368","98370","98381","98392","98402","98403","98404","98405","98406","98407","98408","98409","98416","98418","98421","98422","98424","98444","98447","98465","98466","98467","98499","98501","98502","98503","98505","98506","98562","98571","98587","98605","98651","98660","98661","98663","98672","98683","98833","98862","98933","98939","98941","98948","98951","99040","99116","99138","99140","99155","99163","99201","99202","99203","99204","99258","99501","99503","99513","99517","99519","99530","99540","99549","99552","99554","99557","99558","99561","99563","99575","99578","99585","99587","99589","99590","99591","99602","99604","99605","99607","99609","99614","99620","99621","99625","99626","99630","99632","99634","99635","99636","99637","99640","99643","99644","99650","99651","99653","99655","99656","99657","99658","99660","99662","99665","99666","99668","99670","99679","99680","99681","99682","99683","99684","99689","99690","99720","99721","99722","99724","99725","99733","99734","99739","99740","99742","99745","99746","99748","99749","99751","99752","99754","99758","99765","99767","99768","99769","99772","99773","99774","99775","99777","99778","99781","99783","99784","99785","99786","99788","99789","99801","99820","99824","99825","99826","99827","99829","99830","99840","99841","99850","99922","99926"]),106904:i.r(58,"nexstar_188","106904"),106971:i.r(36,1,28),107240:i.r(58,"nexstar_189","107240"),107241:i.r(58,"nexstar_190","107241"),107493:i.r(36,1,28),107498:i.r(36,1,3),107511:i.r(58,"nexstar_191","107511"),107513:i.q(i.acq(i.acq(i.cw(0,i.t,i.ge(1)),i.ocq(i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],100884)),i.cw(2,i.pe(7,100884)),i.ge(1)),i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],99077)),i.cw(2,i.pe(7,99077)),i.ge(1)))),i.ocq(i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],106883)),i.cw(2,i.pe(7,106883)),i.e(0)),i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],106971)),i.cw(2,i.pe(7,106971)),i.e(0))))),107686:i.r(4,i.ref(3),i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],100884)),i.cw(2,i.pe(7,100884)),i.ge(1)),i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],99077)),i.cw(2,i.pe(7,99077)),i.ge(1))),107696:i.r(1,i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],106971)),i.cw(2,i.pe(7,106971)),i.e(0)),i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],106883)),i.cw(2,i.pe(7,106883)),i.e(0)),i.ocq(i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],99069)),i.cw(2,i.pe(7,99069)),i.ge(1)),i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],99077)),i.cw(2,i.pe(7,99077)),i.ge(1))),0,i.t,i.ge(1)),107946:i.r(29,i.y(3,7720),i.ref(19)),107947:i.r(28,i.y(3,7720),19),107948:i.r(28,i.ref(17),19),107949:i.r(28,i.nt(i.ref(17)),19),107986:i.r(58,"nexstar_192","107986"),107987:i.r(58,"nexstar_193","107987"),108271:i.r(58,"nexstar_194","108271"),108473:i.r(58,"nexstar_195","108473"),108535:i.r(58,"nexstar_196","108535"),108539:i.r(58,"nexstar_197","108539"),109203:i.r(6,1,["/arts & entertainment/music & audio/urban & hip-hop","/finance/grants, scholarships & financial aid","/food & drink/restaurants/restaurant reviews & reservations","/home & garden/gardening & landscaping","/sports/individual sports"]),109205:i.r(6,3,["/business & industrial/energy & utilities/oil & gas","/business & industrial/pharmaceuticals & biotech","/computers & electronics/computer security/hacking & cracking","/food & drink/beverages","/health/health conditions/cancer"]),109299:i.r(58,"nexstar_198","109299"),109405:i.r(1,i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],106971)),i.cw(2,i.pe(7,106971)),i.e(0)),i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],106883)),i.cw(2,i.pe(7,106883)),i.e(0)),i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],107948)),i.cw(2,i.pe(7,107948)),i.ge(1)),0,i.t,i.ge(1)),109506:i.r(58,"nexstar_199","109506"),109759:i.r(29,i.ps(["content","authorName"],"The Hill"),i.ps(8,"thehill")),110626:i.r(11,i.ocq(i.ocq(i.ocq(i.itp("liveramp_Epsilon","1003069936",!1,"110626"),i.itp("liveramp_Experian","1004256489",!1,"110626")),i.itp("liveramp_Acxiom","10901",!1,"110626")),i.itp("liveramp_MeritDirect","1002713866",!1,"110626")),"eyeota","6681","110626"),110628:i.r(11,i.ocq(i.ocq(i.itp("liveramp_Epsilon","1003069926",!1,"110628"),i.itp("liveramp_Experian","1004256479",!1,"110628")),i.itp("liveramp_MeritDirect","1002713876",!1,"110628")),"eyeota","35435","110628"),113066:i.r(11,i.ocq(i.ocq(i.itp("liveramp_Epsilon","1001001009",!1,"113066"),i.itp("liveramp_Experian","1004601399",!1,"113066")),i.itp("liveramp_killi","1006892981",!1,"113066")),"liveramp_Mastercard","1005908161","113066"),113069:i.r(11,i.ocq(i.itp("liveramp_Acxiom","300730899",!1,"113069"),i.itp("liveramp_Acxiom","300618399",!1,"113069")),"liveramp_Acxiom","300618499","113069"),113071:i.r(11,i.itp("liveramp_Kantar","1003694059",!1,"113071"),"liveramp_Illion","1005349339","113071"),113072:i.r(11,i.itp("liveramp_Kantar","1003694339",!1,"113072"),"liveramp_Illion","1005308699","113072"),113073:i.r(61,7),113607:i.r(52,i.ref(11),i.ref(18)),113608:i.r(12,"113608",i.itp("liveramp_Epsilon","1003068846",!1,"113608"),"eyeota","35782","113608"),113800:i.r(15,"liveramp_ShareThis","1005133459",!1,"113800"),113801:i.r(15,"liveramp_Alliant","1002764476",!1,"113801"),113802:i.r(15,"liveramp_Experian","1007228811",!1,"113802"),113804:i.r(15,"eyeota","1539",!1,"113804"),113805:i.r(50,1,1,0),113806:i.r(47,1,7692),113807:i.r(48,1,"Sports & Fitness"),113808:i.r(47,1,7734),113809:i.r(47,1,7731),113810:i.r(48,1,"Computer"),113811:i.r(47,1,30),113812:i.r(47,1,7735),113813:i.r(48,1,"Phones"),113814:i.r(47,1,26017),113815:i.r(47,1,29),113816:i.r(47,1,32),113817:i.r(47,1,26148),113818:i.r(48,1,"Gaming"),113819:i.r(47,1,7736),113820:i.r(47,1,7730),113821:i.r(47,1,13),113822:i.r(48,1,"Toys & Games"),113823:i.r(48,1,"Cameras"),113824:i.r(48,1,"Appliances"),113825:i.r(47,1,7697),113826:i.r(47,1,7698),113827:i.r(48,1,"TVs"),113828:i.r(47,1,26013),113829:i.r(47,1,31),113833:i.r(36,3,10),114083:i.r(15,"liveramp_Epsilon","1003068276",!1,"114083"),114093:i.r(57,"nexstar_200","114093","nxd_blue_116","114093"),114094:i.r(57,"nexstar_201","114094","nxd_blue_117","114094"),114095:i.r(57,"nexstar_202","114095","nxd_blue_118","114095"),114289:i.r(58,"nexstar_203","114289"),114290:i.r(58,"nexstar_204","114290"),114456:i.r(58,"nexstar_205","114456"),114693:i.r(7,1,.1),114694:i.r(10,i.pge(5,.1),1),114695:i.r(10,i.pg(5,.1),5),114810:i.r(21,.72657806),114811:i.r(18,"49842cea-cbb8-49fe-9813-39c48c1522ff",.7649958,"114094"),114812:i.r(20,.76990116),114834:i.r(10,i.pl(5,-.1),1),114836:i.r(21,.9870641),114881:i.r(20,.9306445),115146:i.r(20,.84720093),115147:i.r(21,.85967565),115149:i.r(21,.90740114),115150:i.r(20,.91507095),115188:i.r(7,3,.1),115272:i.r(48,12,"Wine"),115273:i.r(15,"liveramp_OnAudience","1002862026",!1,"115273"),115274:i.r(11,i.itp("liveramp_OnAudience","1002861966",!1,"115274"),"liveramp_Epsilon","1000993479","115274"),115276:i.r(15,"liveramp_Experian","1004258339",!1,"115276"),115387:i.r(58,"nexstar_207","115387"),115388:i.r(58,"nexstar_206","115388"),115453:i.r(7,3,.25),115860:i.q(i.acq(i.cw(0,i.os(i.w,0,[7779,7778,16,7777]),i.ge(1)),i.cw(0,i.pg(5,.1),i.ge(1)))),115861:i.r(27,i.pg(5,.1),i.w,0,["/Sports/Team Sports/Australian Football","/Sports/Team Sports/American Football","/Sports/Team Sports/Cheerleading","/Sports/Team Sports/Volleyball","/Sports/Team Sports/Basketball","/Sports/Team Sports/Baseball","/Sports/Team Sports/Cricket","/Sports/Team Sports/Hockey","/Sports/Team Sports/Soccer",7798]),115862:i.r(11,i.itp("eyeota","35838",!1,"115862"),"liveramp_Alliant","1005750291","115862"),115863:i.r(11,i.itp("liveramp_Mastercard","1005907061",!1,"115863"),"liveramp_Epsilon","1000997999","115863"),115958:i.r(26,i.y(1,7692),i.pe(12,"Security")),116672:i.r(15,"liveramp_Acxiom","300334699",!1,"116672"),116673:i.r(15,"liveramp_Alliant","1004570809",!1,"116673"),116697:i.r(27,i.pe(14,"District of Columbia"),i.s,3,[7801,7803,"/people & society/social sciences/political science"]),116698:i.r(50,2,3,7786),117069:i.r(31,14),117070:i.r(30,16),117071:i.r(52,i.a([i.pge(5,.1),i.ref(11)]),i.a([i.pge(5,.1),i.ref(18)])),117072:i.r(37,i.y(3,7780),i.pge(5,.1),i.ps(6,26174)),117073:i.r(31,23),117074:i.r(31,2),117075:i.r(11,i.itp("liveramp_Experian","1007228741",!1,"117075"),"liveramp_Experian","1004258589","117075"),117076:i.q(i.cw(0,i.o([i.ref(22),i.os(i.w,0,[7784,"/Health/Health Conditions","/Health/Women\'s Health","/Health/Men\'s Health","/Health/Vision Care",7783,7782,7781,17]),i.pge(5,.1)]),i.ge(1))),117077:i.r(42,25),117370:i.r(54,i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_CACI","1004178749",!1,"117370"),i.itp("liveramp_Bombora","1005390079",!1,"117370")),i.itp("liveramp_DunandBradstreet","1001640156",!1,"117370")),i.itp("liveramp_Bombora","1005390109",!1,"117370")),i.itp("liveramp_Bombora","1000096194",!1,"117370")),i.itp("liveramp_Bombora","1005390119",!1,"117370")),i.itp("eyeota","34892",!1,"117370")),i.itp("eyeota","6531",!1,"117370")),"liveramp_MeritDirect","1002714166","117370","liveramp_ShareThis","1005652221",!1,"117370"),117415:i.r(53,"19937ba8-46cc-42a0-b15c-9fd952fb25a8","107986",.7784732),117538:i.r(42,1),117539:i.r(11,i.itp("eyeota","6721",!1,"117539"),"liveramp_OnAudience","1002860996","117539"),117703:i.r(54,i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_StatSocial","1006912741",!1,"117703"),i.itp("liveramp_ShareThis","1001010089",!1,"117703")),i.itp("liveramp_ShareThis","1003630249",!1,"117703")),i.itp("liveramp_Bombora","1000094314",!1,"117703")),i.itp("liveramp_Bombora","1005389579",!1,"117703")),i.itp("liveramp_Bombora","1000095254",!1,"117703")),"liveramp_MeritDirect","1000073034","117703","liveramp_DunandBradstreet","1000311626",!1,"117703"),117711:i.r(31,20),117712:i.r(53,"6880fca9-2668-4a67-9a88-e67473657fe4","117071",.6035923),117859:i.r(53,"51bc6025-29e6-42d6-afe1-c3cf4f0f64ba","117074",.6818849),117867:i.r(35,8,[39]),118623:i.r(11,i.itp("liveramp_ShareThis","1006582191",!1,"118623"),"liveramp_Epsilon","1000997339","118623"),118624:i.r(15,"liveramp_Kantar","1003693439",!1,"118624"),118625:i.r(11,i.itp("liveramp_IXIDigital","1000091314",!1,"118625"),"eyeota","6703","118625"),118626:i.r(11,i.itp("liveramp_Fluent","1005081849",!1,"118626"),"liveramp_Alliant","1000845826","118626"),118627:i.r(11,i.itp("liveramp_IXIDigital","1000091374",!1,"118627"),"eyeota","6705","118627"),118628:i.r(15,"eyeota","1467",!1,"118628"),118629:i.r(11,i.itp("eyeota","35715",!1,"118629"),"liveramp_OnAudience","1002862216","118629"),118630:i.r(11,i.itp("eyeota","1466",!1,"118630"),"liveramp_Acxiom","300071799","118630"),120525:i.r(53,"c88a2205-b0d7-4f9d-90e0-45bf031cbec9","94742",.008636117),120526:i.r(5,99066,99066),120531:i.r(5,99058,99058),120540:i.r(53,"8e26d244-54af-471f-bfec-b0d32199b0f4","113806",.64397943),120541:i.r(53,"3f5476aa-53b5-489d-8cf0-334ad04da74d","113808",.63172764),120542:i.r(53,"f907bf25-6773-4db1-9d2d-da003c4f8f1d","113813",.88930917),120543:i.r(53,"2efb8a2e-4644-47ab-9bb7-6f79b99cf65a","113827",.9490124),120544:i.r(53,"4a4581a5-d93d-4da2-bc79-fbfce8e08edd","113807",.9005892),120545:i.r(53,"dde8fa29-e807-48aa-a201-10397d8af3fc","113810",.8762799),120551:i.r(30,45),120554:i.r(53,"f14fa0fa-bd98-4690-8377-f63f7e39d46e","120551",.77196974),120555:i.r(53,"c67926b5-9bd0-494c-8b21-c34b0b32b411","117711",.9233263),121833:i.r(15,"liveramp_Epsilon","1005488589",!1,"121833"),122080:i.r(58,"nexstar_208","122080"),122081:i.r(58,"nexstar_209","122081"),122309:i.r(13,"1008714191","122309","1009642021","122309"),122329:i.r(58,"nexstar_210","122329"),122378:i.r(11,i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_Stirista","1003669159",!1,"122378"),i.itp("liveramp_Experian","1004267879",!1,"122378")),i.itp("liveramp_RoyMorgan","1002212566",!1,"122378")),i.itp("liveramp_Acxiom","1004909949",!1,"122378")),i.itp("liveramp_Acxiom","1004909859",!1,"122378")),i.itp("liveramp_Acxiom","1289070187",!1,"122378")),i.itp("liveramp_Acxiom","1004909999",!1,"122378")),i.itp("liveramp_Acxiom","13524728",!1,"122378")),i.itp("liveramp_Acxiom","1027279305",!1,"122378")),i.itp("liveramp_Acxiom","500267751",!1,"122378")),i.itp("liveramp_Acxiom","396311086",!1,"122378")),"eyeota","6688","122378"),123558:i.r(15,"eyeota","1466",!1,"123558"),123778:i.q(i.acq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_DunandBradstreet","1000311616",!1,"123778"),i.itp("liveramp_MeritDirect","1002709486",!1,"123778")),i.itp("liveramp_Bombora","1000884089",!1,"123778")),i.itp("liveramp_Bombora","1005387569",!1,"123778")),i.itp("liveramp_MeritDirect","1000073144",!1,"123778")),i.itp("eyeota","6634",!1,"123778")),i.itp("liveramp_Bombora","1005387579",!1,"123778")),i.itp("liveramp_MeritDirect","1002709646",!1,"123778")),i.itp("liveramp_DunandBradstreet","1000311636",!1,"123778")),i.itp("liveramp_ShareThis","1005132929",!1,"123778")),i.cw(0,i.ps(6,2),i.ge(1)))),123780:i.r(22,i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_DunandBradstreet","1000311616",!1,"123780"),i.itp("liveramp_MeritDirect","1002709486",!1,"123780")),i.itp("liveramp_Bombora","1000884089",!1,"123780")),i.itp("liveramp_Bombora","1005387569",!1,"123780")),i.itp("liveramp_MeritDirect","1000073144",!1,"123780")),i.itp("eyeota","6634",!1,"123780")),i.itp("liveramp_Bombora","1005387579",!1,"123780")),i.itp("liveramp_MeritDirect","1002709646",!1,"123780")),i.itp("liveramp_DunandBradstreet","1000311636",!1,"123780")),i.itp("liveramp_ShareThis","1005132929",!1,"123780")),i.itp("liveramp_Bombora","1000094314",!1,"123780")),i.itp("liveramp_Bombora","1000094434",!1,"123780")),i.itp("eyeota","35086",!1,"123780")),i.itp("liveramp_ShareThis","1001785106",!1,"123780")),i.itp("liveramp_Bombora","1000096154",!1,"123780")),i.itp("liveramp_IXIDigital","1003987399",!1,"123780")),i.itp("liveramp_PlaceIQ","1002436986",!1,"123780")),i.itp("liveramp_Bombora","1005389489",!1,"123780")),i.itp("liveramp_ShareThis","1005134819",!1,"123780")),"liveramp_Acxiom","121801014","123780",0,i.ps(6,2),i.ge(1)),126495:i.r(11,i.ocq(i.ocq(i.ocq(i.itp("liveramp_NCS","1000250956",!1,"126495"),i.itp("liveramp_NCS","1000251036",!1,"126495")),i.itp("liveramp_OnAudience","1002862836",!1,"126495")),i.itp("liveramp_NCS","1000251016",!1,"126495")),"liveramp_Acxiom","300409799","126495"),127375:i.q(i.acq(i.cw(0,i.ps(6,2),i.ge(1)),i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_killi","1006832841",!1,"127375"),i.itp("liveramp_Acxiom","300727599",!1,"127375")),i.itp("liveramp_Acxiom","1003644199",!1,"127375")),i.itp("liveramp_Acxiom","1004909949",!1,"127375")),i.itp("liveramp_Acxiom","1004909859",!1,"127375")),i.itp("liveramp_Acxiom","1289070187",!1,"127375")),i.itp("liveramp_Acxiom","1004909999",!1,"127375")),i.itp("liveramp_Acxiom","13524728",!1,"127375")),i.itp("liveramp_Acxiom","1027279305",!1,"127375")),i.itp("liveramp_Acxiom","500267751",!1,"127375")),i.itp("liveramp_Acxiom","396311086",!1,"127375")),i.itp("eyeota","6688",!1,"127375")),i.itp("liveramp_Kantar","1006585241",!1,"127375")),i.itp("liveramp_Fluent","1005087059",!1,"127375")),i.itp("liveramp_Fluent","1005087079",!1,"127375")),i.itp("liveramp_Fluent","1004085109",!1,"127375")),i.itp("liveramp_Fluent","1005087069",!1,"127375")),i.itp("liveramp_Yougov","1006995461",!1,"127375")),i.itp("liveramp_AnalyticsIQ","1000691456",!1,"127375")),i.itp("liveramp_Alliant","1000846236",!1,"127375")),i.itp("liveramp_Alliant","1000847576",!1,"127375")),i.itp("liveramp_Alliant","1000846226",!1,"127375")),i.itp("liveramp_Alliant","1000847586",!1,"127375")),i.itp("liveramp_PlaceIQ","1002437106",!1,"127375")),i.itp("liveramp_Experian","1001291409",!1,"127375")),i.itp("liveramp_Experian","1001291279",!1,"127375")),i.itp("eyeota","13018",!1,"127375")),i.itp("liveramp_ShareThis","1004107789",!1,"127375")),i.itp("eyeota","35561",!1,"127375")),i.itp("liveramp_Stirista","1003669179",!1,"127375")),i.itp("liveramp_Stirista","1003670539",!1,"127375")),i.itp("liveramp_Acxiom","300729399",!1,"127375")),i.itp("liveramp_Acxiom","300729499",!1,"127375")),i.itp("liveramp_Acxiom","300729599",!1,"127375")),i.itp("liveramp_Experian","1004265389",!1,"127375")),i.itp("liveramp_Experian","1004265399",!1,"127375")),i.itp("liveramp_Stirista","1001156819",!1,"127375")),i.itp("liveramp_Kantar","1004780319",!1,"127375")),i.itp("liveramp_Epsilon","1000462896",!1,"127375")),i.itp("liveramp_Alliant","1000848716",!1,"127375")),i.itp("liveramp_Fluent","1004085119",!1,"127375")),i.itp("liveramp_Yougov","1006995471",!1,"127375")),i.itp("liveramp_Yougov","1006281171",!1,"127375")),i.itp("liveramp_AudienceElements","1001851026",!1,"127375")),i.itp("liveramp_AnalyticsIQ","1000691196",!1,"127375")),i.itp("liveramp_AnalyticsIQ","1000691156",!1,"127375")),i.itp("liveramp_AnalyticsIQ","1000691166",!1,"127375")),i.itp("liveramp_AnalyticsIQ","1000691176",!1,"127375")),i.itp("liveramp_AnalyticsIQ","1000691186",!1,"127375")),i.itp("liveramp_Stirista","1004373879",!1,"127375")),i.itp("liveramp_killi","1006832941",!1,"127375")),i.itp("liveramp_OnAudience","1002863666",!1,"127375")),i.itp("liveramp_AnalyticsIQ","1002176656",!1,"127375")),i.itp("liveramp_Experian","1004265369",!1,"127375")),i.itp("liveramp_Stirista","1003670779",!1,"127375")),i.itp("liveramp_Alliant","1000845046",!1,"127375")),i.itp("liveramp_Kantar","1004735479",!1,"127375")),i.itp("liveramp_Yougov","1006309691",!1,"127375")),i.itp("liveramp_Alliant","1000845066",!1,"127375")),i.itp("liveramp_Fluent","1005080569",!1,"127375")),i.itp("eyeota","35482",!1,"127375")),i.itp("liveramp_killi","1006832911",!1,"127375")),i.itp("eyeota","13250",!1,"127375")),i.itp("liveramp_ShareThis","1006581951",!1,"127375")),i.itp("liveramp_33across","1002462836",!1,"127375")),i.itp("liveramp_ShareThis","1006582311",!1,"127375")))),127377:i.r(4,i.ps(6,2),i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_Epsilon","1000459166",!1,"127377"),i.itp("liveramp_IPSOS","1004367459",!1,"127377")),i.itp("liveramp_Acxiom","1003644449",!1,"127377")),i.itp("liveramp_Fluent","1005087199",!1,"127377")),i.itp("liveramp_Stirista","1000306236",!1,"127377")),i.itp("liveramp_Fluent","1004085129",!1,"127377")),i.itp("liveramp_Liveramp_France","1005978521",!1,"127377")),i.itp("liveramp_Acxiom","1003644209",!1,"127377")),i.itp("liveramp_Kantar","1004780379",!1,"127377")),i.itp("liveramp_Stirista","1000306856",!1,"127377")),i.itp("liveramp_CoreLogic","1003792439",!1,"127377")),i.itp("liveramp_Experian","1004267879",!1,"127377")),i.itp("liveramp_Acxiom","1003643729",!1,"127377")),i.itp("liveramp_CoreLogic","1003792419",!1,"127377")),i.itp("liveramp_killi","1006992061",!1,"127377")),i.itp("liveramp_Acxiom","1636",!1,"127377")),i.itp("liveramp_DLG","1003697259",!1,"127377")),i.fm(i.n0,i.itp("liveramp_Fluent","1004085099",!0,"127377"))),i.fm(i.n0,i.itp("eyeota","6688",!0,"127377"))),i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],127375)),i.cw(2,i.pe(7,127375)),i.e(0))),i.fm(i.n0,i.itp("liveramp_killi","1006832941",!0,"127377"))),i.fm(i.n0,i.itp("eyeota","35482",!0,"127377"))),i.fm(i.n0,i.itp("liveramp_killi","1006832911",!0,"127377"))),127586:i.r(58,"nexstar_211","127586"),127652:i.r(54,i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_Stirista","1000044974",!1,"127652"),i.itp("liveramp_Stirista","1000044944",!1,"127652")),i.itp("liveramp_Stirista","1000044964",!1,"127652")),i.itp("liveramp_Epsilon","1000458746",!1,"127652")),i.itp("liveramp_Epsilon","1000459096",!1,"127652")),i.itp("liveramp_Alliant","1000847566",!1,"127652")),i.itp("liveramp_Stirista","1000044934",!1,"127652")),i.itp("liveramp_PlaceIQ","1002437356",!1,"127652")),i.itp("eyeota","35501",!1,"127652")),i.itp("liveramp_Bombora","1005405089",!1,"127652")),"eyeota","35581","127652","eyeota","6684",!1,"127652"),127876:i.r(59,"nxd_blue_100","127876"),127877:i.r(59,"nxd_blue_101","127877"),127878:i.r(59,"nxd_blue_102","127878"),127879:i.r(59,"nxd_blue_103","127879"),127880:i.r(59,"nxd_blue_104","127880"),127881:i.r(59,"nxd_blue_105","127881"),127882:i.r(59,"nxd_blue_106","127882"),127883:i.r(59,"nxd_blue_107","127883"),127884:i.r(59,"nxd_blue_108","127884"),127885:i.r(59,"nxd_blue_109","127885"),127888:i.r(59,"nxd_blue_110","127888"),127889:i.r(59,"nxd_blue_111","127889"),127890:i.r(59,"nxd_blue_112","127890"),127891:i.r(59,"nxd_blue_113","127891"),128356:i.r(2,i.os(i.s,14,["california","florida","new york","texas","washington"]),"eyeota","1638","128356","liveramp_PlaceIQ","1002444096","128356","liveramp_Alliant","1000846246","128356"),128953:i.r(58,"nexstar_212","128953"),129469:i.r(11,i.ocq(i.itp("liveramp_IXIDigital","1000091584",!1,"129469"),i.itp("liveramp_Epsilon","1000993589",!1,"129469")),"liveramp_Epsilon","1003027656","129469"),131528:i.r(48,12,"Chairs"),131529:i.r(48,12,"Seating"),131684:i.r(11,i.itp("liveramp_ShareThis","1003624499",!1,"131684"),"liveramp_Acxiom","300431405","131684"),131686:i.r(2,i.t,"liveramp_StatSocial","1006913841","131686","liveramp_StatSocial","1006913091","131686","liveramp_StatSocial","1006913161","131686"),131688:i.r(15,"liveramp_Acxiom","300650699",!1,"131688"),131689:i.r(11,i.itp("liveramp_Acxiom","300651999",!1,"131689"),"liveramp_Acxiom","300056499","131689"),131690:i.r(11,i.itp("eyeota","35155",!1,"131690"),"liveramp_Stirista","1002959666","131690"),131844:i.r(11,i.itp("liveramp_Mastercard","1005908781",!1,"131844"),"liveramp_Mastercard","1005907721","131844"),132165:i.r(58,"nexstar_213","132165"),132166:i.r(58,"nexstar_214","132166"),133814:i.r(15,"liveramp_Acxiom","4140",!1,"133814"),133941:i.r(35,4,["https://www.newsbreakapp.com"]),133942:i.r(47,4,2),133943:i.r(47,4,7737),133944:i.r(35,4,["https://bing.com","https://www.bing.com"]),133945:i.r(9,2,2),133946:i.r(50,1,4,26165),133947:i.r(35,4,["http://www.smartnews.com","https://www.smartnews.com"]),133948:i.r(50,1,4,"https://news.google.com"),133949:i.r(35,4,["http://flipboard.com","https://flipboard.com"]),133950:i.r(50,1,4,"android-app://com.google.android.googlequicksearchbox"),133951:i.r(35,4,["http://drudgereport.com","http://www.drudgereport.com","https://drudgereport.com","https://www.drudgereport.com"]),133952:i.r(35,4,["https://i.reddit.com","https://out.reddit.com","https://reddit.com","https://www.reddit.com"]),133953:i.r(35,4,["https://l.facebook.com",26173]),133954:i.r(9,7737,7737),133956:i.r(35,4,[26163,26164,"https://m.facebook.com"]),133961:i.r(50,1,9,7699),133962:i.r(50,1,9,"Android"),133963:i.r(50,1,9,"Windows"),133964:i.r(50,1,9,"Macintosh"),133965:i.r(26,i.pe(17,"iCloud Private Relay"),i.ps(9,7699)),133966:i.r(32,["AT&T Wireless","Verizon Wireless","T-Mobile USA"]),133967:i.r(32,["Verizon Fios","CenturyLink","Frontier Communications","Cox Communications","AT&T U-verse","Comcast Cable","Spectrum"]),133968:i.r(58,"nexstar_215","133968"),134173:i.r(34,4,[null,""]),134607:i.r(11,i.itp("liveramp_Experian","1004256409",!1,"134607"),"liveramp_Experian","1005797731","134607"),134608:i.r(16,"134608"),134611:i.r(11,i.itp("liveramp_Acxiom","10784",!1,"134611"),"liveramp_Acxiom","10785","134611"),134613:i.r(11,i.itp("liveramp_Experian","1005797731",!1,"134613"),"liveramp_Experian","1004256409","134613"),135256:i.r(59,"nxd_blue_114","135256"),135738:i.r(59,"nxd_blue_115","135738"),135889:i.r(59,"nxd_blue_119","135889"),135890:i.r(59,"nxd_blue_120","135890"),135891:i.r(49,10),135892:i.r(49,1),136101:i.q(i.tw(i.cw(0,i.y(10,14),i.ge(3)),36e4)),136102:i.r(0,i.tw(i.cw(0,i.y(10,14),i.ge(3)),12e5),i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],136101)),i.cw(2,i.pe(7,136101)),i.e(0))),136103:i.r(58,"nexstar_216","136103"),136343:i.r(50,1,9,"fb"),136344:i.r(50,1,9,"instagram"),136345:i.r(3,i.vq(i.mxw(3,i.t,["properties","completion"],i.g(.5))),7,i.t,i.ge(5)),136348:i.r(3,i.vq(i.mxw(3,i.t,["properties","completion"],i.g(.8))),"VideoAdPlay",i.t,i.ge(5)),136353:i.r(50,1,9,"newsbreak"),136357:i.r(60,i.a([i.pl(15,300),i.ref(6)]),50,i.ref(6),i.l(300)),136447:i.r(51,i.os(i.s,["slot","ad_unit_path"],["/5678/mg.kron/","/5678/nx.kget/","/5678/nx.kgpe/","/5678/nx.kswb/","/5678/nx.ktla/","/5678/nx.ktxl/"]),1),136448:i.r(25,"LinkClick",i.t,5),136456:i.r(25,"SlotViewable",i.t,10),136458:i.r(25,"FormSubmission",i.t,1),136459:i.r(60,i.pg(15,60),5,i.t,i.g(60)),136461:i.r(0,i.scq(i.cw(1,i.pc(["aggregations","SegmentExit"],136101)),i.cw(4,i.pe(7,136101)),i.ge(1)),i.scq(i.cw(1,i.pc(["aggregations","SegmentEntry"],136102)),i.cw(2,i.pe(7,136102)),i.ge(1))),136462:i.q(i.acq(i.cw(0,i.t,i.e(1)),i.scq(i.cw(1,i.pl(15,5)),i.vq(i.sw(3,i.t,["properties","engaged_time"],i.l(5))),i.e(1)))),136463:i.r(48,14,"New York"),136464:i.r(48,14,"California"),136465:i.q(i.acq(i.cw(0,i.t,i.ge(5)),i.scq(i.cw(1,i.pl(15,30)),i.vq(i.sw(3,i.t,["properties","engaged_time"],i.l(30))),i.ge(5)))),136466:i.r(17,i.e(0)),136471:i.r(17,i.ge(5)),136580:i.r(11,i.ocq(i.itp("liveramp_DunandBradstreet","1000311436",!1,"136580"),i.itp("liveramp_MeritDirect","1002710186",!1,"136580")),"liveramp_DunandBradstreet","1000311446","136580"),136816:i.r(58,"nexstar_217","136816"),85200:i.q(i.cw(0,i.t,i.ge(1))),88161:i.r(54,i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("eyeota","34943",!1,"88161"),i.itp("liveramp_Alliant","1003267439",!1,"88161")),i.itp("liveramp_Alliant","1003267429",!1,"88161")),i.itp("liveramp_Alliant","1003267419",!1,"88161")),i.itp("liveramp_AnalyticsIQ","1003048689",!1,"88161")),i.itp("liveramp_AnalyticsIQ","1003048699",!1,"88161")),i.itp("liveramp_Epsilon","1000989679",!1,"88161")),i.itp("liveramp_Epsilon","1000989689",!1,"88161")),i.itp("liveramp_AnalyticsIQ","1003048899",!1,"88161")),i.itp("liveramp_AnalyticsIQ","1003048909",!1,"88161")),i.itp("liveramp_ShareThis","1001601536",!1,"88161")),i.cw(0,i.o([i.pc_(2,7695),i.os(i.s,6,[40,3,4,"https://thehill.com/news/campaign","https://thehill.com/news/senate","https://thehill.com/regulation"])]),i.ge(1))),i.itp("eyeota","35807",!1,"88161")),i.itp("eyeota","12989",!1,"88161")),"liveramp_ShareThis","1001010189","88161","liveramp_ShareThis","1003625699",!1,"88161"),88162:i.r(55,"88162","88162","88162","88162","88162","88162","88162",i.ocq(i.ocq(i.ocq(i.itp("eyeota","35084",!1,"88162"),i.itp("eyeota","262",!1,"88162")),i.itp("eyeota","35083",!1,"88162")),i.itp("eyeota","35082",!1,"88162")),"88162","88162"),88163:i.r(54,i.ocq(i.ocq(i.itp("liveramp_DunandBradstreet","1005070889",!1,"88163"),i.itp("liveramp_DunandBradstreet","1002782976",!1,"88163")),i.itp("liveramp_DunandBradstreet","1005070889",!1,"88163")),"liveramp_DunandBradstreet","1000870866","88163","liveramp_Experian","1007229061",!1,"88163"),88164:i.r(54,i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("eyeota","35290",!1,"88164"),i.itp("eyeota","6630",!1,"88164")),i.itp("eyeota","6532",!1,"88164")),i.itp("liveramp_ShareThis","1001010299",!1,"88164")),i.itp("liveramp_Bombora","1000095084",!1,"88164")),i.itp("liveramp_Bombora","1005387379",!1,"88164")),i.itp("liveramp_DunandBradstreet","1000311386",!1,"88164")),i.itp("liveramp_MeritDirect","1002709866",!1,"88164")),i.itp("eyeota","35049",!1,"88164")),i.itp("eyeota","34848",!1,"88164")),i.itp("liveramp_MeritDirect","1002725226",!1,"88164")),i.itp("liveramp_DunandBradstreet","1002786746",!1,"88164")),i.itp("eyeota","6607",!1,"88164")),i.itp("liveramp_Bombora","1005389089",!1,"88164")),"liveramp_MeritDirect","1000087624","88164","liveramp_StatSocial","1006913891",!1,"88164"),88165:i.r(24,"1000311636","88165","eyeota","34890","88165","liveramp_MeritDirect","1002709646","88165","eyeota","34889","88165","liveramp_Bombora","1005387579","88165","eyeota","34888","88165","eyeota","6634","88165","eyeota","34891","88165","liveramp_MeritDirect","1000073144","88165","34887","88165","liveramp_Bombora","1005387569","88165",i.ocq(i.ocq(i.ocq(i.itp("liveramp_ShareThis","1005652261",!1,"88165"),i.itp("eyeota","6536",!1,"88165")),i.itp("liveramp_IXIDigital","1004247679",!1,"88165")),i.itp("liveramp_DunandBradstreet","1002786446",!1,"88165")),"1000311006","88165","liveramp_Bombora","1000884089","88165","liveramp_Bombora","1005390139","88165","liveramp_MeritDirect","1002709486","88165",i.itp("eyeota","34878",!1,"88165"),"liveramp_DunandBradstreet","1000311616","88165","liveramp_ShareThis","1005134989","88165"),88167:i.r(24,"1002783156","88167","liveramp_Bombora","1004559069","88167","liveramp_DunandBradstreet","1000311626","88167","liveramp_DunandBradstreet","1002786426","88167","liveramp_ShareThis","1001010089","88167","liveramp_ShareThis","1005652261","88167","liveramp_Bombora","1005389579","88167","liveramp_DunandBradstreet","1000311006","88167","liveramp_Bombora","1000094314","88167","6536","88167","liveramp_Acxiom","1005523719","88167",i.itp("liveramp_Experian","1003187909",!1,"88167"),"1000724676","88167","liveramp_DunandBradstreet","1000724666","88167","eyeota","34814","88167","liveramp_IXIDigital","1003986849","88167",i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("eyeota","34874",!1,"88167"),i.itp("liveramp_StatSocial","1006912741",!1,"88167")),i.itp("liveramp_ShareThis","1003630249",!1,"88167")),i.itp("liveramp_MeritDirect","1000073034",!1,"88167")),i.itp("liveramp_Bombora","1000095254",!1,"88167")),i.itp("liveramp_MeritDirect","1002709746",!1,"88167")),i.itp("liveramp_MeritDirect","1002716216",!1,"88167")),i.itp("liveramp_Compass","1000039914",!1,"88167")),i.itp("liveramp_PlaceIQ","1002437616",!1,"88167")),"eyeota","35082","88167","liveramp_PlaceIQ","1002437566","88167"),88168:i.q(i.ocq(i.itp("eyeota","35776",!1,"88168"),i.itp("liveramp_ShareThis","1005132979",!1,"88168"))),88822:i.q(i.acq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_Stirista","1000044974",!1,"88822"),i.itp("liveramp_Stirista","1000044944",!1,"88822")),i.itp("liveramp_Stirista","1000044964",!1,"88822")),i.itp("liveramp_Epsilon","1000458746",!1,"88822")),i.itp("liveramp_Epsilon","1000459096",!1,"88822")),i.itp("liveramp_Alliant","1000847566",!1,"88822")),i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_CACI","1004178749",!1,"88822"),i.itp("liveramp_Bombora","1005390079",!1,"88822")),i.itp("liveramp_DunandBradstreet","1001640156",!1,"88822")),i.itp("liveramp_Bombora","1005390109",!1,"88822")),i.itp("liveramp_Bombora","1000096194",!1,"88822")),i.itp("liveramp_Bombora","1005390119",!1,"88822")))),88823:i.r(55,"88823","88823","88823","88823","88823","88823","88823",i.itp("eyeota","35084",!1,"88823"),"88823","88823"),89055:i.r(54,i.ocq(i.itp("eyeota","35769",!1,"89055"),i.itp("liveramp_Experian","1004269659",!1,"89055")),"liveramp_Epsilon","1000459396","89055","liveramp_ShareThis","1005132999",!1,"89055"),89056:i.r(54,i.ocq(i.ocq(i.ocq(i.itp("liveramp_Stirista","1000044974",!1,"89056"),i.itp("liveramp_Stirista","1000044944",!1,"89056")),i.itp("liveramp_Stirista","1000044964",!1,"89056")),i.itp("liveramp_Epsilon","1000458746",!1,"89056")),"liveramp_Epsilon","1000459096","89056","liveramp_Alliant","1000847566",!1,"89056"),89073:i.q(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_Epsilon","1000993549",!1,"89073"),i.itp("eyeota","1407",!1,"89073")),i.itp("liveramp_AnalyticsIQ","1000693826",!1,"89073")),i.itp("liveramp_ShareThis","1005134249",!1,"89073")),i.itp("liveramp_ShareThis","1005134689",!1,"89073")),i.cw(0,i.os(i.cx,2,[29,26012]),i.ge(1)))),89076:i.r(11,i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_Epsilon","1000993399",!1,"89076"),i.itp("liveramp_PlaceIQ","1002438756",!1,"89076")),i.itp("liveramp_Epsilon","1001000979",!1,"89076")),i.itp("liveramp_Experian","1005797911",!1,"89076")),i.itp("liveramp_Epsilon","1005045449",!1,"89076")),"liveramp_Epsilon","1005045439","89076"),89078:i.r(11,i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_Alliant","1001433159",!1,"89078"),i.itp("liveramp_Mastercard","1005911671",!1,"89078")),i.itp("eyeota","6718",!1,"89078")),i.itp("liveramp_Kantar","1004780039",!1,"89078")),i.itp("liveramp_AnalyticsIQ","1003048819",!1,"89078")),"liveramp_Epsilon","1000988049","89078"),89080:i.r(11,i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_Experian","1004581059",!1,"89080"),i.itp("liveramp_Mastercard","1005908291",!1,"89080")),i.itp("liveramp_Acxiom","300157999",!1,"89080")),i.itp("liveramp_ShareThis","1001010029",!1,"89080")),i.itp("liveramp_Experian","1004264819",!1,"89080")),i.itp("liveramp_Experian","1004581059",!1,"89080")),"liveramp_Experian","1004580859","89080"),89084:i.r(11,i.ocq(i.ocq(i.ocq(i.itp("liveramp_ShareThis","1005133459",!1,"89084"),i.itp("liveramp_killi","1007022731",!1,"89084")),i.itp("liveramp_Experian","1007228811",!1,"89084")),i.itp("liveramp_OnAudience","1002862306",!1,"89084")),"eyeota","1539","89084"),89089:i.r(11,i.ocq(i.ocq(i.ocq(i.itp("liveramp_ShareThis","1005134259",!1,"89089"),i.itp("eyeota","34744",!1,"89089")),i.itp("liveramp_Epsilon","1000990329",!1,"89089")),i.itp("liveramp_ShareThis","1001601036",!1,"89089")),"liveramp_ShareThis","1001601026","89089"),90805:i.r(11,i.ocq(i.itp("comscore","318246US",!1,"90805"),i.itp("liveramp_PlaceIQ","1002437036",!1,"90805")),"eyeota","225","90805"),90806:i.r(11,i.ocq(i.itp("liveramp_AnalyticsIQ","1005534079",!1,"90806"),i.itp("liveramp_PlaceIQ","1002437046",!1,"90806")),"eyeota","35442","90806"),90807:i.r(11,i.itp("liveramp_PlaceIQ","1002437056",!1,"90807"),"eyeota","35431","90807"),90808:i.r(11,i.ocq(i.ocq(i.itp("eyeota","232",!1,"90808"),i.itp("liveramp_Epsilon","1003071416",!1,"90808")),i.itp("eyeota","297",!1,"90808")),"liveramp_PlaceIQ","1002437066","90808"),90810:i.r(11,i.ocq(i.ocq(i.ocq(i.itp("liveramp_Epsilon","1003071406",!1,"90810"),i.itp("liveramp_ShareThis","1003556099",!1,"90810")),i.itp("eyeota","298",!1,"90810")),i.itp("eyeota","35447",!1,"90810")),"liveramp_PlaceIQ","1002437076","90810"),90811:i.r(16,"90811"),90814:i.r(11,i.ocq(i.ocq(i.itp("liveramp_ShareThis","1005132989",!1,"90814"),i.itp("liveramp_Experian","1004269669",!1,"90814")),i.itp("liveramp_Epsilon","1000986049",!1,"90814")),"liveramp_Fluent","1004085409","90814"),90815:i.r(11,i.ocq(i.ocq(i.ocq(i.itp("eyeota","35503",!1,"90815"),i.itp("liveramp_Alliant","1000847556",!1,"90815")),i.itp("eyeota","35501",!1,"90815")),i.itp("eyeota","35502",!1,"90815")),"eyeota","35504","90815"),92795:i.r(12,"92795",i.ocq(i.ocq(i.itp("liveramp_StatSocial","1006913931",!1,"92795"),i.itp("liveramp_Stirista","1003717159",!1,"92795")),i.itp("eyeota","35788",!1,"92795")),"liveramp_ShareThis","1001014909","92795"),93873:i.q(i.cw(0,i.o([i.y(1,13),i.ref(13),i.os(i.s,3,["/pets"]),i.ps(0,18),i.ps(13,18)]),i.ge(1))),93874:i.r(11,i.itp("liveramp_Epsilon","1000462956",!1,"93874"),"eyeota","322","93874"),93876:i.q(i.acq(i.cw(0,i.o([i.ref(13),i.ps(3,18),i.ps(0,18),i.ps(13,18)]),i.ge(1)),i.ocq(i.itp("liveramp_Epsilon","1000462956",!1,"93876"),i.itp("eyeota","322",!1,"93876")))),94257:i.r(36,1,29),94259:i.r(56,"94259","94259",i.t,"94259","94259","94259","94259","94259","94259","94259","94259","94259","94259","94259"),94260:i.r(56,"94260","94260",i.ref(29),"94260","94260","94260","94260","94260","94260","94260","94260","94260","94260","94260"),94344:i.r(38,i.y(1,29),i.os(i.s,3,["/autos & vehicles"]),["Car Care",29,26012]),94345:i.r(23,"1005134689","94345",i.ocq(i.ocq(i.itp("liveramp_Epsilon","1000993549",!1,"94345"),i.itp("eyeota","1407",!1,"94345")),i.itp("liveramp_AnalyticsIQ","1000693826",!1,"94345")),"liveramp_ShareThis","1005134249","94345"),94346:i.r(61,0),94347:i.r(35,4,[26163,"https://facebook.com","https://fox5sandiego.com/tag/featured-on-instagram","https://fox8.com/news/instagram","https://instagram.com","https://kdvr.com/fox31-instagram-links","https://ktla.com/tag/featured-on-instagram",26164,"https://pix11.com/instagram",26165,"https://touch.facebook.com",26173,"https://www.instagram.com","https://www.krqe.com/instagram","https://www.kxan.com/instagram"]),94373:i.r(18,"58b0dc01-8cd6-4ef8-8c6c-b21f8cf45f44",.76795065,"94257"),94434:i.r(46,4,7704,7704,7704,7734),94494:i.q(i.cw(0,i.o([i.y(1,0),i.os(i.cx,2,[26092,26154,26140,26147,26149,26153,26152,26150,26151,26143,0]),i.ps(3,1),i.ps(0,1),i.ps(13,1)]),i.ge(1))),94500:i.r(54,i.ocq(i.cw(0,i.ref(4),i.ge(1)),i.itp("eyeota","1639",!1,"94500")),"liveramp_Epsilon","1000464146","94500","liveramp_ShareThis","1001290459",!1,"94500"),94501:i.r(23,"1001290459","94501",i.itp("eyeota","1639",!1,"94501"),"liveramp_Epsilon","1000464146","94501"),94506:i.r(33,["Internet & Streaming","Cell Phones & Accessories"]),94507:i.r(11,i.ocq(i.ocq(i.ocq(i.itp("liveramp_ShareThis","1005133459",!1,"94507"),i.itp("liveramp_Alliant","1002764476",!1,"94507")),i.itp("liveramp_Experian","1007228811",!1,"94507")),i.itp("eyeota","1539",!1,"94507")),"liveramp_Acxiom","4115","94507"),94509:i.r(54,i.ocq(i.cw(0,i.os(i.cx,2,[26154,26092,26140,26147,26149,26153,26152,26150,26151,26143,0]),i.ge(1)),i.itp("liveramp_Experian","1007228811",!1,"94509")),"eyeota","1539","94509","liveramp_Acxiom","4115",!1,"94509"),94511:i.r(11,i.ocq(i.ocq(i.itp("liveramp_ShareThis","1006582191",!1,"94511"),i.itp("liveramp_Acxiom","115208816",!1,"94511")),i.itp("liveramp_Mastercard","1005911411",!1,"94511")),"liveramp_Epsilon","1000993729","94511"),94611:i.r(18,"38ee79a0-7947-4acf-af28-9437b4b54b58",.592176,"94434"),94612:i.r(36,1,0),94614:i.r(54,i.ocq(i.cw(0,i.ref(0),i.ge(1)),i.itp("liveramp_Epsilon","1000993329",!1,"94614")),"liveramp_Stirista","1002959666","94614","eyeota","1612",!1,"94614"),94615:i.r(22,i.ocq(i.itp("liveramp_Epsilon","1000993329",!1,"94615"),i.itp("liveramp_Stirista","1002959666",!1,"94615")),"eyeota","1612","94615",0,i.t,i.ge(1)),94616:i.r(18,"bc043d70-d31f-47f0-a47e-ee4bcebd5765",.6144614,"94494"),94619:i.r(36,1,27),94620:i.r(54,i.cw(0,i.ref(27),i.ge(1)),"eyeota","13139","94620","liveramp_Epsilon","1000998179",!1,"94620"),94621:i.r(22,i.itp("eyeota","13139",!1,"94621"),"liveramp_Epsilon","1000998179","94621",0,i.t,i.ge(1)),94627:i.r(38,i.os(i.w,1,[7698,31]),i.ps(3,7765),["Style smart with Anya Sarre","Style and Beauty","Clothing & Accessories","Clothing & Shoes","Jewelry",31,"Fashion And Beauty","Fashion & Beauty","Fashion"]),94636:i.r(11,i.ocq(i.itp("eyeota","1522",!1,"94636"),i.itp("liveramp_ShareThis","1005133719",!1,"94636")),"liveramp_OnAudience","1002861276","94636"),94638:i.q(i.cw(0,i.o([i.ref(16),i.ps(3,48),i.ps(0,48),i.ps(13,48)]),i.ge(1))),94668:i.r(33,[26034,26021,26156,26089,26088,26090,"Real Estate Essentials",26120,26119,26121,26118]),94670:i.r(18,"eae9b614-d369-4171-a8fc-b43f404e9892",.6045688,"94627"),94721:i.r(18,"7b75b6b2-fd00-4ea6-82aa-6ebe38a98158",.6684881,"94619"),94722:i.r(18,"886d65f9-e2d2-43fa-a2d0-38605deb28b2",.6728491,"94612"),94724:i.r(40,24,17,17,17,[30,32]),94725:i.r(54,i.cw(0,i.ref(24),i.ge(1)),"liveramp_ShareThis","1006582141","94725","liveramp_Ibotta","1004255429",!1,"94725"),94726:i.r(22,i.itp("liveramp_ShareThis","1006582141",!1,"94726"),"liveramp_Ibotta","1004255429","94726",0,i.t,i.ge(1)),94727:i.r(40,15,7705,7705,7705,[7730,7736,7735,7692]),94728:i.r(54,i.cw(0,i.ref(15),i.ge(1)),"liveramp_Epsilon","1000464306","94728","liveramp_AnalyticsIQ","1000692666",!1,"94728"),94729:i.r(22,i.itp("liveramp_Epsilon","1000464306",!1,"94729"),"liveramp_AnalyticsIQ","1000692666","94729",0,i.t,i.ge(1)),94730:i.r(11,i.ocq(i.itp("eyeota","1474",!1,"94730"),i.itp("liveramp_ShareThis","1005134209",!1,"94730")),"liveramp_Mastercard","1005908341","94730"),94732:i.r(54,i.ocq(i.cw(0,i.os(i.cx,2,[26121,26034,26021,26156,26089,26088,26090,26120,26119,26118]),i.ge(1)),i.itp("eyeota","1474",!1,"94732")),"liveramp_ShareThis","1005134209","94732","liveramp_Mastercard","1005908341",!1,"94732"),94733:i.r(54,i.ocq(i.cw(0,i.ref(16),i.ge(1)),i.itp("eyeota","35845",!1,"94733")),"liveramp_Mastercard","1005911681","94733","liveramp_ShareThis","1005134059",!1,"94733"),94734:i.r(11,i.ocq(i.itp("liveramp_ShareThis","1005134059",!1,"94734"),i.itp("liveramp_Mastercard","1005911681",!1,"94734")),"eyeota","35845","94734"),94735:i.r(46,26,15,15,15,7697),94736:i.r(11,i.ocq(i.itp("eyeota","35700",!1,"94736"),i.itp("liveramp_Acxiom","4118",!1,"94736")),"liveramp_Alliant","1000846796","94736"),94740:i.r(54,i.ocq(i.cw(0,i.ref(26),i.ge(1)),i.itp("eyeota","35700",!1,"94740")),"liveramp_Acxiom","4118","94740","liveramp_Alliant","1000846796",!1,"94740"),94742:i.r(44,3,16,21),94743:i.r(54,i.cw(0,i.ref(21),i.ge(1)),"liveramp_Experian","1005797911","94743","liveramp_Mastercard","1005907361",!1,"94743"),94744:i.r(22,i.itp("liveramp_Experian","1005797911",!1,"94744"),"liveramp_Mastercard","1005907361","94744",0,i.t,i.ge(1)),94802:i.r(18,"e8ed907e-b5e8-4dbe-9b32-cddd2b138870",.56357133,"94724"),94803:i.r(53,"1f6f5ece-731e-4dc3-a7e6-dab1d7112a9d","94727",.62742496),94804:i.r(18,"538856f1-f219-441a-8067-fa5f8b852cb8",.59458196,"94735"),94812:i.r(51,i.t,5),94961:i.r(53,"04854682-2f8f-4ad5-8223-c951d0962dca","94638",.5903133),95194:i.r(8,"liveramp_ShareThis","1003625699","95194",i.ref(9),"liveramp_ShareThis","1001010189","95194",6,[7729,40,26167,3,4,26168,26169,"thehill.com/blogs/blog-briefing-room","thehill.com/blogs/congress-blog"],i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_Alliant","1003267439",!1,"95194"),i.itp("liveramp_Alliant","1003267419",!1,"95194")),i.itp("liveramp_Alliant","1003267429",!1,"95194")),i.itp("eyeota","12989",!1,"95194")),i.itp("liveramp_Acxiom","300433199",!1,"95194")),i.itp("liveramp_Acxiom","300065599",!1,"95194")),i.itp("liveramp_Acxiom","300172099",!1,"95194")),i.itp("liveramp_Acxiom","300172399",!1,"95194")),i.itp("liveramp_Acxiom","300546199",!1,"95194")),i.itp("liveramp_DunandBradstreet","1000310426",!1,"95194")),"liveramp_DunandBradstreet","1002784956","95194","liveramp_DunandBradstreet","1000870816","95194"),95578:i.r(39,i.ps(0,"/Law & Government/Government"),i.cx,2,["Judiciary","Legal Authority","Legal Face-Off","Legal Matters","Legal Minute","Legal Smart","Legal Edge","Legal Lens","Legal","Ask an Attorney"]),97804:i.r(11,i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("eyeota","34876",!1,"97804"),i.itp("eyeota","34869",!1,"97804")),i.itp("eyeota","35076",!1,"97804")),i.itp("eyeota","34872",!1,"97804")),i.itp("liveramp_Bombora","1000095244",!1,"97804")),i.itp("liveramp_DunandBradstreet","1000870876",!1,"97804")),i.itp("liveramp_Bombora","1004559069",!1,"97804")),"liveramp_DunandBradstreet","1000870866","97804"),97805:i.r(11,i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.ocq(i.itp("liveramp_DunandBradstreet","1000310426",!1,"97805"),i.itp("liveramp_DunandBradstreet","1000870816",!1,"97805")),i.itp("liveramp_DunandBradstreet","1002784956",!1,"97805")),i.itp("liveramp_MeritDirect","1000073874",!1,"97805")),i.itp("liveramp_DunandBradstreet","1000311896",!1,"97805")),i.itp("eyeota","34927",!1,"97805")),i.itp("liveramp_ShareThis","1001010039",!1,"97805")),i.itp("liveramp_ShareThis","1003625839",!1,"97805")),i.itp("liveramp_MeritDirect","1000073874",!1,"97805")),"liveramp_Bombora","1000095634","97805"),98061:i.r(27,i.nt(i.os(i.cx,2,[7733,"Administration","Policy","National News","Community",7732,"National","Sports"])),i.cx,2,["Weather",35,37,"Local 5 Live","Local Crime",34,42,41,33,38,36]),98425:i.r(48,0,"/Law & Government/Public Safety"),98503:i.r(47,0,7785),98504:i.r(34,0,["health",7785]),98505:i.r(34,0,[7798,7797]),98506:i.r(35,0,["/law & government/government","/law & government/public safety/crime & justice"]),98729:i.r(14,"1008714351","98729"),98732:i.r(14,"1009641751","98732"),98737:i.r(14,"1009641761","98737"),98813:i.q(i.isp("liveramp_AIC_nexstar_media_group","712061209",!1,"98813")),98820:i.r(18,"606342c0-d9fc-4f9d-9a0b-9aaa9eaf774e",.61180294,"98729"),98955:i.r(48,0,"/News/Weather"),98956:i.r(48,0,"/People & Society/Religion & Belief"),98957:i.r(34,0,["/Hobbies & Leisure/Special Occasions/Holidays & Seasonal Events","/Hobbies & Leisure/Special Occasions/Weddings","/Hobbies & Leisure/Special Occasions"]),98958:i.r(34,0,[7,6]),98959:i.r(34,0,["/Health/Medical Facilities & Services/Hospitals & Treatment Centers","/Health/Medical Facilities & Services/Medical Procedures","/Health/Medical Facilities & Services/Physical Therapy","/Health/Medical Facilities & Services/Doctors\' Offices","/Health/Medical Facilities & Services"]),98960:i.r(34,0,["/People & Society/Social Issues & Advocacy/Discrimination & Identity Relations","/People & Society/Social Issues & Advocacy/Green Living & Environmental Issues","/People & Society/Social Issues & Advocacy/Human Rights & Liberties","/People & Society/Social Issues & Advocacy/Charity & Philanthropy","/People & Society/Social Issues & Advocacy/Work & Labor Issues","/People & Society/Social Issues & Advocacy/Poverty & Hunger",7786]),98961:i.r(48,0,"/Law & Government/Social Services"),98962:i.r(34,0,[7797,"/News/Sports News"]),98963:i.r(34,0,[7779,16,7778,7777]),98964:i.r(48,0,"/Sports/College Sports"),98965:i.r(34,0,[11,12,10]),98966:i.r(34,0,["/Arts & Entertainment/TV & Video/TV Shows & Programs","/Arts & Entertainment/TV & Video/TV Commercials",7745,7744]),98967:i.r(41,22,[7784,"/Health/Pharmacy"]),98968:i.r(48,0,"/Health/Aging & Geriatrics"),98969:i.r(48,0,"/Arts & Entertainment/Celebrities & Entertainment News"),98970:i.r(47,0,7701),98971:i.r(48,0,"/Science/Astronomy"),98972:i.r(45,i.y(0,7742),1,7731),98973:i.r(48,0,"/Business & Industrial/Transportation & Logistics"),98974:i.r(34,0,["/News/Business News/Company News","/News/Business News"]),99029:i.r(43,1,26013,["/People & Society/Family & Relationships/Troubled Relationships","/People & Society/Family & Relationships/Marriage","/People & Society/Family & Relationships/Family","/People & Society/Family & Relationships"]),99040:i.r(47,0,7741),99041:i.r(34,0,["/Business & Industrial/Energy & Utilities/Renewable & Alternative Energy","/Business & Industrial/Energy & Utilities/Electricity","/Business & Industrial/Energy & Utilities/Oil & Gas","/Business & Industrial/Energy & Utilities"]),99042:i.r(48,0,"/Business & Industrial/Business Operations"),99043:i.r(36,1,30),99044:i.r(34,0,["/Arts & Entertainment/Events & Listings/Movie Listings & Theater Showtimes","/Arts & Entertainment/Events & Listings/Bars, Clubs & Nightlife","/Arts & Entertainment/Events & Listings/Concerts & Music Festivals","/Arts & Entertainment/Events & Listings/Expos & Conventions","/Arts & Entertainment/Events & Listings/Film Festivals",7740]),99045:i.r(48,0,"/Food & Drink/Food & Grocery Retailers"),99046:i.r(34,0,["/Business & Industrial/Hospitality Industry/Event Planning","/Business & Industrial/Hospitality Industry/Food Service","/Business & Industrial/Hospitality Industry"]),99047:i.r(34,0,["/Reference/Humanities/History","/Reference/Humanities"]),99048:i.r(48,0,"/Law & Government/Military"),99049:i.r(34,0,[45,7703,7702]),99050:i.r(34,0,[7714,7710,7711,7712,7716,7713,7707,7708,7718,7709,7717,7706,7715,47]),99051:i.r(48,0,"/Business & Industrial/Pharmaceuticals & Biotech"),99052:i.r(34,0,[9,8]),99053:i.r(34,0,["/Finance/Grants, Scholarships & Financial Aid/Study Grants & Scholarships","/Finance/Grants, Scholarships & Financial Aid"]),99054:i.r(34,0,["/Arts & Entertainment/Online Media/Online Image Galleries",7743]),99055:i.r(34,0,["/Food & Drink/Beverages/Alcoholic Beverages","/Food & Drink/Beverages/Coffee & Tea","/Food & Drink/Beverages/Soft Drinks","/Food & Drink/Beverages/Juice","/Food & Drink/Beverages"]),99057:i.r(34,0,["/Reference/Geographic Reference/Maps","/Reference/Geographic Reference"]),99058:i.r(36,1,20),99062:i.r(41,5,["/Shopping/Apparel/Clothing Accessories","/Shopping/Apparel/Athletic Apparel","/Shopping/Apparel/Women\'s Clothing","/Shopping/Apparel/Casual Apparel","/Shopping/Apparel/Men\'s Clothing","/Shopping/Apparel/Undergarments",7796,7793,7795,7794,7792]),99063:i.r(36,1,2),99064:i.r(48,0,"/Pets & Animals/Wildlife"),99065:i.r(43,1,26017,["/Hobbies & Leisure/Outdoors/Hiking & Camping","/Hobbies & Leisure/Outdoors/Fishing","/Hobbies & Leisure/Outdoors"]),99066:i.r(44,1,29,14),99067:i.r(36,1,23),99068:i.r(34,0,["/Arts & Entertainment/Music & Audio/Jazz & Blues","/Arts & Entertainment/Music & Audio/Country Music","/Arts & Entertainment/Offbeat/Occult & Paranormal","/Arts & Entertainment/Music & Audio/Rock Music","/Arts & Entertainment/Humor/Political Humor","/Arts & Entertainment/Performing Arts/Magic","/Arts & Entertainment/Performing Arts/Opera","/Arts & Entertainment/Performing Arts/Dance","/Arts & Entertainment/Music & Audio/Pop Music","/Arts & Entertainment/Entertainment Industry","/Arts & Entertainment/Performing Arts/Circus",7745,"/Arts & Entertainment/Music & Audio/Radio","/Arts & Entertainment/Comics & Animation","/Arts & Entertainment/Visual Art & Design",7740,"/Arts & Entertainment/Performing Arts","/Arts & Entertainment/Fun & Trivia",7743,7742,7744,"/Arts & Entertainment/Offbeat",7741,"/Arts & Entertainment/Humor","/Arts & Entertainment"]),99069:i.r(41,5,["/Beauty & Fitness/Fashion & Style/Fashion Designers & Collections",7765]),99070:i.r(34,0,["/Food & Drink/Food","/Food & Drink/Food/Snack Foods",16]),99071:i.r(44,1,7734,30),99072:i.r(41,22,[7783,7782,7781,17]),99073:i.r(39,i.os(i.w,0,["/Home & Garden/Home Improvement/House Painting & Finishing","/Home & Garden/Home Improvement/Construction & Power Tools","/Home & Garden/Home Improvement/Doors & Windows","/Home & Garden/Home Improvement/Flooring","/Home & Garden/Home Improvement/Plumbing","/Home & Garden/Home Improvement"]),i.w,1,[26148,7736,7735,7730,7692]),99074:i.r(36,1,25),99075:i.r(36,1,1),99076:i.r(34,0,["/Law & Government/Legal","/Law & Government/Government/Courts & Judiciary",7720]),99077:i.r(36,1,20),99078:i.r(43,8,39,["/Shopping/Entertainment Media",7796,"/Shopping/Consumer Resources","/Shopping/Toys/Building Toys","/Shopping/Toys/Stuffed Toys",7793,7795,7794,"/Shopping/Tobacco Products","/Shopping/Luxury Goods","/Shopping/Auctions",7792,"/Shopping/Toys",48]),99079:i.r(34,0,["/Internet & Telecom/Mobile & Wireless/Mobile & Wireless Accessories","/Internet & Telecom/Service Providers/Cable & Satellite Providers","/Internet & Telecom/Communications Equipment/Radio Equipment","/Internet & Telecom/Mobile & Wireless/Mobile Apps & Add-Ons","/Internet & Telecom/Mobile & Wireless/Mobile Phones","/Internet & Telecom/Email & Messaging","/Internet & Telecom/Mobile & Wireless","/Internet & Telecom/Service Providers","/Internet & Telecom/Web Services","/Internet & Telecom"]),99080:i.r(36,1,10),99169:i.r(18,"844eb5ff-a508-4a7b-8e8a-b376b720b374",.7835781,"98737"),99450:i.r(11,i.ocq(i.ocq(i.ocq(i.itp("liveramp_Epsilon","1000459266",!1,"99450"),i.itp("liveramp_Alliant","1004570789",!1,"99450")),i.itp("liveramp_ShareThis","1005651821",!1,"99450")),i.itp("eyeota","262",!1,"99450")),"liveramp_Epsilon","1000459276","99450"),99452:i.r(11,i.ocq(i.itp("liveramp_ShareThis","1001600536",!1,"99452"),i.itp("eyeota","262",!1,"99452")),"liveramp_Bombora","1005387689","99452"),99839:i.r(14,"1008714671","99839"),99840:i.r(13,"1008714481","99840","1008714681","99840"),99841:i.r(14,"1008714561","99841"),99842:i.r(14,"1008714191","99842"),99843:i.r(14,"1008714361","99843"),99844:i.r(14,"1008714201","99844"),99845:i.r(14,"1008714281","99845"),99846:i.r(14,"1008714211","99846"),99847:i.r(14,"1008714381","99847"),99848:i.r(14,"1009641781","99848"),99849:i.r(14,"1008714391","99849"),99850:i.r(14,"1008714581","99850"),99851:i.r(14,"1008714521","99851"),99852:i.r(14,"1008714531","99852"),99853:i.r(14,"1009641771","99853"),99929:i.r(18,"d493d8a2-04f8-4a5c-90b9-aae7520c9c33",.5522189,"99850"),99930:i.r(18,"40adba4a-e2bd-4b71-8cef-db1e34dca4ed",.55202645,"99851"),99931:i.r(18,"d447149c-f0c7-4316-a7f2-55e3562cb087",.591595,"99852"),99932:i.r(18,"1ed3ed62-befe-4bac-b3a2-fa3f30a3e1a9",.5552315,"99853"),99933:i.r(18,"250ddad3-c9bb-4b08-b918-6170154e56c8",.535819,"99849"),99934:i.r(18,"85d4a2bb-7945-48e5-8828-ae7ec9f941c4",.58882314,"99846"),99935:i.r(18,"567a7cbd-db50-4654-a107-0d3b0258e680",.59932375,"99847"),99936:i.r(18,"3b57f962-2f56-44cd-be6e-51e5e842cbba",.5901852,"99848"),99937:i.r(18,"bd8ab836-cdf0-4bdb-9d6a-ad29e5450c4f",.5804762,"99842"),99940:i.r(19,.6012702),99941:i.r(18,"831b599d-19d6-4936-962c-666854e0eb58",.60378575,"99844"),99942:i.r(18,"61b3ae3b-c5f2-49d1-abf6-d170e9783ab5",.6129542,"99839"),99943:i.r(18,"0d426889-ddbd-44c1-9642-d088db63aed5",.5698531,"99840"),99944:i.r(18,"8bb243a6-efcf-479b-8271-f51e8f5b4b71",.5841024,"99841"),99946:i.r(18,"5bbf55e8-e403-41b0-9b9a-11bbaeb38558",.5182066,"99845"),99968:i.q(i.acq(i.cw(0,i.t,i.ge(1)),i.ocq(i.ocq(i.ocq(i.isp("liveramp_L2_Data_nexstar_media_group","1008714331",!1,"99968"),i.isp("liveramp_L2_Data_nexstar_media_group","1008714271",!1,"99968")),i.isp("liveramp_L2_Data_nexstar_media_group","1008714251",!1,"99968")),i.isp("liveramp_L2_Data_nexstar_media_group","1008714301",!1,"99968")))),99980:i.r(11,i.itp("liveramp_Epsilon","1002889896",!1,"99980"),"liveramp_ShareThis","1001785066","99980")}||{},queriesByEvent:{"!UpdateLookalikeModels":["100154","103625","105096","106574","114810","114811","114812","114836","114881","115146","115147","115149","115150","117415","117712","117859","120525","120540","120541","120542","120543","120544","120545","120554","120555","94373","94611","94616","94670","94721","94722","94802","94803","94804","94961","98820","99169","99929","99930","99931","99932","99933","99934","99935","99936","99937","99940","99941","99942","99943","99944","99946"],"!UpdateSecondPartyData":["101283","101424","103496","103599","104019","104033","104040","104042","104043","104044","104507","104508","104509","104510","104521","104522","104523","104524","104525","104526","104527","104528","104529","104530","104531","104532","104533","104534","104535","104536","104537","104538","104539","104540","104541","104542","104543","104544","104545","104546","104547","104548","104549","104550","104551","104552","104553","104554","104555","104556","104557","104558","104559","104560","104561","104562","104563","104564","104693","104940","104941","104946","104947","104948","104949","104950","104951","104952","104953","104954","104955","104956","104957","104958","104959","104960","104961","104962","104964","104966","104967","104968","104969","106904","107240","107241","107511","107986","107987","108271","108473","108535","108539","109299","109506","114093","114094","114095","114289","114290","114456","115387","115388","122080","122081","122309","122329","127586","127876","127877","127878","127879","127880","127881","127882","127883","127884","127885","127888","127889","127890","127891","128953","132165","132166","133968","135256","135738","135889","135890","136103","136816","98729","98732","98737","98813","99839","99840","99841","99842","99843","99844","99845","99846","99847","99848","99849","99850","99851","99852","99853","99968"],"!UpdateThirdPartyData":["100381","100526","101074","110626","110628","113066","113069","113071","113072","113608","113800","113801","113802","113804","114083","115273","115274","115276","115862","115863","116672","116673","117075","117370","117539","117703","118623","118624","118625","118626","118627","118628","118629","118630","121833","122378","123558","123778","123780","126495","127375","127377","127652","128356","129469","131684","131686","131688","131689","131690","131844","133814","134607","134608","134611","134613","136580","88161","88162","88163","88164","88165","88167","88168","88822","88823","89055","89056","89073","89076","89078","89080","89084","89089","90805","90806","90807","90808","90810","90811","90814","90815","92795","93874","93876","94259","94260","94345","94500","94501","94507","94509","94511","94614","94615","94620","94621","94636","94725","94726","94728","94729","94730","94732","94733","94734","94736","94740","94743","94744","95194","97804","97805","99450","99452","99980"],FormSubmission:["136458"],LinkClick:["136448"],Pageview:["100381","100526","100884","101074","101075","101259","106426","106427","106428","106781","106793","106839","106883","106971","107493","107498","107513","107686","107696","107946","107947","107948","107949","109203","109205","109405","109759","110626","110628","113066","113069","113071","113072","113607","113608","113800","113801","113802","113804","113805","113806","113807","113808","113809","113810","113811","113812","113813","113814","113815","113816","113817","113818","113819","113820","113821","113822","113823","113824","113825","113826","113827","113828","113829","113833","114083","114693","114694","114695","114834","115188","115272","115273","115274","115276","115453","115860","115861","115862","115863","115958","116672","116673","116697","116698","117069","117070","117071","117072","117073","117074","117075","117076","117077","117538","117539","117711","117867","118623","118624","118625","118626","118627","118628","118629","118630","120526","120531","120551","121833","122309","122378","123558","123778","123780","126495","127375","127377","128356","129469","131528","131529","131684","131686","131688","131689","131690","131844","133814","133941","133942","133943","133944","133945","133946","133947","133948","133949","133950","133951","133952","133953","133954","133956","133961","133962","133963","133964","133965","133966","133967","134173","134607","134608","134611","134613","135891","135892","136101","136102","136343","136344","136353","136462","136463","136464","136465","136580","85200","88161","88162","88823","89073","89076","89078","89080","89084","89089","90805","90806","90807","90808","90810","90811","90814","90815","92795","93873","93874","93876","94257","94259","94260","94344","94345","94346","94347","94434","94494","94500","94501","94506","94507","94509","94511","94612","94614","94615","94619","94620","94621","94627","94636","94638","94668","94724","94725","94726","94727","94728","94729","94730","94732","94733","94734","94735","94736","94740","94742","94743","94744","95194","95578","97804","97805","98061","98425","98503","98504","98505","98506","98729","98732","98737","98955","98956","98957","98958","98959","98960","98961","98962","98963","98964","98965","98966","98967","98968","98969","98970","98971","98972","98973","98974","99029","99040","99041","99042","99043","99044","99045","99046","99047","99048","99049","99050","99051","99052","99053","99054","99055","99057","99058","99062","99063","99064","99065","99066","99067","99068","99069","99070","99071","99072","99073","99074","99075","99076","99077","99078","99079","99080","99450","99452","99839","99840","99841","99842","99843","99844","99845","99846","99847","99848","99849","99850","99851","99852","99853","99968","99980"],PageviewComplete:["107513","107686","107696","109405","120526","120531","127377","136102","136357","136459","136461","136462","136465","136466","136471"],PageviewEngagement:["136345","136348","136357","136459","136462","136465","136466","136471"],SegmentEntry:["107513","107686","107696","109405","127377","136102","136461"],SegmentExit:["120526","120531","136461"],SlotClicked:["136447","94812"],SlotViewable:["136456"],VideoAdPlay:["136348"],VideoEvent:["136466","136471"],VideoPlay:["113073","136345"]}||{}}}();function Ot(e){return((e,r)=>Nr(Lt(e,r),(r=>Object.assign(Object.assign({},r),{userId:e.userId}))))(e,Ft)}function Ht(e,r){const t=Nr((e=>ht(e,((e,r)=>r.state?it({[r.checksum]:r.state}):nt)))(e),tr,et((e=>a(new Map)))),n=Nr(tr(r),et((e=>a(new Map))));return Nr(function(e,r){return Mr("delta",e,r)}(t,n),(e=>rr(e)))||{}}!function(e){const r=self;function t(e,t,n,i){function a(t){if("function"!=typeof r.postMessage)return e.ports[0].postMessage(t);r.postMessage(t)}if(!n)return a([t,null,i]);"undefined"!=typeof console&&"error"in console&&console.error("Worker caught an error:",n),a([t,n])}r.addEventListener("message",(function(r){if(n=r,!Array.isArray(n.data)||2!==n.data.length)return;var n;const i=r.data,[a,o]=i;if("function"==typeof e)return function(e,r,n,i){const a=function(e,r){try{return{res:e(r)}}catch(e){return{err:e}}}(r,i);return Boolean(null===(o=a)||void 0===o?void 0:o.err)?t(e,n,a.err):!(c=a.res)||"object"!=typeof c&&"function"!=typeof c||"function"!=typeof c.then?t(e,n,null,a.res):void a.res.then((function(r){t(e,n,null,r)}),(function(r){t(e,n,r)}));var o,c}(r,e,a,o);t(r,a,new Error("Please pass a function into register()."))}))}((e=>"QLE"===e.engine?Ot(e):"SSE"===e.engine?function(e){switch(e.type){case"delta":return Ht(e.stateMap,e.lastSentStateMapWithChecksum);case"noop":return{}}}(e):void 0))})();',"Worker",void 0,void 0)}},477:e=>{e.exports=function(e,t,r,i){var n=self||window;try{try{var s;try{s=new n.Blob([e])}catch(t){(s=new(n.BlobBuilder||n.WebKitBlobBuilder||n.MozBlobBuilder||n.MSBlobBuilder)).append(e),s=s.getBlob()}var a=n.URL||n.webkitURL,o=a.createObjectURL(s),c=new n[t](o,r);return a.revokeObjectURL(o),c}catch(i){return new n[t]("data:application/javascript,".concat(encodeURIComponent(e)),r)}}catch(e){if(!i)throw Error("Inline worker is not supported");return new n[t](i,r)}}}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](r,r.exports,__webpack_require__),r.exports}__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var r in t)__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__={};(()=>{var e=__webpack_require__(70),t=__webpack_require__(3735),r=__webpack_require__(8219),i=__webpack_require__(6567),n=__webpack_require__(4673);__webpack_require__(2122);class s{constructor(e,t){this.config=e,this.logger=t,this.defaultReplacementMap=this.filterReplacementMap(this.config.defaultMap),this.replacementMap=this.setReplacementMap(this.config.replacementMap)}get getReplacementMap(){return this.replacementMap}setReplacementMap(e){return this.replacementMap=Object.assign(Object.assign({},this.defaultReplacementMap),this.filterReplacementMap(e)),this.logger.debug(`enrichers[${this.config.name}]: replacement map updated`,this.getReplacementMap),this.getReplacementMap}}class a extends s{filterReplacementMap(e){return e}}const o="geoip",c="enricher:geoip",u={},l={include_geo:(null==u?void 0:u.include_geo)||!0,include_isp:(null==u?void 0:u.include_isp)||!0,include_ip_hash:(null==u?void 0:u.include_ip_hash)||!0,include_ip:(null==u?void 0:u.include_ip)||!1},d=(e,r)=>{const{$ip_geo_info_continent:s,$ip_address:c,$ip_address_hash:u}=n.U,l={$ip_geo_info_continent:s,$ip_address:c,$ip_geo_info:{city:n.U.$ip_geo_info_city,continent:n.U.$ip_geo_info_continent,country:n.U.$ip_geo_info_country,postal_code:n.U.$ip_geo_info_postal_code,province:n.U.$ip_geo_info_province},$ip_address_hash:u,$ip_isp_info:{autonomous_system_number:0,isp:n.U.$ip_isp_info_isp,autonomous_system_organization:n.U.$ip_isp_info_autonomous_system_organization,organization:n.U.$ip_isp_info_organization}},d=(0,t.zG)((0,i.Y3)((()=>({$ip_geo_info:e.geo_info,$ip_geo_info_continent:e.geo_info.continent,$ip_isp_info:e.isp_info,$ip_address:e.ip,$ip_address_hash:e.ip_hash}))),(0,i.fS)((()=>({}))));return new a({name:o,defaultMap:l,replacementMap:d},r)},p=e=>{let{clientContext:t,api:r,permutiveData:i,metrics:n,sessionManager:s,enrichers:a,network:o,logger:u,config:p}=e;const g=e=>{e.isp_info&&t.updateContext(["isp",e.isp_info.isp],["organization",e.isp_info.organization],["autonomous_system_number",e.isp_info.autonomous_system_number],["autonomous_system_organization",e.isp_info.autonomous_system_organization]),e.geo_info&&t.updateContext(["continent",e.geo_info.continent],["country",e.geo_info.country],["city",e.geo_info.city],["province",e.geo_info.province],["postal_code",e.geo_info.postal_code])},h=i.getData(c);return h&&h.session_id===s.getSessionId()?(g(h.data),a.register(d(h.data,u)),Promise.resolve()):(u.debug("enrichers[geoip]: start HTTP request"),m(r,n,p,l).then((e=>(u.debug("enrichers[geoip]: end HTTP request"),g(e),i.setData(c,{session_id:s.getSessionId(),data:e}),e))).catch((e=>(r.reportError(`Error while registering the geoip enricher: got ${e}`),null))).then((e=>{a.register(d(e,u))})))},m=(e,t,r,n)=>{const s=[];return n.include_geo&&s.push(["include","geo"]),n.include_isp&&s.push(["include","isp"]),n.include_ip&&s.push(["include","ip"]),n.include_ip_hash&&s.push(["include","ip_hash"]),e.reqWithMetrics(t,"sdk_http_geoip_seconds",{url:e.urls.getEndpointUrl("/geoip",(0,i.G)(r.apiVersion),s),method:"GET",contentType:"text/plain",dataType:"json",withCredentials:!1})},g=()=>(0,r.B)({load:p});const h=()=>{};var f,_=__webpack_require__(4922);f=_.f,g(),h(),f().then((0,e.g_)((e=>console.warn(`Permutive was not initialized. ${e}`)),t.Q1))})()})();